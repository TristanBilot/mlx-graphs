Search.setIndex({"docnames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate", "api/data/_autosummary_data_utils/mlx_graphs.data.utils.validate_list_of_graph_data", "api/data/batch", "api/data/data", "api/data/index", "api/data/utils", "api/datasets/_autosummary/mlx_graphs.datasets.Dataset", "api/datasets/_autosummary/mlx_graphs.datasets.KarateClubDataset", "api/datasets/_autosummary/mlx_graphs.datasets.QM7bDataset", "api/datasets/_autosummary/mlx_graphs.datasets.TUDataset", "api/datasets/index", "api/loaders/_autosummary/mlx_graphs.loaders.Dataloader", "api/loaders/index", "api/nn/_autosummary/mlx_graphs.nn.GATConv", "api/nn/_autosummary/mlx_graphs.nn.GCNConv", "api/nn/_autosummary/mlx_graphs.nn.GINConv", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock", "api/nn/_autosummary/mlx_graphs.nn.Linear", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool", "api/nn/index", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.one_hot", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_duplicate_directed_edges", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_undirected", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features", "api/utils/array_ops", "api/utils/index", "api/utils/scatter", "api/utils/sorting", "api/utils/topology", "api/utils/transformations", "api/utils/validators", "index", "install", "tutorials/notebooks/benchmark_pyg_dgl_mxg", "tutorials/notebooks/graph_classification", "tutorials/quickstart"], "filenames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch.rst", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate.rst", "api/data/_autosummary_data_utils/mlx_graphs.data.utils.validate_list_of_graph_data.rst", "api/data/batch.rst", "api/data/data.rst", "api/data/index.rst", "api/data/utils.rst", "api/datasets/_autosummary/mlx_graphs.datasets.Dataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.KarateClubDataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.QM7bDataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.TUDataset.rst", "api/datasets/index.rst", "api/loaders/_autosummary/mlx_graphs.loaders.Dataloader.rst", "api/loaders/index.rst", "api/nn/_autosummary/mlx_graphs.nn.GATConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GCNConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GINConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock.rst", "api/nn/_autosummary/mlx_graphs.nn.Linear.rst", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing.rst", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv.rst", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool.rst", "api/nn/index.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.one_hot.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_duplicate_directed_edges.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_undirected.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features.rst", "api/utils/array_ops.rst", "api/utils/index.rst", "api/utils/scatter.rst", "api/utils/sorting.rst", "api/utils/topology.rst", "api/utils/transformations.rst", "api/utils/validators.rst", "index.rst", "install.rst", "tutorials/notebooks/benchmark_pyg_dgl_mxg.ipynb", "tutorials/notebooks/graph_classification.ipynb", "tutorials/quickstart.rst"], "titles": ["mlx_graphs.data.data.GraphData", "mlx_graphs.data.batch.GraphDataBatch", "mlx_graphs.data.batch.batch", "mlx_graphs.data.batch.unbatch", "mlx_graphs.data.collate.collate", "mlx_graphs.data.utils.validate_list_of_graph_data", "Batch Objects", "Data Objects", "Data", "Utils", "mlx_graphs.datasets.Dataset", "mlx_graphs.datasets.KarateClubDataset", "mlx_graphs.datasets.QM7bDataset", "mlx_graphs.datasets.TUDataset", "Datasets", "mlx_graphs.loaders.Dataloader", "Loaders", "mlx_graphs.nn.GATConv", "mlx_graphs.nn.GCNConv", "mlx_graphs.nn.GINConv", "mlx_graphs.nn.GraphNetworkBlock", "mlx_graphs.nn.Linear", "mlx_graphs.nn.MessagePassing", "mlx_graphs.nn.SAGEConv", "mlx_graphs.nn.global_add_pool", "mlx_graphs.nn.global_max_pool", "mlx_graphs.nn.global_mean_pool", "Neural Networks", "mlx_graphs.utils.array_ops.broadcast", "mlx_graphs.utils.array_ops.expand", "mlx_graphs.utils.array_ops.one_hot", "mlx_graphs.utils.scatter.degree", "mlx_graphs.utils.scatter.invert_sqrt_degree", "mlx_graphs.utils.scatter.scatter", "mlx_graphs.utils.scatter.scatter_add", "mlx_graphs.utils.scatter.scatter_max", "mlx_graphs.utils.scatter.scatter_mean", "mlx_graphs.utils.scatter.scatter_softmax", "mlx_graphs.utils.sorting.sort_edge_index", "mlx_graphs.utils.sorting.sort_edge_index_and_features", "mlx_graphs.utils.topology.get_num_hops", "mlx_graphs.utils.topology.is_directed", "mlx_graphs.utils.topology.is_undirected", "mlx_graphs.utils.transformations.add_self_loops", "mlx_graphs.utils.transformations.get_src_dst_features", "mlx_graphs.utils.transformations.get_unique_edge_indices", "mlx_graphs.utils.transformations.remove_duplicate_directed_edges", "mlx_graphs.utils.transformations.remove_self_loops", "mlx_graphs.utils.transformations.to_adjacency_matrix", "mlx_graphs.utils.transformations.to_edge_index", "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "mlx_graphs.utils.transformations.to_undirected", "mlx_graphs.utils.validators.validate_adjacency_matrix", "mlx_graphs.utils.validators.validate_edge_index", "mlx_graphs.utils.validators.validate_edge_index_and_features", "Array ops", "Utils", "Scatter", "Sorting", "Topology", "Transformations", "Validators", "MLX-graphs", "Installation", "Benchmarking mlx-graphs", "Graph Classification", "Quickstart"], "terms": {"class": [0, 1, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 62, 64, 65, 66], "edge_index": [0, 1, 4, 17, 18, 19, 20, 22, 23, 31, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 62, 64, 65, 66], "mlx": [0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63, 65, 66], "core": [0, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 64, 65, 66], "arrai": [0, 1, 4, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 62, 65, 66], "none": [0, 10, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 41, 42, 43, 47, 48, 51, 62, 64, 65], "node_featur": [0, 1, 17, 18, 19, 20, 22, 23, 24, 25, 26, 40, 44, 62, 64, 65, 66], "edge_featur": [0, 17, 20, 39, 41, 42, 43, 47, 48, 50, 51, 54, 65, 66], "graph_featur": [0, 20, 66], "node_label": [0, 66], "edge_label": [0, 66], "graph_label": [0, 64, 65, 66], "kwarg": [0, 1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 62, 66], "repres": [0, 19, 22, 23, 38, 39, 43, 44, 47, 48, 49, 50, 65], "graph": [0, 1, 2, 4, 10, 11, 13, 15, 17, 19, 20, 22, 23, 24, 25, 26, 41, 42, 43, 47, 48, 51, 63], "object": [0, 1, 2, 3, 4, 8, 62, 65, 66], "option": [0, 10, 12, 13, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 33, 41, 42, 43, 47, 48, 51, 66], "featur": [0, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 39, 41, 42, 43, 44, 47, 48, 50, 51, 65, 66], "label": [0, 30, 64, 65, 66], "paramet": [0, 1, 2, 3, 4, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 65], "edg": [0, 1, 10, 11, 17, 19, 20, 23, 31, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 65, 66], "index": [0, 17, 19, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 48, 49, 50, 51, 65, 66], "topologi": [0, 20, 56, 66], "shape": [0, 1, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 33, 37, 43, 47, 64, 65, 66], "2": [0, 1, 11, 17, 19, 20, 22, 23, 33, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 64, 65, 66], "num_edg": [0, 17, 19, 22, 23, 38, 39, 43, 44, 47, 48, 49, 65, 66], "num_nod": [0, 31, 32, 33, 37, 43, 48, 65, 66], "num_node_featur": [0, 10, 64, 65, 66], "contain": [0, 4, 13, 20, 33, 34, 35, 36, 37, 38, 39, 43, 44, 47, 65, 66], "each": [0, 4, 11, 15, 17, 20, 24, 25, 26, 30, 31, 32, 39, 41, 42, 43, 44, 47, 48, 49, 51, 65, 66], "node": [0, 1, 4, 10, 11, 17, 18, 19, 20, 22, 23, 24, 25, 26, 31, 32, 43, 44, 47, 48, 49, 65, 66], "num_edge_featur": [0, 10, 43, 47, 65, 66], "num_graph_featur": [0, 10, 65, 66], "global": [0, 20, 24, 25, 26, 66], "num_node_label": [0, 66], "num_edge_label": [0, 66], "1": [0, 1, 4, 15, 17, 19, 20, 22, 23, 24, 25, 26, 30, 31, 33, 37, 43, 45, 48, 49, 50, 62, 64, 65, 66], "num_graph_label": [0, 66], "addit": [0, 66], "keyword": 0, "argument": [0, 22, 66], "store": [0, 2, 10, 12, 13, 62], "ani": [0, 1, 18, 21, 22, 62, 63, 66], "other": [0, 20, 28, 62, 64, 65, 66], "custom": [0, 19, 62], "attribut": [0, 1, 4, 20, 65], "method": [0, 1, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 33, 65, 66], "__cat_dim__": 0, "kei": 0, "str": [0, 10, 12, 13, 64], "arg": [0, 21, 22], "int": [0, 10, 15, 17, 18, 21, 23, 28, 30, 31, 33, 36, 37, 40, 43, 48, 62], "thi": [0, 10, 11, 13, 17, 21, 22, 32, 40, 62, 64, 65, 66], "can": [0, 1, 4, 20, 22, 62, 63, 64, 65, 66], "overriden": 0, "when": [0, 65], "batch": [0, 4, 8, 15, 24, 25, 26, 64, 65], "i": [0, 4, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 35, 40, 41, 42, 43, 62, 63, 64, 65, 66], "us": [0, 1, 4, 13, 17, 18, 20, 21, 22, 23, 33, 43, 62, 63, 64, 65, 66], "given": [0, 22, 30, 31, 33, 39, 41, 42, 43, 44, 47, 51], "name": [0, 10, 13, 64, 66], "return": [0, 2, 3, 4, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 64, 65], "dimens": [0, 29, 33], "where": [0, 1, 10, 12, 13, 19, 20, 23, 30, 34, 35, 38, 39, 65], "concaten": [0, 1, 4, 65, 66], "happen": 0, "dure": [0, 22, 31], "By": [0, 4, 22, 30, 65], "default": [0, 4, 10, 12, 13, 15, 19, 21, 22, 23, 30, 31, 33, 43, 48, 49, 50, 65, 66], "all": [0, 1, 4, 13, 20, 24, 25, 26, 30, 33, 43, 62, 65, 66], "axi": [0, 33, 36, 37, 65], "e": [0, 13, 20, 32, 63, 65], "g": [0, 13, 64, 65], "ar": [0, 10, 13, 19, 20, 34, 35, 36, 37, 43, 45, 62, 65, 66], "0": [0, 1, 4, 17, 19, 23, 24, 25, 26, 33, 36, 37, 45, 49, 50, 64, 65, 66], "which": [0, 4, 20, 33, 36, 37, 46, 65, 66], "chang": 0, "while": 0, "type": [0, 2, 3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65], "The": [0, 10, 11, 13, 17, 19, 20, 23, 24, 25, 26, 29, 34, 35, 37, 40, 41, 42, 44, 45, 46, 48, 51, 65, 66], "__inc__": 0, "an": [0, 4, 11, 19, 20, 22, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 39, 46, 48, 49, 50, 51, 52, 53, 54, 62, 65, 66], "integ": 0, "indic": [0, 4, 17, 22, 24, 25, 26, 31, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45], "increment": [0, 4], "valu": [0, 17, 19, 25, 26, 31, 32, 33, 34, 35, 36, 37, 43], "appli": [0, 18, 19, 24, 25, 26, 33, 34, 35, 37], "elemnt": 0, "base": [0, 4, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 41, 42, 44, 66], "number": [0, 4, 10, 15, 17, 30, 31, 33, 40, 43, 48, 64, 65], "previou": [0, 4], "avoid": 0, "duplic": [0, 34, 35, 46], "cnot": 0, "keep": 0, "origin": [0, 13, 29, 65, 66], "If": [0, 21, 24, 25, 26, 31, 33, 34, 35, 41, 42, 43, 66], "should": [0, 10, 64, 66], "set": [0, 13, 20, 21, 23, 30, 65], "behavior": 0, "properti": [0, 10, 13, 65, 66], "num_edge_class": [0, 10], "current": [0, 63], "num_graph_class": [0, 10, 64, 65], "num_node_class": [0, 10, 66], "to_dict": 0, "dict": [0, 4, 22], "convert": [0, 48, 49, 50, 51, 66], "dictionari": 0, "A": [0, 12, 13, 20, 29, 38, 39, 43, 44, 47, 49, 50, 65, 66], "list": [1, 2, 3, 4, 5, 10, 15, 65, 66], "graphdata": [1, 2, 3, 4, 5, 8, 10, 15, 23, 65, 66], "multipl": [1, 4, 15, 65, 66], "singl": [1, 2, 65, 66], "unifi": [1, 4, 62], "effici": [1, 62, 65, 66], "comput": [1, 17, 19, 22, 23, 31, 32, 36, 37, 45, 62, 65, 66], "parallel": [1, 65, 66], "over": [1, 13, 15, 18, 66], "remain": [1, 4, 65], "disconnect": [1, 4, 66], "mean": [1, 17, 22, 23, 26, 33, 36, 62, 64, 65], "pair": 1, "have": [1, 20, 32, 64], "common": [1, 64], "especi": 1, "speed": [1, 62, 64, 66], "up": [1, 62, 65, 66], "classif": [1, 11, 13, 62, 64, 66], "task": [1, 65, 66], "easili": [1, 65, 66], "fit": [1, 66], "memori": [1, 62, 66], "process": [1, 10, 11, 12, 13, 62, 65, 66], "togeth": [1, 66], "exampl": [1, 17, 19, 20, 23, 33, 37, 40, 45, 49, 50, 65, 66], "from": [1, 2, 3, 4, 11, 12, 19, 21, 22, 23, 31, 40, 43, 47, 62, 64, 65, 66], "import": [1, 19, 23, 62, 64, 65, 66], "mx": [1, 17, 19, 21, 23, 33, 37, 40, 45, 49, 50, 62, 64, 65, 66], "zero": [1, 30, 32, 66], "3": [1, 17, 19, 23, 49, 50, 64, 65, 66], "ones": [1, 23, 64, 66], "4": [1, 17, 19, 23, 40, 64, 65, 66], "9": [1, 64, 65, 66], "int32": [1, 65, 66], "float32": [1, 19, 23, 65, 66], "num_graph": [1, 10, 65, 66], "__init__": [1, 15, 40, 62, 64, 65, 66], "graphdatabatch": [2, 3, 8, 65, 66], "construct": 2, "merg": 2, "larg": [2, 23, 62, 66], "reconstruct": 3, "graph_list": [4, 64], "specif": [4, 62], "dim": [4, 28], "apart": 4, "along": [4, 25, 26, 36, 37, 65], "independ": [4, 65], "final": [4, 19, 22, 65], "cumsum": 4, "per": [4, 15, 65], "big": 4, "well": 4, "privat": 4, "behind": 4, "hood": 4, "These": [4, 36, 37, 66], "start": [4, 63, 64, 66], "underscor": 4, "_": [4, 64], "ignor": 4, "user": [4, 19], "func": [5, 52, 53, 54], "decor": [5, 52, 53, 54], "function": [5, 17, 18, 21, 22, 23, 24, 25, 26, 33, 41, 42, 52, 53, 54, 62, 64, 65, 66], "check": [5, 41, 42, 52, 53, 54], "valid": [5, 56], "mlx_graph": [8, 62, 64, 65, 66], "unbatch": 8, "collat": [8, 66], "util": [8, 62, 66], "validate_list_of_graph_data": 8, "base_dir": [10, 12, 13], "abc": 10, "download": [10, 11, 12, 13, 66], "must": [10, 29], "implement": [10, 20, 22, 62, 65, 66], "children": 10, "data": [10, 13, 15, 23, 62, 64, 65], "within": [10, 15, 34, 35, 62, 65, 66], "self": [10, 11, 12, 13, 18, 21, 22, 24, 25, 26, 40, 43, 47, 62, 64, 65, 66], "creation": [10, 66], "preprocess": 10, "typic": 10, "done": [10, 65], "overridden": 10, "directori": [10, 12, 13], "file": [10, 12, 13, 62], "local": [10, 12, 13, 66], "mlx_graphs_data": [10, 12, 13, 64], "abstract": [10, 66], "raw_path": [10, 11, 12, 13, 66], "predict": [10, 65], "possibli": [10, 11, 12, 13], "save": [10, 11, 12, 13, 66], "processed_path": [10, 11, 12, 13], "path": [10, 13, 66], "raw": [10, 13, 66], "zachari": 11, "": [11, 17, 20, 21, 62, 64, 65, 66], "karat": 11, "club": 11, "netowork": 11, "inform": [11, 40], "flow": 11, "model": [11, 20, 22, 40, 64, 66], "conflict": 11, "fission": 11, "small": 11, "group": [11, 36, 37], "simpl": [11, 65], "ha": [11, 62], "34": 11, "156": 11, "undirect": [11, 42, 51], "belong": 11, "one": [11, 30, 51, 65], "qm7b": [12, 66], "moleculenet": 12, "benchmark": [12, 13, 62], "molecular": [12, 66], "machin": 12, "learn": [12, 19, 20, 23, 66], "paper": [12, 19, 23, 32, 62, 66], "consist": 12, "7": [12, 64, 65], "211": 12, "molecul": 12, "14": [12, 65], "regress": [12, 13, 65], "target": [12, 38, 39, 43, 44, 47, 48, 49], "clean": 13, "bool": [13, 15, 17, 18, 19, 21, 23, 41, 42, 43, 62], "fals": [13, 15, 19, 21, 41, 42, 62, 64, 65], "collect": [13, 65, 66], "120": [13, 65], "made": [13, 66], "avail": [13, 32, 62, 63, 66], "tu": 13, "dortmund": 13, "univers": 13, "access": [13, 62, 65], "here": [13, 20, 62, 65, 66], "also": [13, 62, 64, 65, 66], "support": [13, 66], "version": [13, 63], "onli": [13, 40], "non": 13, "isomorph": [13, 19], "present": [13, 20, 34, 35, 45], "understand": [13, 65], "bia": [13, 17, 18, 21, 23, 62], "load": [13, 15, 66], "mutag": [13, 64, 65], "protein": 13, "imdb": 13, "binari": 13, "etc": 13, "whether": [13, 15, 17, 18, 19, 23, 41, 42, 43], "dataset": [15, 62, 64], "sequenc": [15, 65, 66], "batch_siz": [15, 64, 65, 66], "shuffl": [15, 64, 65], "iter": [15, 65, 66], "union": [15, 22, 43, 44, 47, 51], "reshuffl": 15, "order": [15, 65, 66], "node_features_dim": [17, 18, 23, 24, 25, 26, 62, 66], "out_features_dim": [17, 18, 23, 62, 66], "head": 17, "concat": 17, "true": [17, 18, 21, 23, 41, 42, 43, 62, 64, 65], "negative_slop": 17, "float": [17, 19, 43], "dropout": [17, 64, 65], "edge_features_dim": 17, "messagepass": [17, 18, 19, 23, 40, 62], "attent": 17, "network": [17, 19, 20, 22, 40, 62, 65], "convolut": [17, 18, 19, 23, 62, 65], "layer": [17, 19, 20, 21, 23, 62, 64, 65], "size": [17, 18, 20, 23, 31, 33, 36, 37, 65, 66], "input": [17, 18, 19, 20, 21, 22, 23, 34, 35, 36, 37, 44, 49, 50, 65, 66], "output": [17, 18, 19, 21, 23, 31, 33, 36, 37, 49, 50, 65], "embed": [17, 18, 19, 22, 23, 65], "reduct": [17, 33, 64], "project": [17, 18, 23], "slope": 17, "leaki": 17, "relu": [17, 19, 40, 64, 65], "probabl": 17, "p": [17, 64, 65], "conv": [17, 19, 23, 66], "16": [17, 19, 23, 40, 65, 66], "32": [17, 19, 23, 66], "random": [17, 19, 64, 65, 66], "uniform": [17, 19], "low": [17, 19, 62], "high": [17, 19], "5": [17, 19, 23, 33, 37, 49, 50, 64, 65, 66], "h": [17, 19, 23, 64, 65, 66], "64": [17, 64, 65], "__call__": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 40, 62, 64, 65], "forward": [17, 19, 20, 23, 62, 64, 65], "pass": [17, 19, 20, 22, 23, 62, 65], "messag": [17, 19, 20, 22, 23, 62], "src_featur": [17, 22, 62], "dst_featur": [17, 22, 62], "alpha_src": 17, "alpha_dst": 17, "follow": [17, 33, 63, 64, 65, 66], "gat": 17, "propag": [17, 22, 62], "rule": 17, "sourc": [17, 20, 22, 28, 34, 35, 38, 39, 43, 44, 47, 48, 49, 66], "destin": [17, 20, 22, 44, 66], "includ": [17, 65], "compat": [17, 29], "precomput": 17, "1d": 17, "either": [17, 19, 22, 62], "src": [17, 22, 28, 31, 33, 34, 35, 37], "dst": [17, 22, 31], "softmax": [17, 22, 33, 37], "gcn": [18, 32], "edge_weight": [18, 19, 22, 23, 31, 62], "normal": [18, 66], "call": [18, 21, 22, 24, 25, 26, 62], "mlp": 19, "modul": [19, 20, 22, 40, 64, 65], "ep": 19, "learn_ep": 19, "how": [19, 20, 65], "power": 19, "neural": [19, 22, 62], "mathbf": [19, 23], "_i": [19, 23], "text": 19, "left": 19, "epsilon": 19, "cdot": [19, 23], "x": [19, 23, 40, 45, 64, 66], "sum_": 19, "j": [19, 23], "mathcal": [19, 23], "n": [19, 20, 23, 65], "_j": [19, 23], "right": 19, "respect": [19, 62, 65], "denot": [19, 23, 65], "provid": [19, 20, 24, 25, 26, 30, 31, 33, 41, 42, 43, 65, 66], "fix": 19, "callabl": [19, 20], "initi": [19, 20, 21, 62], "term": [19, 66], "node_feat_dim": 19, "out_feat_dim": 19, "sequenti": 19, "linear": [19, 40, 62, 64, 65], "536501": 19, "154826": 19, "745569": 19, "31547": 19, "0962588": 19, "108504": 19, "415889": 19, "0498145": 19, "597379": 19, "194553": 19, "251498": 19, "207561": 19, "119966": 19, "0159533": 19, "276559": 19, "0258303": 19, "194533": 19, "15515": 19, "21477": 19, "169684": 19, "485867": 19, "0194768": 19, "145761": 19, "139433": 19, "133289": 19, "0279559": 19, "358095": 19, "0443346": 19, "11571": 19, "114396": 19, "dtype": [19, 23, 49, 50, 65, 66], "weight": [19, 21, 23, 31, 62], "leverag": [19, 23, 31, 62, 65, 66], "node_model": 20, "edge_model": 20, "graph_model": 20, "gener": [20, 65], "block": [20, 66], "defin": [20, 65, 66], "take": [20, 25, 26], "same": [20, 64], "associ": [20, 41, 42, 43, 47, 51, 65, 66], "f_n": 20, "f_e": 20, "itself": [20, 66], "f_u": 20, "specifi": [20, 36, 37, 43, 66], "column": [20, 30, 66], "vector": [20, 30], "updat": [20, 22, 43, 47, 64, 65], "depend": [20, 64], "thei": [20, 43, 66], "act": 20, "flexibl": 20, "meta": 20, "architectur": [20, 62, 64], "like": [20, 28, 65, 66], "deep": [20, 64], "relat": [20, 62], "more": [20, 62, 65, 66], "see": 20, "For": [20, 63, 65, 66], "usag": 20, "refer": [20, 22], "battaglia": 20, "et": [20, 22], "al": [20, 22], "induct": [20, 23, 66], "bias": 20, "tupl": [20, 22, 29, 38, 39, 43, 44, 47, 50, 51], "input_dim": 21, "output_dim": 21, "xavier": 21, "glorot": 21, "initit": 21, "inherit": [21, 22, 65], "instead": [21, 31, 66], "dimension": [21, 48], "aggr": [22, 33, 62], "liter": [22, 33], "add": [22, 33, 43, 66], "max": [22, 33, 35, 65], "creat": [22, 30, 64, 65, 66], "mpnn": 22, "build": [22, 62, 66], "arbitrari": 22, "gnn": [22, 40, 62, 65], "paradigm": 22, "inspir": 22, "pytorch": [22, 64, 65], "geometr": [22, 64], "aggreg": [22, 23, 40], "strategi": [22, 65, 66], "gilmer": 22, "quantum": 22, "chemistri": 22, "fei": 22, "pyg": [22, 65, 66], "receiv": 22, "between": [22, 28, 65], "connect": [22, 65], "directli": [22, 62, 65], "integr": [22, 65, 66], "scalar": 22, "weigh": 22, "neighbor": 22, "message_kwarg": [22, 62], "aggregate_kwarg": 22, "update_kwarg": 22, "them": [22, 64, 66], "represent": [22, 23, 24, 25, 26, 48, 49, 50, 66], "distinct": [22, 65], "update_nod": 22, "graphsag": [23, 62], "w": [23, 65], "_1": 23, "_2": 23, "bigoplus_": 23, "bigoplu": 23, "65429": [23, 66], "376169": [23, 66], "04172": [23, 66], "919106": [23, 66], "42576": [23, 66], "490938": [23, 66], "05823": [23, 66], "295776": [23, 66], "075439": [23, 66], "104383": [23, 66], "031947": [23, 66], "351897": [23, 66], "batch_indic": [24, 25, 26, 64, 65], "sum": [24, 34, 65], "obtain": [24, 25, 26], "level": [24, 25, 26, 62], "pool": [24, 25, 26, 65], "otheris": [24, 25, 26], "num_batch": [24, 25, 26, 65], "its": [24, 25, 26, 65, 66], "wise": [25, 26], "maximum": [25, 35], "averag": 26, "make": 28, "mai": [28, 63], "requir": 28, "some": [28, 64, 65, 66], "situat": 28, "match": 28, "new": [28, 29, 62, 65], "new_shap": 29, "desir": 29, "view": 29, "num_class": [30, 64], "hot": [30, 65], "encod": [30, 65], "element": [30, 32, 33], "num_el": 30, "transform": [30, 56, 65, 66], "max_label": 30, "count": 31, "ocurr": 31, "usual": [31, 66], "infer": [31, 43, 62], "length": [31, 32], "degre": [32, 65], "invert": 32, "squar": 32, "root": 32, "note": 32, "temporari": 32, "workaround": 32, "deal": 32, "infinit": 32, "accord": 32, "boolean": 32, "isn": 32, "t": [32, 65, 66], "yet": 32, "so": 32, "we": [32, 63, 64, 65, 66], "pre": 32, "pad": 32, "isol": 32, "out_siz": [33, 36, 37], "perform": [33, 65, 66], "oper": [33, 34, 35, 36, 37, 62, 65], "empti": [33, 34, 35], "tensor": [33, 43, 47], "first": [33, 38, 39, 45, 64, 65, 66], "emploi": [33, 65], "item": [33, 65, 66], "assign": 34, "often": [34, 35], "determin": [34, 35, 36, 37, 41, 42], "result": [34, 35, 37, 48, 62, 65], "after": [34, 35, 37], "kept": 35, "undergo": [36, 37], "row": [38, 39, 66], "second": [38, 39, 45], "correspond": [38, 39, 48], "nn": [40, 62, 64, 65, 66], "hop": 40, "work": [40, 65], "def": [40, 62, 64, 65, 66], "super": [40, 62, 64, 65, 66], "conv1": [40, 64, 65], "gcnconv": [40, 64, 65], "conv2": [40, 64, 65], "lin": [40, 64], "direct": [41, 46], "consid": [41, 42, 62], "both": [41, 42, 62, 66], "otherwis": [41, 42], "fill_valu": 43, "allow_rep": 43, "loop": [43, 47, 64], "fill": 43, "even": 43, "alreadi": 43, "extract": [44, 65], "edge_index_1": 45, "edge_index_2": 45, "NOT": 45, "remov": [46, 47], "without": [46, 47, 62], "adjac": [48, 49, 50, 52, 66], "matrix": [48, 49, 50, 52, 66], "adjacency_matrix": [49, 50], "uint32": [49, 50], "spars": 50, "sort": 56, "scatter": 56, "op": 56, "librari": [62, 64, 66], "built": [62, 66], "upon": 62, "appl": 62, "fast": 62, "train": [62, 64, 65, 66], "silicon": 62, "been": 62, "design": 62, "run": [62, 63, 64], "chip": 62, "fulli": 62, "gpu": [62, 64, 65, 66], "cpu": [62, 65], "hardwar": 62, "mac": [62, 65, 66], "thank": 62, "primit": 62, "show": 62, "10x": 62, "improv": 62, "framework": [62, 64, 65], "scalabl": 62, "With": 62, "live": 62, "share": 62, "setup": 62, "allow": [62, 65], "entir": [62, 66], "capac": 62, "consequ": 62, "equip": 62, "substanti": 62, "span": 62, "ten": 62, "gigabyt": 62, "multi": 62, "devic": [62, 65], "elimin": 62, "need": [62, 65, 66], "time": [62, 64, 65, 66], "consum": 62, "transfer": 62, "enabl": [62, 66], "explicitli": 62, "incur": 62, "overhead": 62, "facilit": [62, 65], "resourc": 62, "eas": 62, "straightforward": 62, "approach": [62, 66], "ensur": [62, 66], "properli": 62, "handl": [62, 66], "your": [62, 66], "As": [62, 65], "you": [62, 63, 65], "focu": 62, "exclus": 62, "logic": 62, "worri": 62, "about": 62, "underli": 62, "mechan": 62, "http": [62, 63, 66], "proceed": 62, "neurip": 62, "cc": 62, "paper_fil": 62, "2017": 62, "5dd9db5e033da9c6fb5ba83c7a7ebea9": 62, "pdf": 62, "message_pass": 62, "sageconv": [62, 66], "neigh_proj": 62, "self_proj": 62, "sage": 62, "neigh_featur": 62, "out_featur": 62, "get": 62, "reshap": 62, "quickstart": 62, "loader": [62, 64, 65], "pypi": 63, "To": [63, 65], "pip": [63, 64], "clone": 63, "github": 63, "repo": 63, "git": 63, "com": [63, 66], "tristanbilot": 63, "cd": 63, "Then": 63, "suggest": 63, "separ": 63, "virtual": 63, "environ": 63, "extra": [63, 64], "develop": 63, "document": 63, "purpos": 63, "want": 63, "via": [63, 65], "ml": 63, "explor": [63, 65], "In": [64, 65, 66], "notebook": 64, "ll": [64, 66], "problem": 64, "three": 64, "befor": 64, "instal": 64, "torch": 64, "torch_geometr": 64, "panda": 64, "mlx_nn": 64, "optim": [64, 65], "mlx_optim": 64, "mxg_nn": 64, "mxg_dataset": 64, "mxg_loader": 64, "functool": 64, "partial": 64, "mxg_model": 64, "in_dim": [64, 65], "hidden_dim": [64, 65], "out_dim": [64, 65], "conv3": [64, 65], "global_mean_pool": [64, 65], "loss_fn": [64, 65], "y_hat": [64, 65], "y": [64, 65], "loss": [64, 65], "cross_entropi": [64, 65], "forward_fn": [64, 65], "setup_training_mxg": 64, "hid_siz": 64, "dataload": [64, 65, 66], "eval": [64, 65], "adam": [64, 65], "learning_r": [64, 65], "01": [64, 65], "loss_and_grad_fn": [64, 65], "value_and_grad": [64, 65], "state": [64, 65], "step": 64, "grad": [64, 65], "train_mxg": 64, "epoch": [64, 65], "rang": [64, 65, 66], "torch_nn": 64, "f": [64, 65], "pyg_nn": 64, "pyg_dataset": 64, "pyg_load": 64, "pyg_model": 64, "setup_training_pyg": 64, "lr": 64, "criterion": 64, "crossentropyloss": 64, "out": [64, 66], "backward": 64, "zero_grad": 64, "train_pyg": 64, "6": [64, 65], "dgl_nn": 64, "dgl_dataset": 64, "dgl_loader": 64, "dgl_model": 64, "gatconv": 64, "num_head": 64, "allow_zero_in_degre": 64, "els": 64, "classifi": 64, "local_scop": 64, "ndata": 64, "hg": 64, "mean_nod": 64, "squeez": 64, "8": [64, 65, 66], "setup_training_dgl": 64, "graphdataload": 64, "drop_last": 64, "train_dgl": 64, "now": 64, "readi": 64, "proce": 64, "do": 64, "dd": 64, "tudataset": [64, 65], "let": [64, 65], "config": 64, "auxilirai": 64, "timeit": 64, "dataset_nam": 64, "enumer": 64, "zip": 64, "train_fn": 64, "framework_to_train": 64, "framework_to_setup": 64, "framework_to_dataset": 64, "lambda": 64, "layer_class": 64, "graphconv": 64, "bzr_md": 64, "128": 64, "timeit_repeat": 64, "timeit_numb": 64, "manual_se": 64, "42": [64, 65], "seed": [64, 65], "set_default_devic": [64, 65], "re": [64, 66], "10": [64, 65], "print": [64, 65], "layer_nam": 64, "timer": 64, "repeat": 64, "min": 64, "join": [64, 65, 66], "3f": [64, 65], "817": 64, "808": 64, "447": [64, 65], "960": 64, "483": 64, "694": 64, "goal": 65, "tutori": 65, "go": 65, "through": [65, 66], "mini": 65, "subsequ": 65, "readout": 65, "enhanc": [65, 66], "concept": 65, "defaultdict": 65, "compris": 65, "than": 65, "propos": 65, "chemic": 65, "compound": 65, "vertic": 65, "symbol": 65, "atom": 65, "identifi": 65, "bond": 65, "188": 65, "sampl": 65, "statist": 65, "better": 65, "20": 65, "len": 65, "stat": 65, "append": [65, 66], "num": 65, "k": 65, "v": 65, "2f": 65, "19": 65, "17": 65, "93": 65, "39": 65, "59": 65, "noth": 65, "wrapper": 65, "around": 65, "structur": 65, "similarli": [65, 66], "dglgraph": 65, "dgl": 65, "38": 65, "slice": 65, "end": [65, 66], "anoth": 65, "divid": 65, "test": 65, "train_dataset": 65, "150": 65, "test_dataset": 65, "techniqu": 65, "highli": 65, "recommend": [65, 66], "abil": 65, "therebi": 65, "acceler": [65, 66], "runtim": 65, "basic": [65, 66], "importantli": 65, "maintain": 65, "unconnect": 65, "map": 65, "back": 65, "easi": 65, "retriev": 65, "individu": [65, 66], "train_load": 65, "test_load": 65, "ngraph": 65, "2590": 65, "1168": 65, "63": 65, "int64": 65, "2620": 65, "1179": 65, "22": 65, "720": 65, "337": 65, "21": 65, "It": 65, "respons": [65, 66], "known": 65, "thu": 65, "embedding_s": 65, "our": [65, 66], "supervis": 65, "fashion": 65, "cross": 65, "entropi": 65, "write": 65, "dedic": 65, "later": 65, "gradient": 65, "r": 65, "prefer": 65, "howev": 65, "effortlessli": 65, "switch": 65, "jax": 65, "loss_sum": 65, "acc": 65, "argmax": 65, "train_acc": 65, "test_acc": 65, "11": 65, "30": 65, "best_test_acc": 65, "3d": 65, "best": 65, "accuraci": 65, "022": 65, "387": 65, "014": 65, "667": 65, "684": 65, "013": 65, "640": 65, "658": 65, "660": 65, "633": 65, "507": 65, "526": 65, "647": 65, "580": 65, "012": 65, "680": 65, "753": 65, "605": 65, "700": 65, "737": 65, "12": 65, "010": 65, "711": 65, "13": 65, "713": 65, "632": 65, "15": 65, "687": 65, "011": 65, "733": 65, "18": 65, "747": 65, "579": 65, "23": 65, "707": 65, "24": 65, "25": 65, "727": 65, "26": 65, "27": 65, "28": 65, "29": 65, "gt": 65, "short": 66, "introduct": 66, "cover": 66, "topic": 66, "accept": 66, "coo": 66, "format": 66, "th": 66, "adopt": 66, "abov": 66, "convent": 66, "across": 66, "just": 66, "own": 66, "constructor": 66, "alpha": 66, "to_edge_index": 66, "to_adjacency_matrix": 66, "viceversa": 66, "sever": 66, "drastic": 66, "interfac": 66, "particularli": 66, "whenev": 66, "possibl": 66, "graphs_batch": 66, "intern": 66, "simpli": 66, "similar": 66, "extend": 66, "could": 66, "look": 66, "o": 66, "scipi": 66, "sp": 66, "to_sparse_adjacency_matrix": 66, "qm7bdataset": 66, "file_path": 66, "mat": 66, "deepchem": 66, "io": 66, "s3": 66, "websit": 66, "u": 66, "west": 66, "amazonaw": 66, "mat_path": 66, "loadmat": 66, "tolist": 66, "to_list": 66, "expand_dim": 66, "everi": 66, "two": 66, "onc": 66, "automat": 66, "few": 66, "wide": 66, "expect": 66, "routin": 66, "come": 66, "predefin": 66, "complex": 66, "instanc": 66}, "objects": {"mlx_graphs.data.batch": [[1, 0, 1, "", "GraphDataBatch"], [2, 2, 1, "", "batch"], [3, 2, 1, "", "unbatch"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, 1, 1, "", "__init__"]], "mlx_graphs.data.collate": [[4, 2, 1, "", "collate"]], "mlx_graphs.data.data": [[0, 0, 1, "", "GraphData"]], "mlx_graphs.data.data.GraphData": [[0, 1, 1, "", "__cat_dim__"], [0, 1, 1, "", "__inc__"], [0, 3, 1, "", "num_edge_classes"], [0, 3, 1, "", "num_edge_features"], [0, 3, 1, "", "num_edges"], [0, 3, 1, "", "num_graph_classes"], [0, 3, 1, "", "num_graph_features"], [0, 3, 1, "", "num_node_classes"], [0, 3, 1, "", "num_node_features"], [0, 3, 1, "", "num_nodes"], [0, 1, 1, "", "to_dict"]], "mlx_graphs.data.utils": [[5, 2, 1, "", "validate_list_of_graph_data"]], "mlx_graphs.datasets": [[10, 0, 1, "", "Dataset"], [11, 0, 1, "", "KarateClubDataset"], [12, 0, 1, "", "QM7bDataset"], [13, 0, 1, "", "TUDataset"]], "mlx_graphs.datasets.Dataset": [[10, 1, 1, "", "download"], [10, 3, 1, "", "name"], [10, 3, 1, "", "num_edge_classes"], [10, 3, 1, "", "num_edge_features"], [10, 3, 1, "", "num_graph_classes"], [10, 3, 1, "", "num_graph_features"], [10, 3, 1, "", "num_graphs"], [10, 3, 1, "", "num_node_classes"], [10, 3, 1, "", "num_node_features"], [10, 1, 1, "", "process"], [10, 3, 1, "", "processed_path"], [10, 3, 1, "", "raw_path"]], "mlx_graphs.datasets.KarateClubDataset": [[11, 1, 1, "", "download"], [11, 1, 1, "", "process"]], "mlx_graphs.datasets.QM7bDataset": [[12, 1, 1, "", "download"], [12, 1, 1, "", "process"]], "mlx_graphs.datasets.TUDataset": [[13, 1, 1, "", "download"], [13, 1, 1, "", "process"], [13, 3, 1, "", "processed_path"], [13, 3, 1, "", "raw_path"]], "mlx_graphs.loaders": [[15, 0, 1, "", "Dataloader"]], "mlx_graphs.loaders.Dataloader": [[15, 1, 1, "", "__init__"]], "mlx_graphs.nn": [[17, 0, 1, "", "GATConv"], [18, 0, 1, "", "GCNConv"], [19, 0, 1, "", "GINConv"], [20, 0, 1, "", "GraphNetworkBlock"], [21, 0, 1, "", "Linear"], [22, 0, 1, "", "MessagePassing"], [23, 0, 1, "", "SAGEConv"], [24, 0, 1, "", "global_add_pool"], [25, 0, 1, "", "global_max_pool"], [26, 0, 1, "", "global_mean_pool"]], "mlx_graphs.nn.GATConv": [[17, 1, 1, "", "__call__"], [17, 1, 1, "", "message"]], "mlx_graphs.nn.GCNConv": [[18, 1, 1, "", "__call__"]], "mlx_graphs.nn.GINConv": [[19, 1, 1, "", "__call__"]], "mlx_graphs.nn.GraphNetworkBlock": [[20, 1, 1, "", "__call__"]], "mlx_graphs.nn.Linear": [[21, 1, 1, "", "__call__"]], "mlx_graphs.nn.MessagePassing": [[22, 1, 1, "", "__call__"], [22, 1, 1, "", "aggregate"], [22, 1, 1, "", "message"], [22, 1, 1, "", "propagate"], [22, 1, 1, "", "update_nodes"]], "mlx_graphs.nn.SAGEConv": [[23, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_add_pool": [[24, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_max_pool": [[25, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_mean_pool": [[26, 1, 1, "", "__call__"]], "mlx_graphs.utils.array_ops": [[28, 2, 1, "", "broadcast"], [29, 2, 1, "", "expand"], [30, 2, 1, "", "one_hot"]], "mlx_graphs.utils.scatter": [[31, 2, 1, "", "degree"], [32, 2, 1, "", "invert_sqrt_degree"], [33, 2, 1, "", "scatter"], [34, 2, 1, "", "scatter_add"], [35, 2, 1, "", "scatter_max"], [36, 2, 1, "", "scatter_mean"], [37, 2, 1, "", "scatter_softmax"]], "mlx_graphs.utils.sorting": [[38, 2, 1, "", "sort_edge_index"], [39, 2, 1, "", "sort_edge_index_and_features"]], "mlx_graphs.utils.topology": [[40, 2, 1, "", "get_num_hops"], [41, 2, 1, "", "is_directed"], [42, 2, 1, "", "is_undirected"]], "mlx_graphs.utils.transformations": [[43, 2, 1, "", "add_self_loops"], [44, 2, 1, "", "get_src_dst_features"], [45, 2, 1, "", "get_unique_edge_indices"], [46, 2, 1, "", "remove_duplicate_directed_edges"], [47, 2, 1, "", "remove_self_loops"], [48, 2, 1, "", "to_adjacency_matrix"], [49, 2, 1, "", "to_edge_index"], [50, 2, 1, "", "to_sparse_adjacency_matrix"], [51, 2, 1, "", "to_undirected"]], "mlx_graphs.utils.validators": [[52, 2, 1, "", "validate_adjacency_matrix"], [53, 2, 1, "", "validate_edge_index"], [54, 2, 1, "", "validate_edge_index_and_features"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"mlx_graph": [0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "data": [0, 1, 2, 3, 4, 5, 7, 8, 66], "graphdata": 0, "batch": [1, 2, 3, 6, 66], "graphdatabatch": 1, "unbatch": 3, "collat": 4, "util": [5, 9, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56], "validate_list_of_graph_data": 5, "object": [6, 7], "dataset": [10, 11, 12, 13, 14, 65, 66], "karateclubdataset": 11, "qm7bdataset": 12, "tudataset": 13, "loader": [15, 16, 66], "dataload": 15, "nn": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "gatconv": 17, "gcnconv": 18, "ginconv": 19, "graphnetworkblock": 20, "linear": 21, "messagepass": 22, "sageconv": 23, "global_add_pool": 24, "global_max_pool": 25, "global_mean_pool": 26, "neural": 27, "network": 27, "array_op": [28, 29, 30], "broadcast": 28, "expand": 29, "one_hot": 30, "scatter": [31, 32, 33, 34, 35, 36, 37, 57], "degre": 31, "invert_sqrt_degre": 32, "scatter_add": 34, "scatter_max": 35, "scatter_mean": 36, "scatter_softmax": 37, "sort": [38, 39, 58], "sort_edge_index": 38, "sort_edge_index_and_featur": 39, "topologi": [40, 41, 42, 59], "get_num_hop": 40, "is_direct": 41, "is_undirect": 42, "transform": [43, 44, 45, 46, 47, 48, 49, 50, 51, 60], "add_self_loop": 43, "get_src_dst_featur": 44, "get_unique_edge_indic": 45, "remove_duplicate_directed_edg": 46, "remove_self_loop": 47, "to_adjacency_matrix": 48, "to_edge_index": 49, "to_sparse_adjacency_matrix": 50, "to_undirect": 51, "valid": [52, 53, 54, 61], "validate_adjacency_matrix": 52, "validate_edge_index": 53, "validate_edge_index_and_featur": 54, "arrai": 55, "op": 55, "mlx": [62, 64], "graph": [62, 64, 65, 66], "featur": 62, "exampl": 62, "usag": 62, "instal": [62, 63], "tutori": 62, "api": 62, "build": 63, "from": 63, "sourc": 63, "test": 63, "dev": 63, "benchmark": [63, 64], "doc": 63, "depend": 63, "mxg": 64, "implement": 64, "pyg": 64, "dgl": 64, "classif": 65, "gcn": 65, "model": 65, "quickstart": 66, "repres": 66, "simpl": 66, "custom": 66, "attribut": 66, "oper": 66, "gnn": 66, "layer": 66}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"mlx_graphs.data.data.GraphData": [[0, "mlx-graphs-data-data-graphdata"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, "mlx-graphs-data-batch-graphdatabatch"]], "mlx_graphs.data.batch.batch": [[2, "mlx-graphs-data-batch-batch"]], "mlx_graphs.data.batch.unbatch": [[3, "mlx-graphs-data-batch-unbatch"]], "mlx_graphs.data.collate.collate": [[4, "mlx-graphs-data-collate-collate"]], "mlx_graphs.data.utils.validate_list_of_graph_data": [[5, "mlx-graphs-data-utils-validate-list-of-graph-data"]], "Batch Objects": [[6, "batch-objects"]], "Data Objects": [[7, "data-objects"]], "Data": [[8, "data"]], "Utils": [[9, "utils"], [56, "utils"]], "mlx_graphs.datasets.Dataset": [[10, "mlx-graphs-datasets-dataset"]], "mlx_graphs.datasets.KarateClubDataset": [[11, "mlx-graphs-datasets-karateclubdataset"]], "mlx_graphs.datasets.QM7bDataset": [[12, "mlx-graphs-datasets-qm7bdataset"]], "mlx_graphs.datasets.TUDataset": [[13, "mlx-graphs-datasets-tudataset"]], "Datasets": [[14, "datasets"]], "mlx_graphs.loaders.Dataloader": [[15, "mlx-graphs-loaders-dataloader"]], "Loaders": [[16, "loaders"]], "mlx_graphs.nn.GATConv": [[17, "mlx-graphs-nn-gatconv"]], "mlx_graphs.nn.GCNConv": [[18, "mlx-graphs-nn-gcnconv"]], "mlx_graphs.nn.GINConv": [[19, "mlx-graphs-nn-ginconv"]], "mlx_graphs.nn.GraphNetworkBlock": [[20, "mlx-graphs-nn-graphnetworkblock"]], "mlx_graphs.nn.Linear": [[21, "mlx-graphs-nn-linear"]], "mlx_graphs.nn.MessagePassing": [[22, "mlx-graphs-nn-messagepassing"]], "mlx_graphs.nn.SAGEConv": [[23, "mlx-graphs-nn-sageconv"]], "mlx_graphs.nn.global_add_pool": [[24, "mlx-graphs-nn-global-add-pool"]], "mlx_graphs.nn.global_max_pool": [[25, "mlx-graphs-nn-global-max-pool"]], "mlx_graphs.nn.global_mean_pool": [[26, "mlx-graphs-nn-global-mean-pool"]], "Neural Networks": [[27, "neural-networks"]], "mlx_graphs.utils.array_ops.broadcast": [[28, "mlx-graphs-utils-array-ops-broadcast"]], "mlx_graphs.utils.array_ops.expand": [[29, "mlx-graphs-utils-array-ops-expand"]], "mlx_graphs.utils.array_ops.one_hot": [[30, "mlx-graphs-utils-array-ops-one-hot"]], "mlx_graphs.utils.scatter.degree": [[31, "mlx-graphs-utils-scatter-degree"]], "mlx_graphs.utils.scatter.invert_sqrt_degree": [[32, "mlx-graphs-utils-scatter-invert-sqrt-degree"]], "mlx_graphs.utils.scatter.scatter": [[33, "mlx-graphs-utils-scatter-scatter"]], "mlx_graphs.utils.scatter.scatter_add": [[34, "mlx-graphs-utils-scatter-scatter-add"]], "mlx_graphs.utils.scatter.scatter_max": [[35, "mlx-graphs-utils-scatter-scatter-max"]], "mlx_graphs.utils.scatter.scatter_mean": [[36, "mlx-graphs-utils-scatter-scatter-mean"]], "mlx_graphs.utils.scatter.scatter_softmax": [[37, "mlx-graphs-utils-scatter-scatter-softmax"]], "mlx_graphs.utils.sorting.sort_edge_index": [[38, "mlx-graphs-utils-sorting-sort-edge-index"]], "mlx_graphs.utils.sorting.sort_edge_index_and_features": [[39, "mlx-graphs-utils-sorting-sort-edge-index-and-features"]], "mlx_graphs.utils.topology.get_num_hops": [[40, "mlx-graphs-utils-topology-get-num-hops"]], "mlx_graphs.utils.topology.is_directed": [[41, "mlx-graphs-utils-topology-is-directed"]], "mlx_graphs.utils.topology.is_undirected": [[42, "mlx-graphs-utils-topology-is-undirected"]], "mlx_graphs.utils.transformations.add_self_loops": [[43, "mlx-graphs-utils-transformations-add-self-loops"]], "mlx_graphs.utils.transformations.get_src_dst_features": [[44, "mlx-graphs-utils-transformations-get-src-dst-features"]], "mlx_graphs.utils.transformations.get_unique_edge_indices": [[45, "mlx-graphs-utils-transformations-get-unique-edge-indices"]], "mlx_graphs.utils.transformations.remove_duplicate_directed_edges": [[46, "mlx-graphs-utils-transformations-remove-duplicate-directed-edges"]], "mlx_graphs.utils.transformations.remove_self_loops": [[47, "mlx-graphs-utils-transformations-remove-self-loops"]], "mlx_graphs.utils.transformations.to_adjacency_matrix": [[48, "mlx-graphs-utils-transformations-to-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_edge_index": [[49, "mlx-graphs-utils-transformations-to-edge-index"]], "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix": [[50, "mlx-graphs-utils-transformations-to-sparse-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_undirected": [[51, "mlx-graphs-utils-transformations-to-undirected"]], "mlx_graphs.utils.validators.validate_adjacency_matrix": [[52, "mlx-graphs-utils-validators-validate-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_edge_index": [[53, "mlx-graphs-utils-validators-validate-edge-index"]], "mlx_graphs.utils.validators.validate_edge_index_and_features": [[54, "mlx-graphs-utils-validators-validate-edge-index-and-features"]], "Array ops": [[55, "array-ops"]], "Scatter": [[57, "scatter"]], "Sorting": [[58, "sorting"]], "Topology": [[59, "topology"]], "Transformations": [[60, "transformations"]], "Validators": [[61, "validators"]], "MLX-graphs": [[62, "mlx-graphs"]], "Features": [[62, "features"]], "Example usage": [[62, "example-usage"]], "Install": [[62, null]], "Tutorials": [[62, null]], "API": [[62, null]], "Installation": [[63, "installation"]], "Build from source": [[63, "build-from-source"]], "Installing test, dev, benchmarks, docs dependencies": [[63, "installing-test-dev-benchmarks-docs-dependencies"]], "Benchmarking mlx-graphs": [[64, "Benchmarking-mlx-graphs"]], "mlx-graphs (MXG) implementation": [[64, "mlx-graphs-(MXG)-implementation"]], "PyG implementation": [[64, "PyG-implementation"]], "DGL implementation": [[64, "DGL-implementation"]], "Benchmark": [[64, "Benchmark"]], "Graph Classification": [[65, "Graph-Classification"]], "Dataset": [[65, "Dataset"]], "GCN model": [[65, "GCN-model"]], "Quickstart": [[66, "quickstart"]], "Representing Graphs": [[66, "representing-graphs"]], "Simple Graphs": [[66, "simple-graphs"]], "Graphs with Custom Attributes": [[66, "graphs-with-custom-attributes"]], "Operations on graphs": [[66, "operations-on-graphs"]], "Batching": [[66, "batching"]], "Datasets and Data loaders": [[66, "datasets-and-data-loaders"]], "GNN Layers": [[66, "gnn-layers"]]}, "indexentries": {"graphdata (class in mlx_graphs.data.data)": [[0, "mlx_graphs.data.data.GraphData"]], "__cat_dim__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__cat_dim__"]], "__inc__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__inc__"]], "num_edge_classes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_edge_classes"]], "num_edge_features (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_edge_features"]], "num_edges (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_edges"]], "num_graph_classes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_graph_classes"]], "num_graph_features (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_graph_features"]], "num_node_classes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_node_classes"]], "num_node_features (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_node_features"]], "num_nodes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_nodes"]], "to_dict() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.to_dict"]], "graphdatabatch (class in mlx_graphs.data.batch)": [[1, "mlx_graphs.data.batch.GraphDataBatch"]], "__init__() (mlx_graphs.data.batch.graphdatabatch method)": [[1, "mlx_graphs.data.batch.GraphDataBatch.__init__"]], "batch() (in module mlx_graphs.data.batch)": [[2, "mlx_graphs.data.batch.batch"]], "unbatch() (in module mlx_graphs.data.batch)": [[3, "mlx_graphs.data.batch.unbatch"]], "collate() (in module mlx_graphs.data.collate)": [[4, "mlx_graphs.data.collate.collate"]], "validate_list_of_graph_data() (in module mlx_graphs.data.utils)": [[5, "mlx_graphs.data.utils.validate_list_of_graph_data"]], "dataset (class in mlx_graphs.datasets)": [[10, "mlx_graphs.datasets.Dataset"]], "download() (mlx_graphs.datasets.dataset method)": [[10, "mlx_graphs.datasets.Dataset.download"]], "name (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.name"]], "num_edge_classes (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_edge_classes"]], "num_edge_features (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_edge_features"]], "num_graph_classes (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_graph_classes"]], "num_graph_features (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_graph_features"]], "num_graphs (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_graphs"]], "num_node_classes (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_node_classes"]], "num_node_features (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_node_features"]], "process() (mlx_graphs.datasets.dataset method)": [[10, "mlx_graphs.datasets.Dataset.process"]], "processed_path (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.processed_path"]], "raw_path (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.raw_path"]], "karateclubdataset (class in mlx_graphs.datasets)": [[11, "mlx_graphs.datasets.KarateClubDataset"]], "download() (mlx_graphs.datasets.karateclubdataset method)": [[11, "mlx_graphs.datasets.KarateClubDataset.download"]], "process() (mlx_graphs.datasets.karateclubdataset method)": [[11, "mlx_graphs.datasets.KarateClubDataset.process"]], "qm7bdataset (class in mlx_graphs.datasets)": [[12, "mlx_graphs.datasets.QM7bDataset"]], "download() (mlx_graphs.datasets.qm7bdataset method)": [[12, "mlx_graphs.datasets.QM7bDataset.download"]], "process() (mlx_graphs.datasets.qm7bdataset method)": [[12, "mlx_graphs.datasets.QM7bDataset.process"]], "tudataset (class in mlx_graphs.datasets)": [[13, "mlx_graphs.datasets.TUDataset"]], "download() (mlx_graphs.datasets.tudataset method)": [[13, "mlx_graphs.datasets.TUDataset.download"]], "process() (mlx_graphs.datasets.tudataset method)": [[13, "mlx_graphs.datasets.TUDataset.process"]], "processed_path (mlx_graphs.datasets.tudataset property)": [[13, "mlx_graphs.datasets.TUDataset.processed_path"]], "raw_path (mlx_graphs.datasets.tudataset property)": [[13, "mlx_graphs.datasets.TUDataset.raw_path"]], "dataloader (class in mlx_graphs.loaders)": [[15, "mlx_graphs.loaders.Dataloader"]], "__init__() (mlx_graphs.loaders.dataloader method)": [[15, "mlx_graphs.loaders.Dataloader.__init__"]], "gatconv (class in mlx_graphs.nn)": [[17, "mlx_graphs.nn.GATConv"]], "__call__() (mlx_graphs.nn.gatconv method)": [[17, "mlx_graphs.nn.GATConv.__call__"]], "message() (mlx_graphs.nn.gatconv method)": [[17, "mlx_graphs.nn.GATConv.message"]], "gcnconv (class in mlx_graphs.nn)": [[18, "mlx_graphs.nn.GCNConv"]], "__call__() (mlx_graphs.nn.gcnconv method)": [[18, "mlx_graphs.nn.GCNConv.__call__"]], "ginconv (class in mlx_graphs.nn)": [[19, "mlx_graphs.nn.GINConv"]], "__call__() (mlx_graphs.nn.ginconv method)": [[19, "mlx_graphs.nn.GINConv.__call__"]], "graphnetworkblock (class in mlx_graphs.nn)": [[20, "mlx_graphs.nn.GraphNetworkBlock"]], "__call__() (mlx_graphs.nn.graphnetworkblock method)": [[20, "mlx_graphs.nn.GraphNetworkBlock.__call__"]], "linear (class in mlx_graphs.nn)": [[21, "mlx_graphs.nn.Linear"]], "__call__() (mlx_graphs.nn.linear method)": [[21, "mlx_graphs.nn.Linear.__call__"]], "messagepassing (class in mlx_graphs.nn)": [[22, "mlx_graphs.nn.MessagePassing"]], "__call__() (mlx_graphs.nn.messagepassing method)": [[22, "mlx_graphs.nn.MessagePassing.__call__"]], "aggregate() (mlx_graphs.nn.messagepassing method)": [[22, "mlx_graphs.nn.MessagePassing.aggregate"]], "message() (mlx_graphs.nn.messagepassing method)": [[22, "mlx_graphs.nn.MessagePassing.message"]], "propagate() (mlx_graphs.nn.messagepassing method)": [[22, "mlx_graphs.nn.MessagePassing.propagate"]], "update_nodes() (mlx_graphs.nn.messagepassing method)": [[22, "mlx_graphs.nn.MessagePassing.update_nodes"]], "sageconv (class in mlx_graphs.nn)": [[23, "mlx_graphs.nn.SAGEConv"]], "__call__() (mlx_graphs.nn.sageconv method)": [[23, "mlx_graphs.nn.SAGEConv.__call__"]], "__call__() (mlx_graphs.nn.global_add_pool method)": [[24, "mlx_graphs.nn.global_add_pool.__call__"]], "global_add_pool (class in mlx_graphs.nn)": [[24, "mlx_graphs.nn.global_add_pool"]], "__call__() (mlx_graphs.nn.global_max_pool method)": [[25, "mlx_graphs.nn.global_max_pool.__call__"]], "global_max_pool (class in mlx_graphs.nn)": [[25, "mlx_graphs.nn.global_max_pool"]], "__call__() (mlx_graphs.nn.global_mean_pool method)": [[26, "mlx_graphs.nn.global_mean_pool.__call__"]], "global_mean_pool (class in mlx_graphs.nn)": [[26, "mlx_graphs.nn.global_mean_pool"]], "broadcast() (in module mlx_graphs.utils.array_ops)": [[28, "mlx_graphs.utils.array_ops.broadcast"]], "expand() (in module mlx_graphs.utils.array_ops)": [[29, "mlx_graphs.utils.array_ops.expand"]], "one_hot() (in module mlx_graphs.utils.array_ops)": [[30, "mlx_graphs.utils.array_ops.one_hot"]], "degree() (in module mlx_graphs.utils.scatter)": [[31, "mlx_graphs.utils.scatter.degree"]], "invert_sqrt_degree() (in module mlx_graphs.utils.scatter)": [[32, "mlx_graphs.utils.scatter.invert_sqrt_degree"]], "scatter() (in module mlx_graphs.utils.scatter)": [[33, "mlx_graphs.utils.scatter.scatter"]], "scatter_add() (in module mlx_graphs.utils.scatter)": [[34, "mlx_graphs.utils.scatter.scatter_add"]], "scatter_max() (in module mlx_graphs.utils.scatter)": [[35, "mlx_graphs.utils.scatter.scatter_max"]], "scatter_mean() (in module mlx_graphs.utils.scatter)": [[36, "mlx_graphs.utils.scatter.scatter_mean"]], "scatter_softmax() (in module mlx_graphs.utils.scatter)": [[37, "mlx_graphs.utils.scatter.scatter_softmax"]], "sort_edge_index() (in module mlx_graphs.utils.sorting)": [[38, "mlx_graphs.utils.sorting.sort_edge_index"]], "sort_edge_index_and_features() (in module mlx_graphs.utils.sorting)": [[39, "mlx_graphs.utils.sorting.sort_edge_index_and_features"]], "get_num_hops() (in module mlx_graphs.utils.topology)": [[40, "mlx_graphs.utils.topology.get_num_hops"]], "is_directed() (in module mlx_graphs.utils.topology)": [[41, "mlx_graphs.utils.topology.is_directed"]], "is_undirected() (in module mlx_graphs.utils.topology)": [[42, "mlx_graphs.utils.topology.is_undirected"]], "add_self_loops() (in module mlx_graphs.utils.transformations)": [[43, "mlx_graphs.utils.transformations.add_self_loops"]], "get_src_dst_features() (in module mlx_graphs.utils.transformations)": [[44, "mlx_graphs.utils.transformations.get_src_dst_features"]], "get_unique_edge_indices() (in module mlx_graphs.utils.transformations)": [[45, "mlx_graphs.utils.transformations.get_unique_edge_indices"]], "remove_duplicate_directed_edges() (in module mlx_graphs.utils.transformations)": [[46, "mlx_graphs.utils.transformations.remove_duplicate_directed_edges"]], "remove_self_loops() (in module mlx_graphs.utils.transformations)": [[47, "mlx_graphs.utils.transformations.remove_self_loops"]], "to_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[48, "mlx_graphs.utils.transformations.to_adjacency_matrix"]], "to_edge_index() (in module mlx_graphs.utils.transformations)": [[49, "mlx_graphs.utils.transformations.to_edge_index"]], "to_sparse_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[50, "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix"]], "to_undirected() (in module mlx_graphs.utils.transformations)": [[51, "mlx_graphs.utils.transformations.to_undirected"]], "validate_adjacency_matrix() (in module mlx_graphs.utils.validators)": [[52, "mlx_graphs.utils.validators.validate_adjacency_matrix"]], "validate_edge_index() (in module mlx_graphs.utils.validators)": [[53, "mlx_graphs.utils.validators.validate_edge_index"]], "validate_edge_index_and_features() (in module mlx_graphs.utils.validators)": [[54, "mlx_graphs.utils.validators.validate_edge_index_and_features"]]}})