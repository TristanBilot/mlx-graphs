Search.setIndex({"docnames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate", "api/data/batch", "api/data/data", "api/data/index", "api/datasets/_autosummary/mlx_graphs.datasets.Dataset", "api/datasets/_autosummary/mlx_graphs.datasets.KarateClubDataset", "api/datasets/index", "api/nn/_autosummary/mlx_graphs.nn.GATConv", "api/nn/_autosummary/mlx_graphs.nn.GCNConv", "api/nn/_autosummary/mlx_graphs.nn.GINConv", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock", "api/nn/_autosummary/mlx_graphs.nn.Linear", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool", "api/nn/index", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_undirected", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_list_of_graph_data", "api/utils/array_ops", "api/utils/index", "api/utils/scatter", "api/utils/sorting", "api/utils/topology", "api/utils/transformations", "api/utils/validators", "index", "install"], "filenames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch.rst", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate.rst", "api/data/batch.rst", "api/data/data.rst", "api/data/index.rst", "api/datasets/_autosummary/mlx_graphs.datasets.Dataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.KarateClubDataset.rst", "api/datasets/index.rst", "api/nn/_autosummary/mlx_graphs.nn.GATConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GCNConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GINConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock.rst", "api/nn/_autosummary/mlx_graphs.nn.Linear.rst", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing.rst", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv.rst", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool.rst", "api/nn/index.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_undirected.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_list_of_graph_data.rst", "api/utils/array_ops.rst", "api/utils/index.rst", "api/utils/scatter.rst", "api/utils/sorting.rst", "api/utils/topology.rst", "api/utils/transformations.rst", "api/utils/validators.rst", "index.rst", "install.rst"], "titles": ["mlx_graphs.data.data.GraphData", "mlx_graphs.data.batch.GraphDataBatch", "mlx_graphs.data.batch.batch", "mlx_graphs.data.batch.unbatch", "mlx_graphs.data.collate.collate", "Batch Objects", "Data Objects", "Data", "mlx_graphs.datasets.Dataset", "mlx_graphs.datasets.KarateClubDataset", "Datasets", "mlx_graphs.nn.GATConv", "mlx_graphs.nn.GCNConv", "mlx_graphs.nn.GINConv", "mlx_graphs.nn.GraphNetworkBlock", "mlx_graphs.nn.Linear", "mlx_graphs.nn.MessagePassing", "mlx_graphs.nn.SAGEConv", "mlx_graphs.nn.global_add_pool", "mlx_graphs.nn.global_max_pool", "mlx_graphs.nn.global_mean_pool", "Neural Networks", "mlx_graphs.utils.array_ops.broadcast", "mlx_graphs.utils.array_ops.expand", "mlx_graphs.utils.scatter.degree", "mlx_graphs.utils.scatter.invert_sqrt_degree", "mlx_graphs.utils.scatter.scatter", "mlx_graphs.utils.scatter.scatter_add", "mlx_graphs.utils.scatter.scatter_max", "mlx_graphs.utils.scatter.scatter_mean", "mlx_graphs.utils.scatter.scatter_softmax", "mlx_graphs.utils.sorting.sort_edge_index", "mlx_graphs.utils.sorting.sort_edge_index_and_features", "mlx_graphs.utils.topology.get_num_hops", "mlx_graphs.utils.topology.is_directed", "mlx_graphs.utils.topology.is_undirected", "mlx_graphs.utils.transformations.add_self_loops", "mlx_graphs.utils.transformations.get_src_dst_features", "mlx_graphs.utils.transformations.get_unique_edge_indices", "mlx_graphs.utils.transformations.remove_self_loops", "mlx_graphs.utils.transformations.to_adjacency_matrix", "mlx_graphs.utils.transformations.to_edge_index", "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "mlx_graphs.utils.transformations.to_undirected", "mlx_graphs.utils.validators.validate_adjacency_matrix", "mlx_graphs.utils.validators.validate_edge_index", "mlx_graphs.utils.validators.validate_edge_index_and_features", "mlx_graphs.utils.validators.validate_list_of_graph_data", "Array ops", "Utils", "Scatter", "Sorting", "Topology", "Transformations", "Validators", "MLX-graphs", "Installation"], "terms": {"class": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33], "edge_index": [0, 1, 4, 11, 12, 13, 14, 16, 17, 24, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 55], "mlx": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56], "core": [0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "arrai": [0, 1, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 55], "none": [0, 1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 26, 34, 35, 36, 39, 40, 43], "node_featur": [0, 1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 33, 37, 55], "edge_featur": [0, 11, 14, 32, 34, 35, 36, 39, 40, 42, 43, 46, 55], "graph_featur": [0, 14, 55], "node_label": 0, "edge_label": 0, "graph_label": 0, "kwarg": [0, 1, 11, 12, 13, 15, 16, 17, 18, 19, 20], "repres": [0, 13, 16, 17, 31, 32, 36, 37, 39, 40, 41, 42], "graph": [0, 1, 2, 4, 9, 11, 13, 14, 16, 17, 18, 19, 20, 34, 35, 36, 39, 40, 43, 56], "object": [0, 1, 2, 3, 4, 7], "option": [0, 8, 11, 13, 14, 16, 17, 18, 19, 20, 24, 26, 34, 35, 36, 39, 40, 43, 55], "featur": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 32, 34, 35, 36, 37, 39, 40, 42, 43, 55], "label": 0, "paramet": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "edg": [0, 1, 9, 11, 13, 14, 17, 24, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55], "index": [0, 11, 13, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 40, 41, 42, 43], "topologi": [0, 14, 49, 55], "shape": [0, 1, 11, 13, 16, 17, 18, 19, 20, 22, 23, 26, 30, 36, 39, 55], "2": [0, 1, 9, 11, 13, 14, 16, 17, 26, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 55], "num_edg": [0, 11, 13, 16, 17, 31, 32, 36, 37, 39, 40, 41, 55], "num_nod": [0, 24, 25, 26, 30, 36, 40, 55], "num_node_featur": [0, 55], "contain": [0, 4, 14, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 55], "each": [0, 4, 9, 11, 14, 18, 19, 20, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 55], "node": [0, 1, 4, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 24, 25, 36, 37, 39, 40, 41, 55], "num_edge_featur": [0, 36, 39, 55], "num_graph_featur": [0, 55], "global": [0, 14, 18, 19, 20], "num_node_label": 0, "num_edge_label": 0, "num_graph_label": 0, "addit": 0, "keyword": 0, "argument": [0, 16], "store": [0, 2, 8], "ani": [0, 1, 12, 15, 16, 55, 56], "other": [0, 14, 22], "custom": [0, 13], "attribut": [0, 1, 4, 14, 55], "method": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 26], "__cat_dim__": 0, "kei": 0, "str": [0, 8], "arg": [0, 15, 16], "int": [0, 11, 12, 15, 17, 22, 24, 26, 29, 30, 33, 36, 40], "thi": [0, 9, 11, 15, 16, 25, 33, 55], "can": [0, 1, 4, 14, 16, 56], "overriden": 0, "when": 0, "batch": [0, 4, 7, 18, 19, 20], "i": [0, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 33, 34, 35, 36, 55, 56], "us": [0, 1, 4, 11, 12, 14, 15, 16, 17, 26, 36, 56], "given": [0, 16, 24, 26, 32, 34, 35, 36, 37, 39, 43], "name": [0, 8], "return": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "dimens": [0, 23, 26], "where": [0, 1, 8, 13, 14, 17, 27, 28, 31, 32], "concaten": [0, 1, 4], "happen": 0, "dure": [0, 16, 24], "By": [0, 4, 16], "default": [0, 4, 8, 13, 15, 16, 17, 24, 26, 36, 40, 41, 42], "all": [0, 1, 4, 14, 18, 19, 20, 26, 36], "axi": [0, 26, 29, 30], "1": [0, 1, 4, 11, 13, 14, 16, 17, 18, 19, 20, 24, 26, 30, 36, 38, 40, 41, 42], "e": [0, 14, 25, 56], "g": 0, "ar": [0, 8, 13, 14, 27, 28, 29, 30, 36, 38, 55], "0": [0, 1, 4, 11, 13, 17, 18, 19, 20, 26, 29, 30, 38, 41, 42], "which": [0, 4, 14, 26, 29, 30, 55], "chang": [0, 55], "while": 0, "type": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "The": [0, 8, 9, 11, 13, 14, 17, 18, 19, 20, 23, 27, 28, 30, 33, 34, 35, 37, 38, 40, 43, 55], "__inc__": 0, "an": [0, 4, 9, 13, 14, 16, 18, 19, 20, 23, 24, 26, 27, 28, 29, 32, 40, 41, 42, 43, 44, 45, 46, 55], "integ": 0, "indic": [0, 4, 11, 16, 18, 19, 20, 24, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38], "increment": [0, 4], "valu": [0, 11, 13, 19, 20, 24, 25, 26, 27, 28, 29, 30, 36], "appli": [0, 12, 13, 18, 19, 20, 26, 27, 28, 30], "elemnt": 0, "base": [0, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37], "number": [0, 4, 9, 11, 24, 26, 33, 36, 40], "previou": [0, 4], "avoid": 0, "duplic": [0, 27, 28], "cnot": 0, "keep": 0, "origin": [0, 23], "If": [0, 8, 15, 18, 19, 20, 24, 26, 27, 28, 34, 35, 36], "should": 0, "set": [0, 14, 15, 17, 55], "behavior": 0, "properti": [0, 8, 9], "to_dict": 0, "dict": [0, 4, 16], "convert": [0, 40, 41, 42, 43], "dictionari": 0, "A": [0, 14, 23, 31, 32, 36, 37, 39, 41, 42, 55], "list": [1, 2, 3, 4, 47], "graphdata": [1, 2, 3, 4, 7, 17, 47], "multipl": [1, 4], "singl": [1, 2], "unifi": [1, 4], "effici": 1, "comput": [1, 11, 13, 16, 17, 24, 25, 29, 30, 38], "parallel": 1, "over": [1, 12], "remain": [1, 4], "disconnect": [1, 4], "mean": [1, 11, 16, 17, 20, 26, 29], "pair": 1, "have": [1, 14, 25], "common": 1, "especi": 1, "speed": 1, "up": 1, "classif": [1, 9], "task": 1, "easili": 1, "fit": 1, "memori": 1, "process": [1, 8, 9], "togeth": 1, "exampl": [1, 11, 13, 14, 17, 26, 30, 33, 38, 41, 42, 55], "mx": [1, 11, 13, 15, 17, 26, 30, 33, 38, 41, 42], "zero": [1, 25], "3": [1, 11, 13, 17, 41, 42], "ones": [1, 17], "4": [1, 11, 13, 17, 33], "num_graph": 1, "9": 1, "int32": 1, "float32": [1, 13, 17], "__init__": [1, 33], "graphdatabatch": [2, 3, 7], "construct": 2, "from": [2, 3, 4, 9, 13, 15, 16, 17, 24, 33, 36, 39], "merg": 2, "larg": [2, 17], "reconstruct": 3, "graph_list": 4, "specif": 4, "dim": [4, 22], "apart": 4, "along": [4, 19, 20, 29, 30], "independ": 4, "final": [4, 13, 16], "cumsum": 4, "per": 4, "big": 4, "well": 4, "privat": 4, "behind": 4, "hood": 4, "These": [4, 29, 30], "start": [4, 56], "underscor": 4, "_": 4, "ignor": 4, "user": [4, 13], "mlx_graph": 7, "unbatch": 7, "collat": 7, "base_dir": 8, "mlx_graphs_data": 8, "abc": 8, "download": [8, 9], "__get_item__": 8, "__len__": 8, "must": [8, 23], "implement": [8, 14, 16], "children": 8, "directori": 8, "raw": 8, "data": [8, 17], "abstract": 8, "self": [8, 9, 12, 15, 16, 18, 19, 20, 33, 36, 39], "raw_path": [8, 9], "possibli": [8, 9], "save": [8, 9], "processed_path": [8, 9], "path": 8, "file": 8, "zachari": 9, "": [9, 11, 14, 15, 55], "karat": 9, "club": 9, "netowork": 9, "inform": [9, 33], "flow": 9, "model": [9, 14, 16, 33], "conflict": 9, "fission": 9, "small": 9, "group": [9, 29, 30], "simpl": 9, "ha": 9, "34": 9, "156": 9, "undirect": [9, 35, 43], "belong": 9, "one": [9, 43], "num_class": 9, "node_features_dim": [11, 12, 17, 18, 19, 20], "out_features_dim": [11, 12, 17], "head": 11, "concat": 11, "bool": [11, 12, 13, 15, 17, 34, 35, 36], "true": [11, 12, 15, 17, 34, 35, 36], "bia": [11, 12, 15, 17], "negative_slop": 11, "float": [11, 13, 36], "dropout": 11, "edge_features_dim": 11, "messagepass": [11, 12, 13, 17, 33], "attent": 11, "network": [11, 13, 14, 16, 33, 55], "convolut": [11, 12, 13, 17], "layer": [11, 13, 14, 15, 17], "size": [11, 12, 14, 17, 24, 26, 29, 30, 55], "input": [11, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 37, 41, 42], "output": [11, 12, 13, 15, 17, 24, 26, 29, 30, 41, 42], "embed": [11, 12, 13, 16, 17], "whether": [11, 12, 13, 17, 34, 35, 36], "reduct": [11, 26], "project": [11, 12, 17], "slope": 11, "leaki": 11, "relu": [11, 13, 33], "probabl": 11, "p": 11, "conv": [11, 13, 17], "16": [11, 13, 17, 33], "32": [11, 13, 17], "random": [11, 13], "uniform": [11, 13], "low": [11, 13], "high": [11, 13], "5": [11, 13, 17, 26, 30, 41, 42], "h": [11, 13, 17], "64": 11, "__call__": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33], "forward": [11, 13, 14, 17], "pass": [11, 13, 14, 16, 17], "messag": [11, 13, 14, 16, 17], "src_featur": [11, 16], "dst_featur": [11, 16], "alpha_src": 11, "alpha_dst": 11, "follow": [11, 26, 56], "gat": 11, "propag": [11, 16], "rule": 11, "sourc": [11, 14, 16, 22, 27, 28, 31, 32, 36, 37, 39, 40, 41, 55], "destin": [11, 14, 16, 37, 55], "function": [11, 12, 15, 16, 17, 18, 19, 20, 26, 34, 35, 44, 45, 46, 47, 55], "includ": 11, "compat": [11, 23], "precomput": 11, "1d": 11, "either": [11, 13, 16], "src": [11, 16, 22, 24, 26, 27, 28, 30], "dst": [11, 16, 24], "softmax": [11, 16, 26, 30], "gcn": [12, 25], "edge_weight": [12, 13, 16, 17, 24], "normal": 12, "call": [12, 15, 16, 18, 19, 20], "mlp": 13, "modul": [13, 14, 16, 33], "ep": 13, "learn_ep": 13, "fals": [13, 15, 34, 35], "isomorph": 13, "how": [13, 14], "power": 13, "neural": [13, 16, 55], "paper": [13, 17, 25], "mathbf": [13, 17], "_i": [13, 17], "text": 13, "left": 13, "epsilon": 13, "cdot": [13, 17], "x": [13, 17, 33, 38], "sum_": 13, "j": [13, 17], "mathcal": [13, 17], "n": [13, 14, 17], "_j": [13, 17], "right": 13, "respect": 13, "denot": [13, 17], "provid": [13, 14, 18, 19, 20, 24, 26, 34, 35, 36, 55], "fix": 13, "learn": [13, 14, 17], "callabl": [13, 14], "initi": [13, 14, 15], "term": [13, 55], "import": [13, 17], "node_feat_dim": 13, "out_feat_dim": 13, "sequenti": 13, "linear": [13, 33], "536501": 13, "154826": 13, "745569": 13, "31547": 13, "0962588": 13, "108504": 13, "415889": 13, "0498145": 13, "597379": 13, "194553": 13, "251498": 13, "207561": 13, "119966": 13, "0159533": 13, "276559": 13, "0258303": 13, "194533": 13, "15515": 13, "21477": 13, "169684": 13, "485867": 13, "0194768": 13, "145761": 13, "139433": 13, "133289": 13, "0279559": 13, "358095": 13, "0443346": 13, "11571": 13, "114396": 13, "dtype": [13, 17, 41, 42], "weight": [13, 15, 17, 24], "leverag": [13, 17, 24], "node_model": 14, "edge_model": 14, "graph_model": 14, "gener": 14, "block": 14, "defin": [14, 55], "take": [14, 19, 20], "same": 14, "associ": [14, 34, 35, 36, 39, 43, 55], "f_n": 14, "f_e": 14, "itself": [14, 55], "f_u": 14, "specifi": [14, 29, 30, 36, 55], "column": [14, 55], "vector": 14, "updat": [14, 16, 36, 39], "present": [14, 27, 28, 38], "depend": 14, "thei": [14, 36, 55], "act": 14, "flexibl": 14, "meta": 14, "architectur": 14, "like": [14, 22], "deep": 14, "relat": 14, "more": 14, "see": 14, "For": [14, 56], "usag": 14, "here": [14, 55], "refer": [14, 16], "battaglia": 14, "et": [14, 16], "al": [14, 16], "induct": [14, 17], "bias": 14, "tupl": [14, 16, 23, 31, 32, 36, 37, 39, 42, 43], "input_dim": 15, "output_dim": 15, "xavier": 15, "glorot": 15, "initit": 15, "inherit": [15, 16], "instead": [15, 24], "dimension": [15, 40], "aggr": [16, 26], "liter": [16, 26], "add": [16, 26, 36], "max": [16, 26, 28], "creat": 16, "mpnn": 16, "build": 16, "arbitrari": 16, "gnn": [16, 33, 55], "paradigm": 16, "inspir": 16, "pytorch": 16, "geometr": 16, "aggreg": [16, 17, 33], "strategi": 16, "gilmer": 16, "quantum": 16, "chemistri": 16, "fei": 16, "pyg": 16, "receiv": 16, "between": [16, 22], "connect": 16, "directli": 16, "integr": 16, "scalar": 16, "weigh": 16, "neighbor": 16, "message_kwarg": 16, "aggregate_kwarg": 16, "update_kwarg": 16, "them": 16, "represent": [16, 17, 18, 19, 20, 40, 41, 42], "union": [16, 36, 37], "distinct": 16, "update_nod": 16, "graphsag": 17, "w": 17, "_1": 17, "_2": 17, "bigoplus_": 17, "bigoplu": 17, "65429": 17, "376169": 17, "04172": 17, "919106": 17, "42576": 17, "490938": 17, "05823": 17, "295776": 17, "075439": 17, "104383": 17, "031947": 17, "351897": 17, "batch_indic": [18, 19, 20], "sum": [18, 27], "obtain": [18, 19, 20], "level": [18, 19, 20], "pool": [18, 19, 20], "otheris": [18, 19, 20], "num_batch": [18, 19, 20], "its": [18, 19, 20], "wise": [19, 20], "maximum": [19, 28], "averag": 20, "make": 22, "mai": [22, 55, 56], "requir": 22, "some": 22, "situat": 22, "match": 22, "new": [22, 23], "new_shap": 23, "desir": 23, "view": 23, "count": 24, "ocurr": 24, "usual": 24, "infer": [24, 36], "length": [24, 25], "degre": 25, "invert": 25, "squar": 25, "root": 25, "note": 25, "temporari": 25, "workaround": 25, "deal": 25, "infinit": 25, "accord": 25, "boolean": 25, "isn": 25, "t": 25, "yet": 25, "avail": [25, 55, 56], "so": 25, "we": [25, 55, 56], "pre": 25, "pad": 25, "element": [25, 26], "isol": 25, "out_siz": [26, 29, 30], "perform": 26, "oper": [26, 27, 28, 29, 30], "empti": [26, 27, 28], "tensor": [26, 36, 39], "first": [26, 31, 32, 38], "emploi": 26, "item": 26, "within": [27, 28], "assign": 27, "often": [27, 28], "determin": [27, 28, 29, 30, 34, 35], "result": [27, 28, 30, 40], "after": [27, 28, 30], "kept": 28, "undergo": [29, 30], "row": [31, 32, 55], "second": [31, 32, 38], "target": [31, 32, 36, 37, 39, 40, 41], "correspond": [31, 32, 40], "nn": 33, "hop": 33, "work": 33, "onli": 33, "def": 33, "super": 33, "conv1": 33, "gcnconv": 33, "conv2": 33, "lin": 33, "direct": 34, "consid": [34, 35], "both": [34, 35, 55], "check": [34, 35, 44, 45, 46, 47], "otherwis": [34, 35], "fill_valu": 36, "allow_rep": 36, "loop": [36, 39], "fill": 36, "even": 36, "alreadi": 36, "extract": 37, "edge_index_1": 38, "edge_index_2": 38, "NOT": 38, "remove_common_edg": 38, "remov": 39, "without": 39, "adjac": [40, 41, 42, 44], "matrix": [40, 41, 42, 44], "adjacency_matrix": [41, 42], "uint32": [41, 42], "spars": 42, "func": [44, 45, 46, 47], "decor": [44, 45, 46, 47], "transform": 49, "sort": 49, "valid": 49, "scatter": 49, "op": 49, "librari": 55, "built": 55, "upon": 55, "appl": 55, "veri": 55, "earli": 55, "develop": [55, 56], "break": 55, "upcom": 55, "version": [55, 56], "show": 55, "th": 55, "adopt": 55, "abov": 55, "convent": 55, "across": 55, "entir": 55, "order": 55, "re": 55, "dataset": 55, "util": 55, "pypi": 56, "To": 56, "run": 56, "pip": 56, "clone": 56, "github": 56, "repo": 56, "git": 56, "com": 56, "tristanbilot": 56, "cd": 56, "Then": 56, "suggest": 56, "separ": 56, "virtual": 56, "environ": 56, "extra": 56, "document": 56, "you": 56, "purpos": 56, "want": 56, "current": 56, "via": 56, "http": 56, "ml": 56, "explor": 56}, "objects": {"mlx_graphs.data.batch": [[1, 0, 1, "", "GraphDataBatch"], [2, 2, 1, "", "batch"], [3, 2, 1, "", "unbatch"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, 1, 1, "", "__init__"]], "mlx_graphs.data.collate": [[4, 2, 1, "", "collate"]], "mlx_graphs.data.data": [[0, 0, 1, "", "GraphData"]], "mlx_graphs.data.data.GraphData": [[0, 1, 1, "", "__cat_dim__"], [0, 1, 1, "", "__inc__"], [0, 3, 1, "", "num_nodes"], [0, 1, 1, "", "to_dict"]], "mlx_graphs.datasets": [[8, 0, 1, "", "Dataset"], [9, 0, 1, "", "KarateClubDataset"]], "mlx_graphs.datasets.Dataset": [[8, 1, 1, "", "download"], [8, 3, 1, "", "name"], [8, 1, 1, "", "process"], [8, 3, 1, "", "processed_path"], [8, 3, 1, "", "raw_path"]], "mlx_graphs.datasets.KarateClubDataset": [[9, 1, 1, "", "download"], [9, 3, 1, "", "num_classes"], [9, 1, 1, "", "process"]], "mlx_graphs.nn": [[11, 0, 1, "", "GATConv"], [12, 0, 1, "", "GCNConv"], [13, 0, 1, "", "GINConv"], [14, 0, 1, "", "GraphNetworkBlock"], [15, 0, 1, "", "Linear"], [16, 0, 1, "", "MessagePassing"], [17, 0, 1, "", "SAGEConv"], [18, 0, 1, "", "global_add_pool"], [19, 0, 1, "", "global_max_pool"], [20, 0, 1, "", "global_mean_pool"]], "mlx_graphs.nn.GATConv": [[11, 1, 1, "", "__call__"], [11, 1, 1, "", "message"]], "mlx_graphs.nn.GCNConv": [[12, 1, 1, "", "__call__"]], "mlx_graphs.nn.GINConv": [[13, 1, 1, "", "__call__"]], "mlx_graphs.nn.GraphNetworkBlock": [[14, 1, 1, "", "__call__"]], "mlx_graphs.nn.Linear": [[15, 1, 1, "", "__call__"]], "mlx_graphs.nn.MessagePassing": [[16, 1, 1, "", "__call__"], [16, 1, 1, "", "aggregate"], [16, 1, 1, "", "message"], [16, 1, 1, "", "propagate"], [16, 1, 1, "", "update_nodes"]], "mlx_graphs.nn.SAGEConv": [[17, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_add_pool": [[18, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_max_pool": [[19, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_mean_pool": [[20, 1, 1, "", "__call__"]], "mlx_graphs.utils.array_ops": [[22, 2, 1, "", "broadcast"], [23, 2, 1, "", "expand"]], "mlx_graphs.utils.scatter": [[24, 2, 1, "", "degree"], [25, 2, 1, "", "invert_sqrt_degree"], [26, 2, 1, "", "scatter"], [27, 2, 1, "", "scatter_add"], [28, 2, 1, "", "scatter_max"], [29, 2, 1, "", "scatter_mean"], [30, 2, 1, "", "scatter_softmax"]], "mlx_graphs.utils.sorting": [[31, 2, 1, "", "sort_edge_index"], [32, 2, 1, "", "sort_edge_index_and_features"]], "mlx_graphs.utils.topology": [[33, 2, 1, "", "get_num_hops"], [34, 2, 1, "", "is_directed"], [35, 2, 1, "", "is_undirected"]], "mlx_graphs.utils.transformations": [[36, 2, 1, "", "add_self_loops"], [37, 2, 1, "", "get_src_dst_features"], [38, 2, 1, "", "get_unique_edge_indices"], [39, 2, 1, "", "remove_self_loops"], [40, 2, 1, "", "to_adjacency_matrix"], [41, 2, 1, "", "to_edge_index"], [42, 2, 1, "", "to_sparse_adjacency_matrix"], [43, 2, 1, "", "to_undirected"]], "mlx_graphs.utils.validators": [[44, 2, 1, "", "validate_adjacency_matrix"], [45, 2, 1, "", "validate_edge_index"], [46, 2, 1, "", "validate_edge_index_and_features"], [47, 2, 1, "", "validate_list_of_graph_data"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"mlx_graph": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "data": [0, 1, 2, 3, 4, 6, 7, 55], "graphdata": 0, "batch": [1, 2, 3, 5], "graphdatabatch": 1, "unbatch": 3, "collat": 4, "object": [5, 6], "dataset": [8, 9, 10], "karateclubdataset": 9, "nn": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "gatconv": 11, "gcnconv": 12, "ginconv": 13, "graphnetworkblock": 14, "linear": 15, "messagepass": 16, "sageconv": 17, "global_add_pool": 18, "global_max_pool": 19, "global_mean_pool": 20, "neural": 21, "network": 21, "util": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "array_op": [22, 23], "broadcast": 22, "expand": 23, "scatter": [24, 25, 26, 27, 28, 29, 30, 50], "degre": 24, "invert_sqrt_degre": 25, "scatter_add": 27, "scatter_max": 28, "scatter_mean": 29, "scatter_softmax": 30, "sort": [31, 32, 51], "sort_edge_index": 31, "sort_edge_index_and_featur": 32, "topologi": [33, 34, 35, 52], "get_num_hop": 33, "is_direct": 34, "is_undirect": 35, "transform": [36, 37, 38, 39, 40, 41, 42, 43, 53], "add_self_loop": 36, "get_src_dst_featur": 37, "get_unique_edge_indic": 38, "remove_self_loop": 39, "to_adjacency_matrix": 40, "to_edge_index": 41, "to_sparse_adjacency_matrix": 42, "to_undirect": 43, "valid": [44, 45, 46, 47, 54], "validate_adjacency_matrix": 44, "validate_edge_index": 45, "validate_edge_index_and_featur": 46, "validate_list_of_graph_data": 47, "arrai": 48, "op": 48, "mlx": 55, "graph": 55, "usag": 55, "model": 55, "instal": [55, 56], "api": 55, "build": 56, "from": 56, "sourc": 56, "test": 56, "dev": 56, "benchmark": 56, "doc": 56, "depend": 56}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"mlx_graphs.data.data.GraphData": [[0, "mlx-graphs-data-data-graphdata"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, "mlx-graphs-data-batch-graphdatabatch"]], "mlx_graphs.data.batch.batch": [[2, "mlx-graphs-data-batch-batch"]], "mlx_graphs.data.batch.unbatch": [[3, "mlx-graphs-data-batch-unbatch"]], "mlx_graphs.data.collate.collate": [[4, "mlx-graphs-data-collate-collate"]], "Batch Objects": [[5, "batch-objects"]], "Data Objects": [[6, "data-objects"]], "Data": [[7, "data"]], "mlx_graphs.datasets.Dataset": [[8, "mlx-graphs-datasets-dataset"]], "mlx_graphs.datasets.KarateClubDataset": [[9, "mlx-graphs-datasets-karateclubdataset"]], "Datasets": [[10, "datasets"]], "mlx_graphs.nn.GATConv": [[11, "mlx-graphs-nn-gatconv"]], "mlx_graphs.nn.GCNConv": [[12, "mlx-graphs-nn-gcnconv"]], "mlx_graphs.nn.GINConv": [[13, "mlx-graphs-nn-ginconv"]], "mlx_graphs.nn.GraphNetworkBlock": [[14, "mlx-graphs-nn-graphnetworkblock"]], "mlx_graphs.nn.Linear": [[15, "mlx-graphs-nn-linear"]], "mlx_graphs.nn.MessagePassing": [[16, "mlx-graphs-nn-messagepassing"]], "mlx_graphs.nn.SAGEConv": [[17, "mlx-graphs-nn-sageconv"]], "mlx_graphs.nn.global_add_pool": [[18, "mlx-graphs-nn-global-add-pool"]], "mlx_graphs.nn.global_max_pool": [[19, "mlx-graphs-nn-global-max-pool"]], "mlx_graphs.nn.global_mean_pool": [[20, "mlx-graphs-nn-global-mean-pool"]], "Neural Networks": [[21, "neural-networks"]], "mlx_graphs.utils.array_ops.broadcast": [[22, "mlx-graphs-utils-array-ops-broadcast"]], "mlx_graphs.utils.array_ops.expand": [[23, "mlx-graphs-utils-array-ops-expand"]], "mlx_graphs.utils.scatter.degree": [[24, "mlx-graphs-utils-scatter-degree"]], "mlx_graphs.utils.scatter.invert_sqrt_degree": [[25, "mlx-graphs-utils-scatter-invert-sqrt-degree"]], "mlx_graphs.utils.scatter.scatter": [[26, "mlx-graphs-utils-scatter-scatter"]], "mlx_graphs.utils.scatter.scatter_add": [[27, "mlx-graphs-utils-scatter-scatter-add"]], "mlx_graphs.utils.scatter.scatter_max": [[28, "mlx-graphs-utils-scatter-scatter-max"]], "mlx_graphs.utils.scatter.scatter_mean": [[29, "mlx-graphs-utils-scatter-scatter-mean"]], "mlx_graphs.utils.scatter.scatter_softmax": [[30, "mlx-graphs-utils-scatter-scatter-softmax"]], "mlx_graphs.utils.sorting.sort_edge_index": [[31, "mlx-graphs-utils-sorting-sort-edge-index"]], "mlx_graphs.utils.sorting.sort_edge_index_and_features": [[32, "mlx-graphs-utils-sorting-sort-edge-index-and-features"]], "mlx_graphs.utils.topology.get_num_hops": [[33, "mlx-graphs-utils-topology-get-num-hops"]], "mlx_graphs.utils.topology.is_directed": [[34, "mlx-graphs-utils-topology-is-directed"]], "mlx_graphs.utils.topology.is_undirected": [[35, "mlx-graphs-utils-topology-is-undirected"]], "mlx_graphs.utils.transformations.add_self_loops": [[36, "mlx-graphs-utils-transformations-add-self-loops"]], "mlx_graphs.utils.transformations.get_src_dst_features": [[37, "mlx-graphs-utils-transformations-get-src-dst-features"]], "mlx_graphs.utils.transformations.get_unique_edge_indices": [[38, "mlx-graphs-utils-transformations-get-unique-edge-indices"]], "mlx_graphs.utils.transformations.remove_self_loops": [[39, "mlx-graphs-utils-transformations-remove-self-loops"]], "mlx_graphs.utils.transformations.to_adjacency_matrix": [[40, "mlx-graphs-utils-transformations-to-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_edge_index": [[41, "mlx-graphs-utils-transformations-to-edge-index"]], "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix": [[42, "mlx-graphs-utils-transformations-to-sparse-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_undirected": [[43, "mlx-graphs-utils-transformations-to-undirected"]], "mlx_graphs.utils.validators.validate_adjacency_matrix": [[44, "mlx-graphs-utils-validators-validate-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_edge_index": [[45, "mlx-graphs-utils-validators-validate-edge-index"]], "mlx_graphs.utils.validators.validate_edge_index_and_features": [[46, "mlx-graphs-utils-validators-validate-edge-index-and-features"]], "mlx_graphs.utils.validators.validate_list_of_graph_data": [[47, "mlx-graphs-utils-validators-validate-list-of-graph-data"]], "Array ops": [[48, "array-ops"]], "Utils": [[49, "utils"]], "Scatter": [[50, "scatter"]], "Sorting": [[51, "sorting"]], "Topology": [[52, "topology"]], "Transformations": [[53, "transformations"]], "Validators": [[54, "validators"]], "MLX-graphs": [[55, "mlx-graphs"]], "Usage": [[55, "usage"]], "Graph data model": [[55, "graph-data-model"]], "Install": [[55, null]], "API": [[55, null]], "Installation": [[56, "installation"]], "Build from source": [[56, "build-from-source"]], "Installing test, dev, benchmarks, docs dependencies": [[56, "installing-test-dev-benchmarks-docs-dependencies"]]}, "indexentries": {"graphdata (class in mlx_graphs.data.data)": [[0, "mlx_graphs.data.data.GraphData"]], "__cat_dim__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__cat_dim__"]], "__inc__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__inc__"]], "num_nodes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_nodes"]], "to_dict() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.to_dict"]], "graphdatabatch (class in mlx_graphs.data.batch)": [[1, "mlx_graphs.data.batch.GraphDataBatch"]], "__init__() (mlx_graphs.data.batch.graphdatabatch method)": [[1, "mlx_graphs.data.batch.GraphDataBatch.__init__"]], "batch() (in module mlx_graphs.data.batch)": [[2, "mlx_graphs.data.batch.batch"]], "unbatch() (in module mlx_graphs.data.batch)": [[3, "mlx_graphs.data.batch.unbatch"]], "collate() (in module mlx_graphs.data.collate)": [[4, "mlx_graphs.data.collate.collate"]], "dataset (class in mlx_graphs.datasets)": [[8, "mlx_graphs.datasets.Dataset"]], "download() (mlx_graphs.datasets.dataset method)": [[8, "mlx_graphs.datasets.Dataset.download"]], "name (mlx_graphs.datasets.dataset property)": [[8, "mlx_graphs.datasets.Dataset.name"]], "process() (mlx_graphs.datasets.dataset method)": [[8, "mlx_graphs.datasets.Dataset.process"]], "processed_path (mlx_graphs.datasets.dataset property)": [[8, "mlx_graphs.datasets.Dataset.processed_path"]], "raw_path (mlx_graphs.datasets.dataset property)": [[8, "mlx_graphs.datasets.Dataset.raw_path"]], "karateclubdataset (class in mlx_graphs.datasets)": [[9, "mlx_graphs.datasets.KarateClubDataset"]], "download() (mlx_graphs.datasets.karateclubdataset method)": [[9, "mlx_graphs.datasets.KarateClubDataset.download"]], "num_classes (mlx_graphs.datasets.karateclubdataset property)": [[9, "mlx_graphs.datasets.KarateClubDataset.num_classes"]], "process() (mlx_graphs.datasets.karateclubdataset method)": [[9, "mlx_graphs.datasets.KarateClubDataset.process"]], "gatconv (class in mlx_graphs.nn)": [[11, "mlx_graphs.nn.GATConv"]], "__call__() (mlx_graphs.nn.gatconv method)": [[11, "mlx_graphs.nn.GATConv.__call__"]], "message() (mlx_graphs.nn.gatconv method)": [[11, "mlx_graphs.nn.GATConv.message"]], "gcnconv (class in mlx_graphs.nn)": [[12, "mlx_graphs.nn.GCNConv"]], "__call__() (mlx_graphs.nn.gcnconv method)": [[12, "mlx_graphs.nn.GCNConv.__call__"]], "ginconv (class in mlx_graphs.nn)": [[13, "mlx_graphs.nn.GINConv"]], "__call__() (mlx_graphs.nn.ginconv method)": [[13, "mlx_graphs.nn.GINConv.__call__"]], "graphnetworkblock (class in mlx_graphs.nn)": [[14, "mlx_graphs.nn.GraphNetworkBlock"]], "__call__() (mlx_graphs.nn.graphnetworkblock method)": [[14, "mlx_graphs.nn.GraphNetworkBlock.__call__"]], "linear (class in mlx_graphs.nn)": [[15, "mlx_graphs.nn.Linear"]], "__call__() (mlx_graphs.nn.linear method)": [[15, "mlx_graphs.nn.Linear.__call__"]], "messagepassing (class in mlx_graphs.nn)": [[16, "mlx_graphs.nn.MessagePassing"]], "__call__() (mlx_graphs.nn.messagepassing method)": [[16, "mlx_graphs.nn.MessagePassing.__call__"]], "aggregate() (mlx_graphs.nn.messagepassing method)": [[16, "mlx_graphs.nn.MessagePassing.aggregate"]], "message() (mlx_graphs.nn.messagepassing method)": [[16, "mlx_graphs.nn.MessagePassing.message"]], "propagate() (mlx_graphs.nn.messagepassing method)": [[16, "mlx_graphs.nn.MessagePassing.propagate"]], "update_nodes() (mlx_graphs.nn.messagepassing method)": [[16, "mlx_graphs.nn.MessagePassing.update_nodes"]], "sageconv (class in mlx_graphs.nn)": [[17, "mlx_graphs.nn.SAGEConv"]], "__call__() (mlx_graphs.nn.sageconv method)": [[17, "mlx_graphs.nn.SAGEConv.__call__"]], "__call__() (mlx_graphs.nn.global_add_pool method)": [[18, "mlx_graphs.nn.global_add_pool.__call__"]], "global_add_pool (class in mlx_graphs.nn)": [[18, "mlx_graphs.nn.global_add_pool"]], "__call__() (mlx_graphs.nn.global_max_pool method)": [[19, "mlx_graphs.nn.global_max_pool.__call__"]], "global_max_pool (class in mlx_graphs.nn)": [[19, "mlx_graphs.nn.global_max_pool"]], "__call__() (mlx_graphs.nn.global_mean_pool method)": [[20, "mlx_graphs.nn.global_mean_pool.__call__"]], "global_mean_pool (class in mlx_graphs.nn)": [[20, "mlx_graphs.nn.global_mean_pool"]], "broadcast() (in module mlx_graphs.utils.array_ops)": [[22, "mlx_graphs.utils.array_ops.broadcast"]], "expand() (in module mlx_graphs.utils.array_ops)": [[23, "mlx_graphs.utils.array_ops.expand"]], "degree() (in module mlx_graphs.utils.scatter)": [[24, "mlx_graphs.utils.scatter.degree"]], "invert_sqrt_degree() (in module mlx_graphs.utils.scatter)": [[25, "mlx_graphs.utils.scatter.invert_sqrt_degree"]], "scatter() (in module mlx_graphs.utils.scatter)": [[26, "mlx_graphs.utils.scatter.scatter"]], "scatter_add() (in module mlx_graphs.utils.scatter)": [[27, "mlx_graphs.utils.scatter.scatter_add"]], "scatter_max() (in module mlx_graphs.utils.scatter)": [[28, "mlx_graphs.utils.scatter.scatter_max"]], "scatter_mean() (in module mlx_graphs.utils.scatter)": [[29, "mlx_graphs.utils.scatter.scatter_mean"]], "scatter_softmax() (in module mlx_graphs.utils.scatter)": [[30, "mlx_graphs.utils.scatter.scatter_softmax"]], "sort_edge_index() (in module mlx_graphs.utils.sorting)": [[31, "mlx_graphs.utils.sorting.sort_edge_index"]], "sort_edge_index_and_features() (in module mlx_graphs.utils.sorting)": [[32, "mlx_graphs.utils.sorting.sort_edge_index_and_features"]], "get_num_hops() (in module mlx_graphs.utils.topology)": [[33, "mlx_graphs.utils.topology.get_num_hops"]], "is_directed() (in module mlx_graphs.utils.topology)": [[34, "mlx_graphs.utils.topology.is_directed"]], "is_undirected() (in module mlx_graphs.utils.topology)": [[35, "mlx_graphs.utils.topology.is_undirected"]], "add_self_loops() (in module mlx_graphs.utils.transformations)": [[36, "mlx_graphs.utils.transformations.add_self_loops"]], "get_src_dst_features() (in module mlx_graphs.utils.transformations)": [[37, "mlx_graphs.utils.transformations.get_src_dst_features"]], "get_unique_edge_indices() (in module mlx_graphs.utils.transformations)": [[38, "mlx_graphs.utils.transformations.get_unique_edge_indices"]], "remove_self_loops() (in module mlx_graphs.utils.transformations)": [[39, "mlx_graphs.utils.transformations.remove_self_loops"]], "to_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[40, "mlx_graphs.utils.transformations.to_adjacency_matrix"]], "to_edge_index() (in module mlx_graphs.utils.transformations)": [[41, "mlx_graphs.utils.transformations.to_edge_index"]], "to_sparse_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[42, "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix"]], "to_undirected() (in module mlx_graphs.utils.transformations)": [[43, "mlx_graphs.utils.transformations.to_undirected"]], "validate_adjacency_matrix() (in module mlx_graphs.utils.validators)": [[44, "mlx_graphs.utils.validators.validate_adjacency_matrix"]], "validate_edge_index() (in module mlx_graphs.utils.validators)": [[45, "mlx_graphs.utils.validators.validate_edge_index"]], "validate_edge_index_and_features() (in module mlx_graphs.utils.validators)": [[46, "mlx_graphs.utils.validators.validate_edge_index_and_features"]], "validate_list_of_graph_data() (in module mlx_graphs.utils.validators)": [[47, "mlx_graphs.utils.validators.validate_list_of_graph_data"]]}})