Search.setIndex({"docnames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate", "api/data/batch", "api/data/data", "api/data/index", "api/nn/_autosummary/mlx_graphs.nn.GATConv", "api/nn/_autosummary/mlx_graphs.nn.GCNConv", "api/nn/_autosummary/mlx_graphs.nn.GINConv", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock", "api/nn/_autosummary/mlx_graphs.nn.Linear", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool", "api/nn/index", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_list_of_graph_data", "api/utils/array_ops", "api/utils/index", "api/utils/scatter", "api/utils/sorting", "api/utils/topology", "api/utils/transformations", "api/utils/validators", "index", "install"], "filenames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch.rst", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate.rst", "api/data/batch.rst", "api/data/data.rst", "api/data/index.rst", "api/nn/_autosummary/mlx_graphs.nn.GATConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GCNConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GINConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock.rst", "api/nn/_autosummary/mlx_graphs.nn.Linear.rst", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing.rst", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv.rst", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool.rst", "api/nn/index.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_list_of_graph_data.rst", "api/utils/array_ops.rst", "api/utils/index.rst", "api/utils/scatter.rst", "api/utils/sorting.rst", "api/utils/topology.rst", "api/utils/transformations.rst", "api/utils/validators.rst", "index.rst", "install.rst"], "titles": ["mlx_graphs.data.data.GraphData", "mlx_graphs.data.batch.GraphDataBatch", "mlx_graphs.data.batch.batch", "mlx_graphs.data.batch.unbatch", "mlx_graphs.data.collate.collate", "Batch Objects", "Data Objects", "Data", "mlx_graphs.nn.GATConv", "mlx_graphs.nn.GCNConv", "mlx_graphs.nn.GINConv", "mlx_graphs.nn.GraphNetworkBlock", "mlx_graphs.nn.Linear", "mlx_graphs.nn.MessagePassing", "mlx_graphs.nn.SAGEConv", "mlx_graphs.nn.global_add_pool", "mlx_graphs.nn.global_max_pool", "mlx_graphs.nn.global_mean_pool", "Neural Networks", "mlx_graphs.utils.array_ops.broadcast", "mlx_graphs.utils.array_ops.expand", "mlx_graphs.utils.scatter.degree", "mlx_graphs.utils.scatter.invert_sqrt_degree", "mlx_graphs.utils.scatter.scatter", "mlx_graphs.utils.scatter.scatter_add", "mlx_graphs.utils.scatter.scatter_max", "mlx_graphs.utils.scatter.scatter_mean", "mlx_graphs.utils.scatter.scatter_softmax", "mlx_graphs.utils.sorting.sort_edge_index", "mlx_graphs.utils.sorting.sort_edge_index_and_features", "mlx_graphs.utils.topology.get_num_hops", "mlx_graphs.utils.topology.is_directed", "mlx_graphs.utils.topology.is_undirected", "mlx_graphs.utils.transformations.add_self_loops", "mlx_graphs.utils.transformations.get_src_dst_features", "mlx_graphs.utils.transformations.get_unique_edge_indices", "mlx_graphs.utils.transformations.remove_self_loops", "mlx_graphs.utils.transformations.to_adjacency_matrix", "mlx_graphs.utils.transformations.to_edge_index", "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "mlx_graphs.utils.validators.validate_adjacency_matrix", "mlx_graphs.utils.validators.validate_edge_index", "mlx_graphs.utils.validators.validate_edge_index_and_features", "mlx_graphs.utils.validators.validate_list_of_graph_data", "Array ops", "Utils", "Scatter", "Sorting", "Topology", "Transformations", "Validators", "MLX-graphs", "Installation"], "terms": {"class": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 30], "edge_index": [0, 1, 4, 8, 9, 10, 11, 13, 14, 21, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 51], "mlx": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 52], "core": [0, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39], "arrai": [0, 1, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 51], "none": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 23, 31, 32, 33, 36, 37], "node_featur": [0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 30, 34, 51], "edge_featur": [0, 8, 11, 29, 31, 32, 33, 36, 37, 39, 42, 51], "graph_featur": [0, 11, 51], "node_label": 0, "edge_label": 0, "graph_label": 0, "kwarg": [0, 1, 8, 9, 10, 12, 13, 14, 15, 16, 17], "repres": [0, 10, 13, 14, 28, 29, 33, 34, 36, 37, 38, 39], "graph": [0, 1, 2, 4, 8, 10, 11, 13, 14, 15, 16, 17, 31, 32, 33, 36, 37, 52], "object": [0, 1, 2, 3, 4, 7], "option": [0, 8, 10, 11, 13, 14, 15, 16, 17, 21, 23, 31, 32, 33, 36, 37, 51], "featur": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 29, 31, 32, 33, 34, 36, 37, 39, 51], "label": 0, "paramet": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "edg": [0, 1, 8, 10, 11, 14, 21, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51], "index": [0, 8, 10, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 37, 38, 39], "topologi": [0, 11, 45, 51], "shape": [0, 1, 8, 10, 13, 14, 15, 16, 17, 19, 20, 23, 27, 33, 36, 51], "2": [0, 1, 8, 10, 11, 13, 14, 23, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 51], "num_edg": [0, 8, 10, 13, 14, 28, 29, 33, 34, 36, 37, 38, 51], "num_nod": [0, 21, 22, 23, 27, 33, 37, 51], "num_node_featur": [0, 51], "contain": [0, 4, 11, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 51], "each": [0, 4, 8, 11, 15, 16, 17, 21, 22, 29, 31, 32, 33, 34, 36, 37, 38, 51], "node": [0, 1, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 21, 22, 33, 34, 36, 37, 38, 51], "num_edge_featur": [0, 33, 36, 51], "num_graph_featur": [0, 51], "global": [0, 11, 15, 16, 17], "num_node_label": 0, "num_edge_label": 0, "num_graph_label": 0, "addit": 0, "keyword": 0, "argument": [0, 13], "store": [0, 2], "ani": [0, 1, 9, 12, 13, 51, 52], "other": [0, 11, 19], "custom": [0, 10], "attribut": [0, 1, 4, 11, 51], "method": [0, 1, 8, 9, 10, 11, 12, 13, 14, 23], "__cat_dim__": 0, "kei": 0, "str": 0, "arg": [0, 12, 13], "int": [0, 8, 9, 12, 14, 19, 21, 23, 26, 27, 30, 33, 37], "thi": [0, 8, 12, 13, 22, 30, 51], "can": [0, 1, 4, 11, 13, 52], "overriden": 0, "when": 0, "batch": [0, 4, 7, 15, 16, 17], "i": [0, 4, 10, 11, 12, 13, 14, 15, 16, 17, 22, 25, 30, 31, 32, 33, 51, 52], "us": [0, 1, 4, 8, 9, 11, 12, 13, 14, 23, 33, 52], "given": [0, 13, 21, 23, 29, 31, 32, 33, 34, 36], "name": 0, "return": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "dimens": [0, 20, 23], "where": [0, 1, 10, 11, 14, 24, 25, 28, 29], "concaten": [0, 1, 4], "happen": 0, "dure": [0, 13, 21], "By": [0, 4, 13], "default": [0, 4, 10, 12, 13, 14, 21, 23, 33, 37, 38, 39], "all": [0, 1, 4, 11, 15, 16, 17, 23, 33], "axi": [0, 23, 26, 27], "1": [0, 1, 4, 8, 10, 11, 13, 14, 15, 16, 17, 21, 23, 27, 33, 35, 37, 38, 39], "e": [0, 11, 22, 52], "g": 0, "ar": [0, 10, 11, 24, 25, 26, 27, 33, 35, 51], "0": [0, 1, 4, 8, 10, 14, 15, 16, 17, 23, 26, 27, 35, 38, 39], "which": [0, 4, 11, 23, 26, 27, 51], "chang": [0, 51], "while": 0, "type": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "The": [0, 8, 10, 11, 14, 15, 16, 17, 20, 24, 25, 27, 30, 31, 32, 34, 35, 37, 51], "__inc__": 0, "an": [0, 4, 10, 11, 13, 15, 16, 17, 20, 21, 23, 24, 25, 26, 29, 37, 38, 39, 40, 41, 42, 51], "integ": 0, "indic": [0, 4, 8, 13, 15, 16, 17, 21, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35], "increment": [0, 4], "valu": [0, 8, 10, 16, 17, 21, 22, 23, 24, 25, 26, 27, 33], "appli": [0, 9, 10, 15, 16, 17, 23, 24, 25, 27], "elemnt": 0, "base": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 30, 31, 32, 34], "number": [0, 4, 8, 21, 23, 30, 33, 37], "previou": [0, 4], "avoid": 0, "duplic": [0, 24, 25], "cnot": 0, "keep": 0, "origin": [0, 20], "If": [0, 12, 15, 16, 17, 21, 23, 24, 25, 31, 32, 33], "should": 0, "set": [0, 11, 12, 14, 51], "behavior": 0, "properti": 0, "to_dict": 0, "dict": [0, 4, 13], "convert": [0, 37, 38, 39], "dictionari": 0, "A": [0, 11, 20, 28, 29, 33, 34, 36, 38, 39, 51], "list": [1, 2, 3, 4, 43], "graphdata": [1, 2, 3, 4, 7, 14, 43], "multipl": [1, 4], "singl": [1, 2], "unifi": [1, 4], "effici": 1, "comput": [1, 8, 10, 13, 14, 21, 22, 26, 27, 35], "parallel": 1, "over": [1, 9], "remain": [1, 4], "disconnect": [1, 4], "mean": [1, 8, 13, 14, 17, 23, 26], "pair": 1, "have": [1, 11, 22], "common": 1, "especi": 1, "speed": 1, "up": 1, "classif": 1, "task": 1, "easili": 1, "fit": 1, "memori": 1, "process": 1, "togeth": 1, "exampl": [1, 8, 10, 11, 14, 23, 27, 30, 35, 38, 39, 51], "mx": [1, 8, 10, 12, 14, 23, 27, 30, 35, 38, 39], "zero": [1, 22], "3": [1, 8, 10, 14, 38, 39], "ones": [1, 14], "4": [1, 8, 10, 14, 30], "num_graph": 1, "9": 1, "int32": 1, "float32": [1, 10, 14], "__init__": [1, 30], "graphdatabatch": [2, 3, 7], "construct": 2, "from": [2, 3, 4, 10, 12, 13, 14, 21, 30, 33, 36], "merg": 2, "larg": [2, 14], "reconstruct": 3, "graph_list": 4, "specif": 4, "dim": [4, 19], "apart": 4, "along": [4, 16, 17, 26, 27], "independ": 4, "final": [4, 10, 13], "cumsum": 4, "per": 4, "big": 4, "well": 4, "privat": 4, "behind": 4, "hood": 4, "These": [4, 26, 27], "start": [4, 52], "underscor": 4, "_": 4, "ignor": 4, "user": [4, 10], "mlx_graph": 7, "unbatch": 7, "collat": 7, "node_features_dim": [8, 9, 14, 15, 16, 17], "out_features_dim": [8, 9, 14], "head": 8, "concat": 8, "bool": [8, 9, 10, 12, 14, 31, 32, 33], "true": [8, 9, 12, 14, 31, 32, 33], "bia": [8, 9, 12, 14], "negative_slop": 8, "float": [8, 10, 33], "dropout": 8, "edge_features_dim": 8, "messagepass": [8, 9, 10, 14, 30], "attent": 8, "network": [8, 10, 11, 13, 30, 51], "convolut": [8, 9, 10, 14], "layer": [8, 10, 11, 12, 14], "size": [8, 9, 11, 14, 21, 23, 26, 27, 51], "input": [8, 9, 10, 11, 12, 13, 14, 24, 25, 26, 27, 34, 38, 39], "output": [8, 9, 10, 12, 14, 21, 23, 26, 27, 38, 39], "embed": [8, 9, 10, 13, 14], "whether": [8, 9, 10, 14, 31, 32, 33], "reduct": [8, 23], "project": [8, 9, 14], "slope": 8, "leaki": 8, "relu": [8, 10, 30], "probabl": 8, "p": 8, "conv": [8, 10, 14], "16": [8, 10, 14, 30], "32": [8, 10, 14], "random": [8, 10], "uniform": [8, 10], "low": [8, 10], "high": [8, 10], "5": [8, 10, 14, 23, 27, 38, 39], "h": [8, 10, 14], "64": 8, "__call__": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 30], "forward": [8, 10, 11, 14], "pass": [8, 10, 11, 13, 14], "messag": [8, 10, 11, 13, 14], "src_featur": [8, 13], "dst_featur": [8, 13], "alpha_src": 8, "alpha_dst": 8, "follow": [8, 23, 52], "gat": 8, "": [8, 11, 12, 51], "propag": [8, 13], "rule": 8, "sourc": [8, 11, 13, 19, 24, 25, 28, 29, 33, 34, 36, 37, 38, 51], "destin": [8, 11, 13, 34, 51], "function": [8, 9, 12, 13, 14, 15, 16, 17, 23, 31, 32, 40, 41, 42, 43, 51], "includ": 8, "compat": [8, 20], "precomput": 8, "1d": 8, "either": [8, 10, 13], "src": [8, 13, 19, 21, 23, 24, 25, 27], "dst": [8, 13, 21], "softmax": [8, 13, 23, 27], "gcn": [9, 22], "edge_weight": [9, 10, 13, 14, 21], "normal": 9, "call": [9, 12, 13, 15, 16, 17], "self": [9, 12, 13, 15, 16, 17, 30, 33, 36], "mlp": 10, "modul": [10, 11, 13, 30], "ep": 10, "learn_ep": 10, "fals": [10, 12, 31, 32], "isomorph": 10, "how": [10, 11], "power": 10, "neural": [10, 13, 51], "paper": [10, 14, 22], "mathbf": [10, 14], "_i": [10, 14], "text": 10, "left": 10, "epsilon": 10, "cdot": [10, 14], "x": [10, 14, 30, 35], "sum_": 10, "j": [10, 14], "mathcal": [10, 14], "n": [10, 11, 14], "_j": [10, 14], "right": 10, "respect": 10, "denot": [10, 14], "provid": [10, 11, 15, 16, 17, 21, 23, 31, 32, 33, 51], "fix": 10, "learn": [10, 11, 14], "callabl": [10, 11], "initi": [10, 11, 12], "term": [10, 51], "import": [10, 14], "node_feat_dim": 10, "out_feat_dim": 10, "sequenti": 10, "linear": [10, 30], "536501": 10, "154826": 10, "745569": 10, "31547": 10, "0962588": 10, "108504": 10, "415889": 10, "0498145": 10, "597379": 10, "194553": 10, "251498": 10, "207561": 10, "119966": 10, "0159533": 10, "276559": 10, "0258303": 10, "194533": 10, "15515": 10, "21477": 10, "169684": 10, "485867": 10, "0194768": 10, "145761": 10, "139433": 10, "133289": 10, "0279559": 10, "358095": 10, "0443346": 10, "11571": 10, "114396": 10, "dtype": [10, 14, 38, 39], "weight": [10, 12, 14, 21], "leverag": [10, 14, 21], "node_model": 11, "edge_model": 11, "graph_model": 11, "implement": [11, 13], "gener": 11, "block": 11, "defin": [11, 51], "take": [11, 16, 17], "same": 11, "associ": [11, 31, 32, 33, 36, 51], "f_n": 11, "f_e": 11, "itself": [11, 51], "f_u": 11, "specifi": [11, 26, 27, 33, 51], "column": [11, 51], "vector": 11, "model": [11, 13, 30], "updat": [11, 13, 33, 36], "present": [11, 24, 25, 35], "depend": 11, "thei": [11, 33, 51], "act": 11, "flexibl": 11, "meta": 11, "architectur": 11, "like": [11, 19], "deep": 11, "relat": 11, "more": 11, "see": 11, "For": [11, 52], "usag": 11, "here": [11, 51], "refer": [11, 13], "battaglia": 11, "et": [11, 13], "al": [11, 13], "induct": [11, 14], "bias": 11, "tupl": [11, 13, 20, 28, 29, 33, 34, 36, 39], "input_dim": 12, "output_dim": 12, "xavier": 12, "glorot": 12, "initit": 12, "inherit": [12, 13], "instead": [12, 21], "dimension": [12, 37], "aggr": [13, 23], "liter": [13, 23], "add": [13, 23, 33], "max": [13, 23, 25], "creat": 13, "mpnn": 13, "build": 13, "arbitrari": 13, "gnn": [13, 30, 51], "paradigm": 13, "inspir": 13, "pytorch": 13, "geometr": 13, "aggreg": [13, 14, 30], "strategi": 13, "gilmer": 13, "quantum": 13, "chemistri": 13, "fei": 13, "pyg": 13, "receiv": 13, "between": [13, 19], "connect": 13, "directli": 13, "integr": 13, "scalar": 13, "weigh": 13, "neighbor": 13, "message_kwarg": 13, "aggregate_kwarg": 13, "update_kwarg": 13, "them": 13, "represent": [13, 14, 15, 16, 17, 37, 38, 39], "union": [13, 33, 34], "distinct": 13, "update_nod": 13, "graphsag": 14, "w": 14, "_1": 14, "_2": 14, "bigoplus_": 14, "bigoplu": 14, "data": 14, "65429": 14, "376169": 14, "04172": 14, "919106": 14, "42576": 14, "490938": 14, "05823": 14, "295776": 14, "075439": 14, "104383": 14, "031947": 14, "351897": 14, "batch_indic": [15, 16, 17], "sum": [15, 24], "obtain": [15, 16, 17], "level": [15, 16, 17], "pool": [15, 16, 17], "otheris": [15, 16, 17], "num_batch": [15, 16, 17], "its": [15, 16, 17], "wise": [16, 17], "maximum": [16, 25], "averag": 17, "make": 19, "mai": [19, 51, 52], "requir": 19, "some": 19, "situat": 19, "match": 19, "new": [19, 20], "new_shap": 20, "desir": 20, "must": 20, "view": 20, "count": 21, "ocurr": 21, "usual": 21, "infer": [21, 33], "length": [21, 22], "degre": 22, "invert": 22, "squar": 22, "root": 22, "note": 22, "temporari": 22, "workaround": 22, "deal": 22, "infinit": 22, "accord": 22, "boolean": 22, "isn": 22, "t": 22, "yet": 22, "avail": [22, 51, 52], "so": 22, "we": [22, 51, 52], "pre": 22, "pad": 22, "element": [22, 23], "isol": 22, "out_siz": [23, 26, 27], "perform": 23, "oper": [23, 24, 25, 26, 27], "empti": [23, 24, 25], "tensor": [23, 33, 36], "first": [23, 28, 29, 35], "emploi": 23, "item": 23, "within": [24, 25], "assign": 24, "often": [24, 25], "determin": [24, 25, 26, 27, 31, 32], "result": [24, 25, 27, 37], "after": [24, 25, 27], "kept": 25, "group": [26, 27], "undergo": [26, 27], "row": [28, 29, 51], "second": [28, 29, 35], "target": [28, 29, 33, 34, 36, 37, 38], "correspond": [28, 29, 37], "nn": 30, "hop": 30, "inform": 30, "work": 30, "onli": 30, "def": 30, "super": 30, "conv1": 30, "gcnconv": 30, "conv2": 30, "lin": 30, "direct": 31, "consid": [31, 32], "both": [31, 32, 51], "check": [31, 32, 40, 41, 42, 43], "otherwis": [31, 32], "undirect": 32, "fill_valu": 33, "allow_rep": 33, "loop": [33, 36], "fill": 33, "even": 33, "alreadi": 33, "extract": 34, "edge_index_1": 35, "edge_index_2": 35, "NOT": 35, "remove_common_edg": 35, "remov": 36, "without": 36, "adjac": [37, 38, 39, 40], "matrix": [37, 38, 39, 40], "adjacency_matrix": [38, 39], "uint32": [38, 39], "spars": 39, "func": [40, 41, 42, 43], "decor": [40, 41, 42, 43], "transform": 45, "sort": 45, "valid": 45, "scatter": 45, "op": 45, "librari": 51, "built": 51, "upon": 51, "appl": 51, "veri": 51, "earli": 51, "develop": [51, 52], "break": 51, "upcom": 51, "version": [51, 52], "show": 51, "th": 51, "adopt": 51, "abov": 51, "convent": 51, "across": 51, "entir": 51, "order": 51, "re": 51, "util": 51, "pypi": 52, "To": 52, "run": 52, "pip": 52, "clone": 52, "github": 52, "repo": 52, "git": 52, "com": 52, "tristanbilot": 52, "cd": 52, "Then": 52, "suggest": 52, "separ": 52, "virtual": 52, "environ": 52, "extra": 52, "document": 52, "you": 52, "purpos": 52, "want": 52, "current": 52, "via": 52, "http": 52, "ml": 52, "explor": 52}, "objects": {"mlx_graphs.data.batch": [[1, 0, 1, "", "GraphDataBatch"], [2, 2, 1, "", "batch"], [3, 2, 1, "", "unbatch"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, 1, 1, "", "__init__"]], "mlx_graphs.data.collate": [[4, 2, 1, "", "collate"]], "mlx_graphs.data.data": [[0, 0, 1, "", "GraphData"]], "mlx_graphs.data.data.GraphData": [[0, 1, 1, "", "__cat_dim__"], [0, 1, 1, "", "__inc__"], [0, 3, 1, "", "num_nodes"], [0, 1, 1, "", "to_dict"]], "mlx_graphs.nn": [[8, 0, 1, "", "GATConv"], [9, 0, 1, "", "GCNConv"], [10, 0, 1, "", "GINConv"], [11, 0, 1, "", "GraphNetworkBlock"], [12, 0, 1, "", "Linear"], [13, 0, 1, "", "MessagePassing"], [14, 0, 1, "", "SAGEConv"], [15, 0, 1, "", "global_add_pool"], [16, 0, 1, "", "global_max_pool"], [17, 0, 1, "", "global_mean_pool"]], "mlx_graphs.nn.GATConv": [[8, 1, 1, "", "__call__"], [8, 1, 1, "", "message"]], "mlx_graphs.nn.GCNConv": [[9, 1, 1, "", "__call__"]], "mlx_graphs.nn.GINConv": [[10, 1, 1, "", "__call__"]], "mlx_graphs.nn.GraphNetworkBlock": [[11, 1, 1, "", "__call__"]], "mlx_graphs.nn.Linear": [[12, 1, 1, "", "__call__"]], "mlx_graphs.nn.MessagePassing": [[13, 1, 1, "", "__call__"], [13, 1, 1, "", "aggregate"], [13, 1, 1, "", "message"], [13, 1, 1, "", "propagate"], [13, 1, 1, "", "update_nodes"]], "mlx_graphs.nn.SAGEConv": [[14, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_add_pool": [[15, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_max_pool": [[16, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_mean_pool": [[17, 1, 1, "", "__call__"]], "mlx_graphs.utils.array_ops": [[19, 2, 1, "", "broadcast"], [20, 2, 1, "", "expand"]], "mlx_graphs.utils.scatter": [[21, 2, 1, "", "degree"], [22, 2, 1, "", "invert_sqrt_degree"], [23, 2, 1, "", "scatter"], [24, 2, 1, "", "scatter_add"], [25, 2, 1, "", "scatter_max"], [26, 2, 1, "", "scatter_mean"], [27, 2, 1, "", "scatter_softmax"]], "mlx_graphs.utils.sorting": [[28, 2, 1, "", "sort_edge_index"], [29, 2, 1, "", "sort_edge_index_and_features"]], "mlx_graphs.utils.topology": [[30, 2, 1, "", "get_num_hops"], [31, 2, 1, "", "is_directed"], [32, 2, 1, "", "is_undirected"]], "mlx_graphs.utils.transformations": [[33, 2, 1, "", "add_self_loops"], [34, 2, 1, "", "get_src_dst_features"], [35, 2, 1, "", "get_unique_edge_indices"], [36, 2, 1, "", "remove_self_loops"], [37, 2, 1, "", "to_adjacency_matrix"], [38, 2, 1, "", "to_edge_index"], [39, 2, 1, "", "to_sparse_adjacency_matrix"]], "mlx_graphs.utils.validators": [[40, 2, 1, "", "validate_adjacency_matrix"], [41, 2, 1, "", "validate_edge_index"], [42, 2, 1, "", "validate_edge_index_and_features"], [43, 2, 1, "", "validate_list_of_graph_data"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"mlx_graph": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "data": [0, 1, 2, 3, 4, 6, 7, 51], "graphdata": 0, "batch": [1, 2, 3, 5], "graphdatabatch": 1, "unbatch": 3, "collat": 4, "object": [5, 6], "nn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "gatconv": 8, "gcnconv": 9, "ginconv": 10, "graphnetworkblock": 11, "linear": 12, "messagepass": 13, "sageconv": 14, "global_add_pool": 15, "global_max_pool": 16, "global_mean_pool": 17, "neural": 18, "network": 18, "util": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45], "array_op": [19, 20], "broadcast": 19, "expand": 20, "scatter": [21, 22, 23, 24, 25, 26, 27, 46], "degre": 21, "invert_sqrt_degre": 22, "scatter_add": 24, "scatter_max": 25, "scatter_mean": 26, "scatter_softmax": 27, "sort": [28, 29, 47], "sort_edge_index": 28, "sort_edge_index_and_featur": 29, "topologi": [30, 31, 32, 48], "get_num_hop": 30, "is_direct": 31, "is_undirect": 32, "transform": [33, 34, 35, 36, 37, 38, 39, 49], "add_self_loop": 33, "get_src_dst_featur": 34, "get_unique_edge_indic": 35, "remove_self_loop": 36, "to_adjacency_matrix": 37, "to_edge_index": 38, "to_sparse_adjacency_matrix": 39, "valid": [40, 41, 42, 43, 50], "validate_adjacency_matrix": 40, "validate_edge_index": 41, "validate_edge_index_and_featur": 42, "validate_list_of_graph_data": 43, "arrai": 44, "op": 44, "mlx": 51, "graph": 51, "usag": 51, "model": 51, "instal": [51, 52], "api": 51, "build": 52, "from": 52, "sourc": 52, "test": 52, "dev": 52, "benchmark": 52, "doc": 52, "depend": 52}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"mlx_graphs.data.data.GraphData": [[0, "mlx-graphs-data-data-graphdata"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, "mlx-graphs-data-batch-graphdatabatch"]], "mlx_graphs.data.batch.batch": [[2, "mlx-graphs-data-batch-batch"]], "mlx_graphs.data.batch.unbatch": [[3, "mlx-graphs-data-batch-unbatch"]], "mlx_graphs.data.collate.collate": [[4, "mlx-graphs-data-collate-collate"]], "Batch Objects": [[5, "batch-objects"]], "Data Objects": [[6, "data-objects"]], "Data": [[7, "data"]], "mlx_graphs.nn.GATConv": [[8, "mlx-graphs-nn-gatconv"]], "mlx_graphs.nn.GCNConv": [[9, "mlx-graphs-nn-gcnconv"]], "mlx_graphs.nn.GINConv": [[10, "mlx-graphs-nn-ginconv"]], "mlx_graphs.nn.GraphNetworkBlock": [[11, "mlx-graphs-nn-graphnetworkblock"]], "mlx_graphs.nn.Linear": [[12, "mlx-graphs-nn-linear"]], "mlx_graphs.nn.MessagePassing": [[13, "mlx-graphs-nn-messagepassing"]], "mlx_graphs.nn.SAGEConv": [[14, "mlx-graphs-nn-sageconv"]], "mlx_graphs.nn.global_add_pool": [[15, "mlx-graphs-nn-global-add-pool"]], "mlx_graphs.nn.global_max_pool": [[16, "mlx-graphs-nn-global-max-pool"]], "mlx_graphs.nn.global_mean_pool": [[17, "mlx-graphs-nn-global-mean-pool"]], "Neural Networks": [[18, "neural-networks"]], "mlx_graphs.utils.array_ops.broadcast": [[19, "mlx-graphs-utils-array-ops-broadcast"]], "mlx_graphs.utils.array_ops.expand": [[20, "mlx-graphs-utils-array-ops-expand"]], "mlx_graphs.utils.scatter.degree": [[21, "mlx-graphs-utils-scatter-degree"]], "mlx_graphs.utils.scatter.invert_sqrt_degree": [[22, "mlx-graphs-utils-scatter-invert-sqrt-degree"]], "mlx_graphs.utils.scatter.scatter": [[23, "mlx-graphs-utils-scatter-scatter"]], "mlx_graphs.utils.scatter.scatter_add": [[24, "mlx-graphs-utils-scatter-scatter-add"]], "mlx_graphs.utils.scatter.scatter_max": [[25, "mlx-graphs-utils-scatter-scatter-max"]], "mlx_graphs.utils.scatter.scatter_mean": [[26, "mlx-graphs-utils-scatter-scatter-mean"]], "mlx_graphs.utils.scatter.scatter_softmax": [[27, "mlx-graphs-utils-scatter-scatter-softmax"]], "mlx_graphs.utils.sorting.sort_edge_index": [[28, "mlx-graphs-utils-sorting-sort-edge-index"]], "mlx_graphs.utils.sorting.sort_edge_index_and_features": [[29, "mlx-graphs-utils-sorting-sort-edge-index-and-features"]], "mlx_graphs.utils.topology.get_num_hops": [[30, "mlx-graphs-utils-topology-get-num-hops"]], "mlx_graphs.utils.topology.is_directed": [[31, "mlx-graphs-utils-topology-is-directed"]], "mlx_graphs.utils.topology.is_undirected": [[32, "mlx-graphs-utils-topology-is-undirected"]], "mlx_graphs.utils.transformations.add_self_loops": [[33, "mlx-graphs-utils-transformations-add-self-loops"]], "mlx_graphs.utils.transformations.get_src_dst_features": [[34, "mlx-graphs-utils-transformations-get-src-dst-features"]], "mlx_graphs.utils.transformations.get_unique_edge_indices": [[35, "mlx-graphs-utils-transformations-get-unique-edge-indices"]], "mlx_graphs.utils.transformations.remove_self_loops": [[36, "mlx-graphs-utils-transformations-remove-self-loops"]], "mlx_graphs.utils.transformations.to_adjacency_matrix": [[37, "mlx-graphs-utils-transformations-to-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_edge_index": [[38, "mlx-graphs-utils-transformations-to-edge-index"]], "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix": [[39, "mlx-graphs-utils-transformations-to-sparse-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_adjacency_matrix": [[40, "mlx-graphs-utils-validators-validate-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_edge_index": [[41, "mlx-graphs-utils-validators-validate-edge-index"]], "mlx_graphs.utils.validators.validate_edge_index_and_features": [[42, "mlx-graphs-utils-validators-validate-edge-index-and-features"]], "mlx_graphs.utils.validators.validate_list_of_graph_data": [[43, "mlx-graphs-utils-validators-validate-list-of-graph-data"]], "Array ops": [[44, "array-ops"]], "Utils": [[45, "utils"]], "Scatter": [[46, "scatter"]], "Sorting": [[47, "sorting"]], "Topology": [[48, "topology"]], "Transformations": [[49, "transformations"]], "Validators": [[50, "validators"]], "MLX-graphs": [[51, "mlx-graphs"]], "Usage": [[51, "usage"]], "Graph data model": [[51, "graph-data-model"]], "Install": [[51, null]], "API": [[51, null]], "Installation": [[52, "installation"]], "Build from source": [[52, "build-from-source"]], "Installing test, dev, benchmarks, docs dependencies": [[52, "installing-test-dev-benchmarks-docs-dependencies"]]}, "indexentries": {"graphdata (class in mlx_graphs.data.data)": [[0, "mlx_graphs.data.data.GraphData"]], "__cat_dim__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__cat_dim__"]], "__inc__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__inc__"]], "num_nodes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_nodes"]], "to_dict() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.to_dict"]], "graphdatabatch (class in mlx_graphs.data.batch)": [[1, "mlx_graphs.data.batch.GraphDataBatch"]], "__init__() (mlx_graphs.data.batch.graphdatabatch method)": [[1, "mlx_graphs.data.batch.GraphDataBatch.__init__"]], "batch() (in module mlx_graphs.data.batch)": [[2, "mlx_graphs.data.batch.batch"]], "unbatch() (in module mlx_graphs.data.batch)": [[3, "mlx_graphs.data.batch.unbatch"]], "collate() (in module mlx_graphs.data.collate)": [[4, "mlx_graphs.data.collate.collate"]], "gatconv (class in mlx_graphs.nn)": [[8, "mlx_graphs.nn.GATConv"]], "__call__() (mlx_graphs.nn.gatconv method)": [[8, "mlx_graphs.nn.GATConv.__call__"]], "message() (mlx_graphs.nn.gatconv method)": [[8, "mlx_graphs.nn.GATConv.message"]], "gcnconv (class in mlx_graphs.nn)": [[9, "mlx_graphs.nn.GCNConv"]], "__call__() (mlx_graphs.nn.gcnconv method)": [[9, "mlx_graphs.nn.GCNConv.__call__"]], "ginconv (class in mlx_graphs.nn)": [[10, "mlx_graphs.nn.GINConv"]], "__call__() (mlx_graphs.nn.ginconv method)": [[10, "mlx_graphs.nn.GINConv.__call__"]], "graphnetworkblock (class in mlx_graphs.nn)": [[11, "mlx_graphs.nn.GraphNetworkBlock"]], "__call__() (mlx_graphs.nn.graphnetworkblock method)": [[11, "mlx_graphs.nn.GraphNetworkBlock.__call__"]], "linear (class in mlx_graphs.nn)": [[12, "mlx_graphs.nn.Linear"]], "__call__() (mlx_graphs.nn.linear method)": [[12, "mlx_graphs.nn.Linear.__call__"]], "messagepassing (class in mlx_graphs.nn)": [[13, "mlx_graphs.nn.MessagePassing"]], "__call__() (mlx_graphs.nn.messagepassing method)": [[13, "mlx_graphs.nn.MessagePassing.__call__"]], "aggregate() (mlx_graphs.nn.messagepassing method)": [[13, "mlx_graphs.nn.MessagePassing.aggregate"]], "message() (mlx_graphs.nn.messagepassing method)": [[13, "mlx_graphs.nn.MessagePassing.message"]], "propagate() (mlx_graphs.nn.messagepassing method)": [[13, "mlx_graphs.nn.MessagePassing.propagate"]], "update_nodes() (mlx_graphs.nn.messagepassing method)": [[13, "mlx_graphs.nn.MessagePassing.update_nodes"]], "sageconv (class in mlx_graphs.nn)": [[14, "mlx_graphs.nn.SAGEConv"]], "__call__() (mlx_graphs.nn.sageconv method)": [[14, "mlx_graphs.nn.SAGEConv.__call__"]], "__call__() (mlx_graphs.nn.global_add_pool method)": [[15, "mlx_graphs.nn.global_add_pool.__call__"]], "global_add_pool (class in mlx_graphs.nn)": [[15, "mlx_graphs.nn.global_add_pool"]], "__call__() (mlx_graphs.nn.global_max_pool method)": [[16, "mlx_graphs.nn.global_max_pool.__call__"]], "global_max_pool (class in mlx_graphs.nn)": [[16, "mlx_graphs.nn.global_max_pool"]], "__call__() (mlx_graphs.nn.global_mean_pool method)": [[17, "mlx_graphs.nn.global_mean_pool.__call__"]], "global_mean_pool (class in mlx_graphs.nn)": [[17, "mlx_graphs.nn.global_mean_pool"]], "broadcast() (in module mlx_graphs.utils.array_ops)": [[19, "mlx_graphs.utils.array_ops.broadcast"]], "expand() (in module mlx_graphs.utils.array_ops)": [[20, "mlx_graphs.utils.array_ops.expand"]], "degree() (in module mlx_graphs.utils.scatter)": [[21, "mlx_graphs.utils.scatter.degree"]], "invert_sqrt_degree() (in module mlx_graphs.utils.scatter)": [[22, "mlx_graphs.utils.scatter.invert_sqrt_degree"]], "scatter() (in module mlx_graphs.utils.scatter)": [[23, "mlx_graphs.utils.scatter.scatter"]], "scatter_add() (in module mlx_graphs.utils.scatter)": [[24, "mlx_graphs.utils.scatter.scatter_add"]], "scatter_max() (in module mlx_graphs.utils.scatter)": [[25, "mlx_graphs.utils.scatter.scatter_max"]], "scatter_mean() (in module mlx_graphs.utils.scatter)": [[26, "mlx_graphs.utils.scatter.scatter_mean"]], "scatter_softmax() (in module mlx_graphs.utils.scatter)": [[27, "mlx_graphs.utils.scatter.scatter_softmax"]], "sort_edge_index() (in module mlx_graphs.utils.sorting)": [[28, "mlx_graphs.utils.sorting.sort_edge_index"]], "sort_edge_index_and_features() (in module mlx_graphs.utils.sorting)": [[29, "mlx_graphs.utils.sorting.sort_edge_index_and_features"]], "get_num_hops() (in module mlx_graphs.utils.topology)": [[30, "mlx_graphs.utils.topology.get_num_hops"]], "is_directed() (in module mlx_graphs.utils.topology)": [[31, "mlx_graphs.utils.topology.is_directed"]], "is_undirected() (in module mlx_graphs.utils.topology)": [[32, "mlx_graphs.utils.topology.is_undirected"]], "add_self_loops() (in module mlx_graphs.utils.transformations)": [[33, "mlx_graphs.utils.transformations.add_self_loops"]], "get_src_dst_features() (in module mlx_graphs.utils.transformations)": [[34, "mlx_graphs.utils.transformations.get_src_dst_features"]], "get_unique_edge_indices() (in module mlx_graphs.utils.transformations)": [[35, "mlx_graphs.utils.transformations.get_unique_edge_indices"]], "remove_self_loops() (in module mlx_graphs.utils.transformations)": [[36, "mlx_graphs.utils.transformations.remove_self_loops"]], "to_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[37, "mlx_graphs.utils.transformations.to_adjacency_matrix"]], "to_edge_index() (in module mlx_graphs.utils.transformations)": [[38, "mlx_graphs.utils.transformations.to_edge_index"]], "to_sparse_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[39, "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix"]], "validate_adjacency_matrix() (in module mlx_graphs.utils.validators)": [[40, "mlx_graphs.utils.validators.validate_adjacency_matrix"]], "validate_edge_index() (in module mlx_graphs.utils.validators)": [[41, "mlx_graphs.utils.validators.validate_edge_index"]], "validate_edge_index_and_features() (in module mlx_graphs.utils.validators)": [[42, "mlx_graphs.utils.validators.validate_edge_index_and_features"]], "validate_list_of_graph_data() (in module mlx_graphs.utils.validators)": [[43, "mlx_graphs.utils.validators.validate_list_of_graph_data"]]}})