Search.setIndex({"docnames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch", "api/data/batch", "api/data/data", "api/data/index", "api/nn/_autosummary/mlx_graphs.nn.GATConv", "api/nn/_autosummary/mlx_graphs.nn.GCNConv", "api/nn/_autosummary/mlx_graphs.nn.GINConv", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock", "api/nn/_autosummary/mlx_graphs.nn.Linear", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool", "api/nn/index", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_list_of_graph_data", "api/utils/array_ops", "api/utils/index", "api/utils/scatter", "api/utils/sorting", "api/utils/topology", "api/utils/transformations", "api/utils/validators", "index", "install"], "filenames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch.rst", "api/data/batch.rst", "api/data/data.rst", "api/data/index.rst", "api/nn/_autosummary/mlx_graphs.nn.GATConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GCNConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GINConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock.rst", "api/nn/_autosummary/mlx_graphs.nn.Linear.rst", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing.rst", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv.rst", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool.rst", "api/nn/index.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_list_of_graph_data.rst", "api/utils/array_ops.rst", "api/utils/index.rst", "api/utils/scatter.rst", "api/utils/sorting.rst", "api/utils/topology.rst", "api/utils/transformations.rst", "api/utils/validators.rst", "index.rst", "install.rst"], "titles": ["mlx_graphs.data.data.GraphData", "mlx_graphs.data.batch.GraphDataBatch", "mlx_graphs.data.batch.batch", "mlx_graphs.data.batch.unbatch", "Batch Objects", "Data Objects", "Data", "mlx_graphs.nn.GATConv", "mlx_graphs.nn.GCNConv", "mlx_graphs.nn.GINConv", "mlx_graphs.nn.GraphNetworkBlock", "mlx_graphs.nn.Linear", "mlx_graphs.nn.MessagePassing", "mlx_graphs.nn.SAGEConv", "mlx_graphs.nn.global_add_pool", "mlx_graphs.nn.global_max_pool", "mlx_graphs.nn.global_mean_pool", "Neural Networks", "mlx_graphs.utils.array_ops.broadcast", "mlx_graphs.utils.array_ops.expand", "mlx_graphs.utils.scatter.degree", "mlx_graphs.utils.scatter.invert_sqrt_degree", "mlx_graphs.utils.scatter.scatter", "mlx_graphs.utils.scatter.scatter_add", "mlx_graphs.utils.scatter.scatter_max", "mlx_graphs.utils.scatter.scatter_mean", "mlx_graphs.utils.scatter.scatter_softmax", "mlx_graphs.utils.sorting.sort_edge_index", "mlx_graphs.utils.sorting.sort_edge_index_and_features", "mlx_graphs.utils.topology.get_num_hops", "mlx_graphs.utils.topology.is_directed", "mlx_graphs.utils.topology.is_undirected", "mlx_graphs.utils.transformations.add_self_loops", "mlx_graphs.utils.transformations.get_src_dst_features", "mlx_graphs.utils.transformations.get_unique_edge_indices", "mlx_graphs.utils.transformations.remove_self_loops", "mlx_graphs.utils.transformations.to_adjacency_matrix", "mlx_graphs.utils.transformations.to_edge_index", "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "mlx_graphs.utils.validators.validate_adjacency_matrix", "mlx_graphs.utils.validators.validate_edge_index", "mlx_graphs.utils.validators.validate_edge_index_and_features", "mlx_graphs.utils.validators.validate_list_of_graph_data", "Array ops", "Utils", "Scatter", "Sorting", "Topology", "Transformations", "Validators", "MLX-graphs", "Installation"], "terms": {"class": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29], "edge_index": [0, 1, 7, 8, 9, 10, 12, 13, 20, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 50], "mlx": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51], "core": [0, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38], "arrai": [0, 1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 50], "none": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 22, 30, 31, 32, 35, 36], "node_featur": [0, 1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 29, 33, 50], "edge_featur": [0, 7, 10, 28, 30, 31, 32, 35, 36, 38, 41, 50], "graph_featur": [0, 10, 50], "node_label": 0, "edge_label": 0, "graph_label": 0, "kwarg": [0, 1, 7, 8, 9, 11, 12, 13, 14, 15, 16], "repres": [0, 9, 12, 13, 27, 28, 32, 33, 35, 36, 37, 38], "graph": [0, 1, 2, 7, 9, 10, 12, 13, 14, 15, 16, 30, 31, 32, 35, 36, 51], "object": [0, 1, 2, 3, 6], "option": [0, 7, 9, 10, 12, 13, 14, 15, 16, 20, 22, 30, 31, 32, 35, 36, 50], "featur": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 30, 31, 32, 33, 35, 36, 38, 50], "label": 0, "paramet": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "edg": [0, 1, 7, 9, 10, 13, 20, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50], "index": [0, 7, 9, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 37, 38], "topologi": [0, 10, 44, 50], "shape": [0, 7, 9, 12, 13, 14, 15, 16, 18, 19, 22, 26, 32, 35, 50], "2": [0, 1, 7, 9, 10, 12, 13, 22, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 50], "num_edg": [0, 7, 9, 12, 13, 27, 28, 32, 33, 35, 36, 37, 50], "num_nod": [0, 20, 21, 22, 26, 32, 36, 50], "num_node_featur": [0, 50], "contain": [0, 10, 22, 23, 24, 25, 26, 27, 28, 32, 33, 35, 50], "each": [0, 7, 10, 14, 15, 16, 20, 21, 28, 30, 31, 32, 33, 35, 36, 37, 50], "node": [0, 1, 7, 8, 9, 10, 12, 13, 14, 15, 16, 20, 21, 32, 33, 35, 36, 37, 50], "num_edge_featur": [0, 32, 35, 50], "num_graph_featur": [0, 50], "global": [0, 10, 14, 15, 16], "num_node_label": 0, "num_edge_label": 0, "num_graph_label": 0, "addit": 0, "keyword": 0, "argument": [0, 12], "store": [0, 2], "ani": [0, 1, 8, 11, 12, 50, 51], "other": [0, 10, 18], "custom": [0, 9], "attribut": [0, 1, 10, 50], "method": [0, 1, 7, 8, 9, 10, 11, 12, 13, 22], "__cat_dim__": 0, "kei": 0, "str": 0, "arg": [0, 11, 12], "int": [0, 7, 8, 11, 13, 18, 20, 22, 25, 26, 29, 32, 36], "thi": [0, 7, 11, 12, 21, 29, 50], "can": [0, 1, 10, 12, 51], "overriden": 0, "when": 0, "batch": [0, 6, 14, 15, 16], "i": [0, 9, 10, 11, 12, 13, 14, 15, 16, 21, 24, 29, 30, 31, 32, 50, 51], "us": [0, 1, 7, 8, 10, 11, 12, 13, 22, 32, 51], "given": [0, 12, 20, 22, 28, 30, 31, 32, 33, 35], "name": 0, "return": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "dimens": [0, 19, 22], "where": [0, 1, 9, 10, 13, 23, 24, 27, 28], "concaten": [0, 1], "happen": 0, "dure": [0, 12, 20], "By": [0, 12], "default": [0, 9, 11, 12, 13, 20, 22, 32, 36, 37, 38], "all": [0, 1, 10, 14, 15, 16, 22, 32], "axi": [0, 22, 25, 26], "1": [0, 1, 7, 9, 10, 12, 13, 14, 15, 16, 20, 22, 26, 32, 34, 36, 37, 38], "e": [0, 10, 21, 51], "g": 0, "ar": [0, 9, 10, 23, 24, 25, 26, 32, 34, 50], "0": [0, 1, 7, 9, 13, 14, 15, 16, 22, 25, 26, 34, 37, 38], "which": [0, 10, 22, 25, 26, 50], "chang": [0, 50], "while": 0, "type": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "The": [0, 7, 9, 10, 13, 14, 15, 16, 19, 23, 24, 26, 29, 30, 31, 33, 34, 36, 50], "__inc__": 0, "an": [0, 9, 10, 12, 14, 15, 16, 19, 20, 22, 23, 24, 25, 28, 36, 37, 38, 39, 40, 41, 50], "integ": 0, "indic": [0, 7, 12, 14, 15, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34], "increment": 0, "valu": [0, 7, 9, 15, 16, 20, 21, 22, 23, 24, 25, 26, 32], "appli": [0, 8, 9, 14, 15, 16, 22, 23, 24, 26], "elemnt": 0, "base": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 30, 31, 33], "number": [0, 7, 20, 22, 29, 32, 36], "previou": 0, "avoid": 0, "duplic": [0, 23, 24], "cnot": 0, "keep": 0, "origin": [0, 19], "If": [0, 11, 14, 15, 16, 20, 22, 23, 24, 30, 31, 32], "should": 0, "set": [0, 10, 11, 13, 50], "behavior": 0, "properti": 0, "to_dict": 0, "dict": [0, 12], "convert": [0, 36, 37, 38], "dictionari": 0, "A": [0, 10, 19, 27, 28, 32, 33, 35, 37, 38, 50], "list": [1, 2, 3, 42], "graphdata": [1, 2, 3, 6, 13, 42], "multipl": 1, "singl": [1, 2], "unifi": 1, "effici": 1, "comput": [1, 7, 9, 12, 13, 20, 21, 25, 26, 34], "parallel": 1, "over": [1, 8], "remain": 1, "disconnect": 1, "mean": [1, 7, 12, 13, 16, 22, 25], "pair": 1, "have": [1, 10, 21], "common": 1, "especi": 1, "speed": 1, "up": 1, "classif": 1, "task": 1, "easili": 1, "fit": 1, "memori": 1, "process": 1, "togeth": 1, "exampl": [1, 7, 9, 10, 13, 22, 26, 29, 34, 37, 38, 50], "mx": [1, 7, 9, 11, 13, 22, 26, 29, 34, 37, 38], "zero": [1, 21], "3": [1, 7, 9, 13, 37, 38], "ones": [1, 13], "4": [1, 7, 9, 13, 29], "num_graph": 1, "9": 1, "5": [1, 7, 9, 13, 22, 26, 37, 38], "10": 1, "dtype": [1, 9, 13, 37, 38], "int32": 1, "float32": [1, 9, 13], "__init__": [1, 29], "graphdatabatch": [2, 3, 6], "construct": 2, "from": [2, 3, 9, 11, 12, 13, 20, 29, 32, 35], "merg": 2, "larg": [2, 13], "reconstruct": 3, "mlx_graph": 6, "unbatch": 6, "node_features_dim": [7, 8, 13, 14, 15, 16], "out_features_dim": [7, 8, 13], "head": 7, "concat": 7, "bool": [7, 8, 9, 11, 13, 30, 31, 32], "true": [7, 8, 11, 13, 30, 31, 32], "bia": [7, 8, 11, 13], "negative_slop": 7, "float": [7, 9, 32], "dropout": 7, "edge_features_dim": 7, "messagepass": [7, 8, 9, 13, 29], "attent": 7, "network": [7, 9, 10, 12, 29, 50], "convolut": [7, 8, 9, 13], "layer": [7, 9, 10, 11, 13], "size": [7, 8, 10, 13, 20, 22, 25, 26, 50], "input": [7, 8, 9, 10, 11, 12, 13, 23, 24, 25, 26, 33, 37, 38], "output": [7, 8, 9, 11, 13, 20, 22, 25, 26, 37, 38], "embed": [7, 8, 9, 12, 13], "whether": [7, 8, 9, 13, 30, 31, 32], "reduct": [7, 22], "project": [7, 8, 13], "slope": 7, "leaki": 7, "relu": [7, 9, 29], "probabl": 7, "p": 7, "conv": [7, 9, 13], "16": [7, 9, 13, 29], "32": [7, 9, 13], "random": [7, 9], "uniform": [7, 9], "low": [7, 9], "high": [7, 9], "h": [7, 9, 13], "64": 7, "__call__": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29], "forward": [7, 9, 10, 13], "pass": [7, 9, 10, 12, 13], "messag": [7, 9, 10, 12, 13], "src_featur": [7, 12], "dst_featur": [7, 12], "alpha_src": 7, "alpha_dst": 7, "follow": [7, 22, 51], "gat": 7, "": [7, 10, 11, 50], "propag": [7, 12], "rule": 7, "sourc": [7, 10, 12, 18, 23, 24, 27, 28, 32, 33, 35, 36, 37, 50], "destin": [7, 10, 12, 33, 50], "function": [7, 8, 11, 12, 13, 14, 15, 16, 22, 30, 31, 39, 40, 41, 42, 50], "includ": 7, "compat": [7, 19], "precomput": 7, "1d": 7, "either": [7, 9, 12], "src": [7, 12, 18, 20, 22, 23, 24, 26], "dst": [7, 12, 20], "softmax": [7, 12, 22, 26], "gcn": [8, 21], "edge_weight": [8, 9, 12, 13, 20], "normal": 8, "call": [8, 11, 12, 14, 15, 16], "self": [8, 11, 12, 14, 15, 16, 29, 32, 35], "mlp": 9, "modul": [9, 10, 12, 29], "ep": 9, "learn_ep": 9, "fals": [9, 11, 30, 31], "isomorph": 9, "how": [9, 10], "power": 9, "neural": [9, 12, 50], "paper": [9, 13, 21], "mathbf": [9, 13], "_i": [9, 13], "text": 9, "left": 9, "epsilon": 9, "cdot": [9, 13], "x": [9, 13, 29, 34], "sum_": 9, "j": [9, 13], "mathcal": [9, 13], "n": [9, 10, 13], "_j": [9, 13], "right": 9, "respect": 9, "denot": [9, 13], "provid": [9, 10, 14, 15, 16, 20, 22, 30, 31, 32, 50], "user": 9, "fix": 9, "learn": [9, 10, 13], "callabl": [9, 10], "final": [9, 12], "initi": [9, 10, 11], "term": [9, 50], "import": [9, 13], "node_feat_dim": 9, "out_feat_dim": 9, "sequenti": 9, "linear": [9, 29], "536501": 9, "154826": 9, "745569": 9, "31547": 9, "0962588": 9, "108504": 9, "415889": 9, "0498145": 9, "597379": 9, "194553": 9, "251498": 9, "207561": 9, "119966": 9, "0159533": 9, "276559": 9, "0258303": 9, "194533": 9, "15515": 9, "21477": 9, "169684": 9, "485867": 9, "0194768": 9, "145761": 9, "139433": 9, "133289": 9, "0279559": 9, "358095": 9, "0443346": 9, "11571": 9, "114396": 9, "weight": [9, 11, 13, 20], "leverag": [9, 13, 20], "node_model": 10, "edge_model": 10, "graph_model": 10, "implement": [10, 12], "gener": 10, "block": 10, "defin": [10, 50], "take": [10, 15, 16], "same": 10, "associ": [10, 30, 31, 32, 35, 50], "f_n": 10, "f_e": 10, "itself": [10, 50], "f_u": 10, "specifi": [10, 25, 26, 32, 50], "column": [10, 50], "vector": 10, "model": [10, 12, 29], "updat": [10, 12, 32, 35], "present": [10, 23, 24, 34], "depend": 10, "thei": [10, 32, 50], "act": 10, "flexibl": 10, "meta": 10, "architectur": 10, "like": [10, 18], "deep": 10, "relat": 10, "more": 10, "see": 10, "For": [10, 51], "usag": 10, "here": [10, 50], "refer": [10, 12], "battaglia": 10, "et": [10, 12], "al": [10, 12], "induct": [10, 13], "bias": 10, "tupl": [10, 12, 19, 27, 28, 32, 33, 35, 38], "input_dim": 11, "output_dim": 11, "xavier": 11, "glorot": 11, "initit": 11, "inherit": [11, 12], "instead": [11, 20], "dimension": [11, 36], "aggr": [12, 22], "liter": [12, 22], "add": [12, 22, 32], "max": [12, 22, 24], "creat": 12, "mpnn": 12, "build": 12, "arbitrari": 12, "gnn": [12, 29, 50], "paradigm": 12, "inspir": 12, "pytorch": 12, "geometr": 12, "aggreg": [12, 13, 29], "strategi": 12, "gilmer": 12, "quantum": 12, "chemistri": 12, "fei": 12, "pyg": 12, "receiv": 12, "between": [12, 18], "connect": 12, "directli": 12, "integr": 12, "scalar": 12, "weigh": 12, "neighbor": 12, "message_kwarg": 12, "aggregate_kwarg": 12, "update_kwarg": 12, "them": 12, "represent": [12, 13, 14, 15, 16, 36, 37, 38], "union": [12, 32, 33], "distinct": 12, "update_nod": 12, "graphsag": 13, "w": 13, "_1": 13, "_2": 13, "bigoplus_": 13, "bigoplu": 13, "data": 13, "65429": 13, "376169": 13, "04172": 13, "919106": 13, "42576": 13, "490938": 13, "05823": 13, "295776": 13, "075439": 13, "104383": 13, "031947": 13, "351897": 13, "batch_indic": [14, 15, 16], "sum": [14, 23], "obtain": [14, 15, 16], "level": [14, 15, 16], "pool": [14, 15, 16], "otheris": [14, 15, 16], "num_batch": [14, 15, 16], "its": [14, 15, 16], "wise": [15, 16], "maximum": [15, 24], "along": [15, 16, 25, 26], "averag": 16, "dim": 18, "make": 18, "mai": [18, 50, 51], "requir": 18, "some": 18, "situat": 18, "match": 18, "new": [18, 19], "new_shap": 19, "desir": 19, "must": 19, "view": 19, "count": 20, "ocurr": 20, "usual": 20, "infer": [20, 32], "length": [20, 21], "degre": 21, "invert": 21, "squar": 21, "root": 21, "note": 21, "temporari": 21, "workaround": 21, "deal": 21, "infinit": 21, "accord": 21, "boolean": 21, "isn": 21, "t": 21, "yet": 21, "avail": [21, 50, 51], "so": 21, "we": [21, 50, 51], "pre": 21, "pad": 21, "element": [21, 22], "isol": 21, "out_siz": [22, 25, 26], "perform": 22, "oper": [22, 23, 24, 25, 26], "empti": [22, 23, 24], "tensor": [22, 32, 35], "first": [22, 27, 28, 34], "emploi": 22, "item": 22, "within": [23, 24], "assign": 23, "often": [23, 24], "determin": [23, 24, 25, 26, 30, 31], "result": [23, 24, 26, 36], "after": [23, 24, 26], "kept": 24, "group": [25, 26], "These": [25, 26], "undergo": [25, 26], "row": [27, 28, 50], "second": [27, 28, 34], "target": [27, 28, 32, 33, 35, 36, 37], "correspond": [27, 28, 36], "nn": 29, "hop": 29, "inform": 29, "work": 29, "onli": 29, "def": 29, "super": 29, "conv1": 29, "gcnconv": 29, "conv2": 29, "lin": 29, "direct": 30, "consid": [30, 31], "both": [30, 31, 50], "check": [30, 31, 39, 40, 41, 42], "otherwis": [30, 31], "undirect": 31, "fill_valu": 32, "allow_rep": 32, "loop": [32, 35], "fill": 32, "even": 32, "alreadi": 32, "extract": 33, "edge_index_1": 34, "edge_index_2": 34, "NOT": 34, "remove_common_edg": 34, "remov": 35, "without": 35, "adjac": [36, 37, 38, 39], "matrix": [36, 37, 38, 39], "adjacency_matrix": [37, 38], "uint32": [37, 38], "spars": 38, "func": [39, 40, 41, 42], "decor": [39, 40, 41, 42], "transform": 44, "sort": 44, "valid": 44, "scatter": 44, "op": 44, "librari": 50, "built": 50, "upon": 50, "appl": 50, "veri": 50, "earli": 50, "develop": [50, 51], "break": 50, "upcom": 50, "version": [50, 51], "show": 50, "th": 50, "adopt": 50, "abov": 50, "convent": 50, "across": 50, "entir": 50, "order": 50, "re": 50, "util": 50, "pypi": 51, "To": 51, "run": 51, "pip": 51, "start": 51, "clone": 51, "github": 51, "repo": 51, "git": 51, "com": 51, "tristanbilot": 51, "cd": 51, "Then": 51, "suggest": 51, "separ": 51, "virtual": 51, "environ": 51, "extra": 51, "document": 51, "you": 51, "purpos": 51, "want": 51, "current": 51, "via": 51, "http": 51, "ml": 51, "explor": 51}, "objects": {"mlx_graphs.data.batch": [[1, 0, 1, "", "GraphDataBatch"], [2, 2, 1, "", "batch"], [3, 2, 1, "", "unbatch"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, 1, 1, "", "__init__"]], "mlx_graphs.data.data": [[0, 0, 1, "", "GraphData"]], "mlx_graphs.data.data.GraphData": [[0, 1, 1, "", "__cat_dim__"], [0, 1, 1, "", "__inc__"], [0, 3, 1, "", "num_nodes"], [0, 1, 1, "", "to_dict"]], "mlx_graphs.nn": [[7, 0, 1, "", "GATConv"], [8, 0, 1, "", "GCNConv"], [9, 0, 1, "", "GINConv"], [10, 0, 1, "", "GraphNetworkBlock"], [11, 0, 1, "", "Linear"], [12, 0, 1, "", "MessagePassing"], [13, 0, 1, "", "SAGEConv"], [14, 0, 1, "", "global_add_pool"], [15, 0, 1, "", "global_max_pool"], [16, 0, 1, "", "global_mean_pool"]], "mlx_graphs.nn.GATConv": [[7, 1, 1, "", "__call__"], [7, 1, 1, "", "message"]], "mlx_graphs.nn.GCNConv": [[8, 1, 1, "", "__call__"]], "mlx_graphs.nn.GINConv": [[9, 1, 1, "", "__call__"]], "mlx_graphs.nn.GraphNetworkBlock": [[10, 1, 1, "", "__call__"]], "mlx_graphs.nn.Linear": [[11, 1, 1, "", "__call__"]], "mlx_graphs.nn.MessagePassing": [[12, 1, 1, "", "__call__"], [12, 1, 1, "", "aggregate"], [12, 1, 1, "", "message"], [12, 1, 1, "", "propagate"], [12, 1, 1, "", "update_nodes"]], "mlx_graphs.nn.SAGEConv": [[13, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_add_pool": [[14, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_max_pool": [[15, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_mean_pool": [[16, 1, 1, "", "__call__"]], "mlx_graphs.utils.array_ops": [[18, 2, 1, "", "broadcast"], [19, 2, 1, "", "expand"]], "mlx_graphs.utils.scatter": [[20, 2, 1, "", "degree"], [21, 2, 1, "", "invert_sqrt_degree"], [22, 2, 1, "", "scatter"], [23, 2, 1, "", "scatter_add"], [24, 2, 1, "", "scatter_max"], [25, 2, 1, "", "scatter_mean"], [26, 2, 1, "", "scatter_softmax"]], "mlx_graphs.utils.sorting": [[27, 2, 1, "", "sort_edge_index"], [28, 2, 1, "", "sort_edge_index_and_features"]], "mlx_graphs.utils.topology": [[29, 2, 1, "", "get_num_hops"], [30, 2, 1, "", "is_directed"], [31, 2, 1, "", "is_undirected"]], "mlx_graphs.utils.transformations": [[32, 2, 1, "", "add_self_loops"], [33, 2, 1, "", "get_src_dst_features"], [34, 2, 1, "", "get_unique_edge_indices"], [35, 2, 1, "", "remove_self_loops"], [36, 2, 1, "", "to_adjacency_matrix"], [37, 2, 1, "", "to_edge_index"], [38, 2, 1, "", "to_sparse_adjacency_matrix"]], "mlx_graphs.utils.validators": [[39, 2, 1, "", "validate_adjacency_matrix"], [40, 2, 1, "", "validate_edge_index"], [41, 2, 1, "", "validate_edge_index_and_features"], [42, 2, 1, "", "validate_list_of_graph_data"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"mlx_graph": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "data": [0, 1, 2, 3, 5, 6, 50], "graphdata": 0, "batch": [1, 2, 3, 4], "graphdatabatch": 1, "unbatch": 3, "object": [4, 5], "nn": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "gatconv": 7, "gcnconv": 8, "ginconv": 9, "graphnetworkblock": 10, "linear": 11, "messagepass": 12, "sageconv": 13, "global_add_pool": 14, "global_max_pool": 15, "global_mean_pool": 16, "neural": 17, "network": 17, "util": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44], "array_op": [18, 19], "broadcast": 18, "expand": 19, "scatter": [20, 21, 22, 23, 24, 25, 26, 45], "degre": 20, "invert_sqrt_degre": 21, "scatter_add": 23, "scatter_max": 24, "scatter_mean": 25, "scatter_softmax": 26, "sort": [27, 28, 46], "sort_edge_index": 27, "sort_edge_index_and_featur": 28, "topologi": [29, 30, 31, 47], "get_num_hop": 29, "is_direct": 30, "is_undirect": 31, "transform": [32, 33, 34, 35, 36, 37, 38, 48], "add_self_loop": 32, "get_src_dst_featur": 33, "get_unique_edge_indic": 34, "remove_self_loop": 35, "to_adjacency_matrix": 36, "to_edge_index": 37, "to_sparse_adjacency_matrix": 38, "valid": [39, 40, 41, 42, 49], "validate_adjacency_matrix": 39, "validate_edge_index": 40, "validate_edge_index_and_featur": 41, "validate_list_of_graph_data": 42, "arrai": 43, "op": 43, "mlx": 50, "graph": 50, "usag": 50, "model": 50, "instal": [50, 51], "api": 50, "build": 51, "from": 51, "sourc": 51, "test": 51, "dev": 51, "benchmark": 51, "doc": 51, "depend": 51}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"mlx_graphs.data.data.GraphData": [[0, "mlx-graphs-data-data-graphdata"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, "mlx-graphs-data-batch-graphdatabatch"]], "mlx_graphs.data.batch.batch": [[2, "mlx-graphs-data-batch-batch"]], "mlx_graphs.data.batch.unbatch": [[3, "mlx-graphs-data-batch-unbatch"]], "Batch Objects": [[4, "batch-objects"]], "Data Objects": [[5, "data-objects"]], "Data": [[6, "data"]], "mlx_graphs.nn.GATConv": [[7, "mlx-graphs-nn-gatconv"]], "mlx_graphs.nn.GCNConv": [[8, "mlx-graphs-nn-gcnconv"]], "mlx_graphs.nn.GINConv": [[9, "mlx-graphs-nn-ginconv"]], "mlx_graphs.nn.GraphNetworkBlock": [[10, "mlx-graphs-nn-graphnetworkblock"]], "mlx_graphs.nn.Linear": [[11, "mlx-graphs-nn-linear"]], "mlx_graphs.nn.MessagePassing": [[12, "mlx-graphs-nn-messagepassing"]], "mlx_graphs.nn.SAGEConv": [[13, "mlx-graphs-nn-sageconv"]], "mlx_graphs.nn.global_add_pool": [[14, "mlx-graphs-nn-global-add-pool"]], "mlx_graphs.nn.global_max_pool": [[15, "mlx-graphs-nn-global-max-pool"]], "mlx_graphs.nn.global_mean_pool": [[16, "mlx-graphs-nn-global-mean-pool"]], "Neural Networks": [[17, "neural-networks"]], "mlx_graphs.utils.array_ops.broadcast": [[18, "mlx-graphs-utils-array-ops-broadcast"]], "mlx_graphs.utils.array_ops.expand": [[19, "mlx-graphs-utils-array-ops-expand"]], "mlx_graphs.utils.scatter.degree": [[20, "mlx-graphs-utils-scatter-degree"]], "mlx_graphs.utils.scatter.invert_sqrt_degree": [[21, "mlx-graphs-utils-scatter-invert-sqrt-degree"]], "mlx_graphs.utils.scatter.scatter": [[22, "mlx-graphs-utils-scatter-scatter"]], "mlx_graphs.utils.scatter.scatter_add": [[23, "mlx-graphs-utils-scatter-scatter-add"]], "mlx_graphs.utils.scatter.scatter_max": [[24, "mlx-graphs-utils-scatter-scatter-max"]], "mlx_graphs.utils.scatter.scatter_mean": [[25, "mlx-graphs-utils-scatter-scatter-mean"]], "mlx_graphs.utils.scatter.scatter_softmax": [[26, "mlx-graphs-utils-scatter-scatter-softmax"]], "mlx_graphs.utils.sorting.sort_edge_index": [[27, "mlx-graphs-utils-sorting-sort-edge-index"]], "mlx_graphs.utils.sorting.sort_edge_index_and_features": [[28, "mlx-graphs-utils-sorting-sort-edge-index-and-features"]], "mlx_graphs.utils.topology.get_num_hops": [[29, "mlx-graphs-utils-topology-get-num-hops"]], "mlx_graphs.utils.topology.is_directed": [[30, "mlx-graphs-utils-topology-is-directed"]], "mlx_graphs.utils.topology.is_undirected": [[31, "mlx-graphs-utils-topology-is-undirected"]], "mlx_graphs.utils.transformations.add_self_loops": [[32, "mlx-graphs-utils-transformations-add-self-loops"]], "mlx_graphs.utils.transformations.get_src_dst_features": [[33, "mlx-graphs-utils-transformations-get-src-dst-features"]], "mlx_graphs.utils.transformations.get_unique_edge_indices": [[34, "mlx-graphs-utils-transformations-get-unique-edge-indices"]], "mlx_graphs.utils.transformations.remove_self_loops": [[35, "mlx-graphs-utils-transformations-remove-self-loops"]], "mlx_graphs.utils.transformations.to_adjacency_matrix": [[36, "mlx-graphs-utils-transformations-to-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_edge_index": [[37, "mlx-graphs-utils-transformations-to-edge-index"]], "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix": [[38, "mlx-graphs-utils-transformations-to-sparse-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_adjacency_matrix": [[39, "mlx-graphs-utils-validators-validate-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_edge_index": [[40, "mlx-graphs-utils-validators-validate-edge-index"]], "mlx_graphs.utils.validators.validate_edge_index_and_features": [[41, "mlx-graphs-utils-validators-validate-edge-index-and-features"]], "mlx_graphs.utils.validators.validate_list_of_graph_data": [[42, "mlx-graphs-utils-validators-validate-list-of-graph-data"]], "Array ops": [[43, "array-ops"]], "Utils": [[44, "utils"]], "Scatter": [[45, "scatter"]], "Sorting": [[46, "sorting"]], "Topology": [[47, "topology"]], "Transformations": [[48, "transformations"]], "Validators": [[49, "validators"]], "MLX-graphs": [[50, "mlx-graphs"]], "Usage": [[50, "usage"]], "Graph data model": [[50, "graph-data-model"]], "Install": [[50, null]], "API": [[50, null]], "Installation": [[51, "installation"]], "Build from source": [[51, "build-from-source"]], "Installing test, dev, benchmarks, docs dependencies": [[51, "installing-test-dev-benchmarks-docs-dependencies"]]}, "indexentries": {"graphdata (class in mlx_graphs.data.data)": [[0, "mlx_graphs.data.data.GraphData"]], "__cat_dim__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__cat_dim__"]], "__inc__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__inc__"]], "num_nodes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_nodes"]], "to_dict() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.to_dict"]], "graphdatabatch (class in mlx_graphs.data.batch)": [[1, "mlx_graphs.data.batch.GraphDataBatch"]], "__init__() (mlx_graphs.data.batch.graphdatabatch method)": [[1, "mlx_graphs.data.batch.GraphDataBatch.__init__"]], "batch() (in module mlx_graphs.data.batch)": [[2, "mlx_graphs.data.batch.batch"]], "unbatch() (in module mlx_graphs.data.batch)": [[3, "mlx_graphs.data.batch.unbatch"]], "gatconv (class in mlx_graphs.nn)": [[7, "mlx_graphs.nn.GATConv"]], "__call__() (mlx_graphs.nn.gatconv method)": [[7, "mlx_graphs.nn.GATConv.__call__"]], "message() (mlx_graphs.nn.gatconv method)": [[7, "mlx_graphs.nn.GATConv.message"]], "gcnconv (class in mlx_graphs.nn)": [[8, "mlx_graphs.nn.GCNConv"]], "__call__() (mlx_graphs.nn.gcnconv method)": [[8, "mlx_graphs.nn.GCNConv.__call__"]], "ginconv (class in mlx_graphs.nn)": [[9, "mlx_graphs.nn.GINConv"]], "__call__() (mlx_graphs.nn.ginconv method)": [[9, "mlx_graphs.nn.GINConv.__call__"]], "graphnetworkblock (class in mlx_graphs.nn)": [[10, "mlx_graphs.nn.GraphNetworkBlock"]], "__call__() (mlx_graphs.nn.graphnetworkblock method)": [[10, "mlx_graphs.nn.GraphNetworkBlock.__call__"]], "linear (class in mlx_graphs.nn)": [[11, "mlx_graphs.nn.Linear"]], "__call__() (mlx_graphs.nn.linear method)": [[11, "mlx_graphs.nn.Linear.__call__"]], "messagepassing (class in mlx_graphs.nn)": [[12, "mlx_graphs.nn.MessagePassing"]], "__call__() (mlx_graphs.nn.messagepassing method)": [[12, "mlx_graphs.nn.MessagePassing.__call__"]], "aggregate() (mlx_graphs.nn.messagepassing method)": [[12, "mlx_graphs.nn.MessagePassing.aggregate"]], "message() (mlx_graphs.nn.messagepassing method)": [[12, "mlx_graphs.nn.MessagePassing.message"]], "propagate() (mlx_graphs.nn.messagepassing method)": [[12, "mlx_graphs.nn.MessagePassing.propagate"]], "update_nodes() (mlx_graphs.nn.messagepassing method)": [[12, "mlx_graphs.nn.MessagePassing.update_nodes"]], "sageconv (class in mlx_graphs.nn)": [[13, "mlx_graphs.nn.SAGEConv"]], "__call__() (mlx_graphs.nn.sageconv method)": [[13, "mlx_graphs.nn.SAGEConv.__call__"]], "__call__() (mlx_graphs.nn.global_add_pool method)": [[14, "mlx_graphs.nn.global_add_pool.__call__"]], "global_add_pool (class in mlx_graphs.nn)": [[14, "mlx_graphs.nn.global_add_pool"]], "__call__() (mlx_graphs.nn.global_max_pool method)": [[15, "mlx_graphs.nn.global_max_pool.__call__"]], "global_max_pool (class in mlx_graphs.nn)": [[15, "mlx_graphs.nn.global_max_pool"]], "__call__() (mlx_graphs.nn.global_mean_pool method)": [[16, "mlx_graphs.nn.global_mean_pool.__call__"]], "global_mean_pool (class in mlx_graphs.nn)": [[16, "mlx_graphs.nn.global_mean_pool"]], "broadcast() (in module mlx_graphs.utils.array_ops)": [[18, "mlx_graphs.utils.array_ops.broadcast"]], "expand() (in module mlx_graphs.utils.array_ops)": [[19, "mlx_graphs.utils.array_ops.expand"]], "degree() (in module mlx_graphs.utils.scatter)": [[20, "mlx_graphs.utils.scatter.degree"]], "invert_sqrt_degree() (in module mlx_graphs.utils.scatter)": [[21, "mlx_graphs.utils.scatter.invert_sqrt_degree"]], "scatter() (in module mlx_graphs.utils.scatter)": [[22, "mlx_graphs.utils.scatter.scatter"]], "scatter_add() (in module mlx_graphs.utils.scatter)": [[23, "mlx_graphs.utils.scatter.scatter_add"]], "scatter_max() (in module mlx_graphs.utils.scatter)": [[24, "mlx_graphs.utils.scatter.scatter_max"]], "scatter_mean() (in module mlx_graphs.utils.scatter)": [[25, "mlx_graphs.utils.scatter.scatter_mean"]], "scatter_softmax() (in module mlx_graphs.utils.scatter)": [[26, "mlx_graphs.utils.scatter.scatter_softmax"]], "sort_edge_index() (in module mlx_graphs.utils.sorting)": [[27, "mlx_graphs.utils.sorting.sort_edge_index"]], "sort_edge_index_and_features() (in module mlx_graphs.utils.sorting)": [[28, "mlx_graphs.utils.sorting.sort_edge_index_and_features"]], "get_num_hops() (in module mlx_graphs.utils.topology)": [[29, "mlx_graphs.utils.topology.get_num_hops"]], "is_directed() (in module mlx_graphs.utils.topology)": [[30, "mlx_graphs.utils.topology.is_directed"]], "is_undirected() (in module mlx_graphs.utils.topology)": [[31, "mlx_graphs.utils.topology.is_undirected"]], "add_self_loops() (in module mlx_graphs.utils.transformations)": [[32, "mlx_graphs.utils.transformations.add_self_loops"]], "get_src_dst_features() (in module mlx_graphs.utils.transformations)": [[33, "mlx_graphs.utils.transformations.get_src_dst_features"]], "get_unique_edge_indices() (in module mlx_graphs.utils.transformations)": [[34, "mlx_graphs.utils.transformations.get_unique_edge_indices"]], "remove_self_loops() (in module mlx_graphs.utils.transformations)": [[35, "mlx_graphs.utils.transformations.remove_self_loops"]], "to_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[36, "mlx_graphs.utils.transformations.to_adjacency_matrix"]], "to_edge_index() (in module mlx_graphs.utils.transformations)": [[37, "mlx_graphs.utils.transformations.to_edge_index"]], "to_sparse_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[38, "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix"]], "validate_adjacency_matrix() (in module mlx_graphs.utils.validators)": [[39, "mlx_graphs.utils.validators.validate_adjacency_matrix"]], "validate_edge_index() (in module mlx_graphs.utils.validators)": [[40, "mlx_graphs.utils.validators.validate_edge_index"]], "validate_edge_index_and_features() (in module mlx_graphs.utils.validators)": [[41, "mlx_graphs.utils.validators.validate_edge_index_and_features"]], "validate_list_of_graph_data() (in module mlx_graphs.utils.validators)": [[42, "mlx_graphs.utils.validators.validate_list_of_graph_data"]]}})