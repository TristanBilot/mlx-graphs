Search.setIndex({"docnames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate", "api/data/_autosummary_data_utils/mlx_graphs.data.utils.validate_list_of_graph_data", "api/data/batch", "api/data/data", "api/data/index", "api/data/utils", "api/datasets/_autosummary/mlx_graphs.datasets.Dataset", "api/datasets/_autosummary/mlx_graphs.datasets.KarateClubDataset", "api/datasets/_autosummary/mlx_graphs.datasets.QM7bDataset", "api/datasets/_autosummary/mlx_graphs.datasets.SuperPixelDataset", "api/datasets/_autosummary/mlx_graphs.datasets.TUDataset", "api/datasets/index", "api/loaders/_autosummary/mlx_graphs.loaders.Dataloader", "api/loaders/index", "api/nn/_autosummary/mlx_graphs.nn.GATConv", "api/nn/_autosummary/mlx_graphs.nn.GCNConv", "api/nn/_autosummary/mlx_graphs.nn.GINConv", "api/nn/_autosummary/mlx_graphs.nn.GeneralizedRelationalConv", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock", "api/nn/_autosummary/mlx_graphs.nn.Linear", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool", "api/nn/index", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.one_hot", "api/utils/_autosummary_convert/mlx_graphs.utils.convert.to_networkx", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_duplicate_directed_edges", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_undirected", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features", "api/utils/array_ops", "api/utils/convert", "api/utils/index", "api/utils/scatter", "api/utils/sorting", "api/utils/topology", "api/utils/transformations", "api/utils/validators", "index", "install", "tutorials/examples/index", "tutorials/examples/qm9_tutorial", "tutorials/notebooks/benchmark_pyg_dgl_mxg", "tutorials/notebooks/graph_classification", "tutorials/quickstart"], "filenames": ["api/data/_autosummary/mlx_graphs.data.data.GraphData.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.GraphDataBatch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.batch.rst", "api/data/_autosummary_batch/mlx_graphs.data.batch.unbatch.rst", "api/data/_autosummary_collate/mlx_graphs.data.collate.collate.rst", "api/data/_autosummary_data_utils/mlx_graphs.data.utils.validate_list_of_graph_data.rst", "api/data/batch.rst", "api/data/data.rst", "api/data/index.rst", "api/data/utils.rst", "api/datasets/_autosummary/mlx_graphs.datasets.Dataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.KarateClubDataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.QM7bDataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.SuperPixelDataset.rst", "api/datasets/_autosummary/mlx_graphs.datasets.TUDataset.rst", "api/datasets/index.rst", "api/loaders/_autosummary/mlx_graphs.loaders.Dataloader.rst", "api/loaders/index.rst", "api/nn/_autosummary/mlx_graphs.nn.GATConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GCNConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GINConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GeneralizedRelationalConv.rst", "api/nn/_autosummary/mlx_graphs.nn.GraphNetworkBlock.rst", "api/nn/_autosummary/mlx_graphs.nn.Linear.rst", "api/nn/_autosummary/mlx_graphs.nn.MessagePassing.rst", "api/nn/_autosummary/mlx_graphs.nn.SAGEConv.rst", "api/nn/_autosummary/mlx_graphs.nn.global_add_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_max_pool.rst", "api/nn/_autosummary/mlx_graphs.nn.global_mean_pool.rst", "api/nn/index.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.broadcast.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.expand.rst", "api/utils/_autosummary_array-ops/mlx_graphs.utils.array_ops.one_hot.rst", "api/utils/_autosummary_convert/mlx_graphs.utils.convert.to_networkx.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.invert_sqrt_degree.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_add.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_max.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_mean.rst", "api/utils/_autosummary_scatter/mlx_graphs.utils.scatter.scatter_softmax.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index.rst", "api/utils/_autosummary_sorting/mlx_graphs.utils.sorting.sort_edge_index_and_features.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.get_num_hops.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_directed.rst", "api/utils/_autosummary_topology/mlx_graphs.utils.topology.is_undirected.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.add_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_src_dst_features.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.get_unique_edge_indices.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_duplicate_directed_edges.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.remove_self_loops.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_edge_index.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_sparse_adjacency_matrix.rst", "api/utils/_autosummary_transformations/mlx_graphs.utils.transformations.to_undirected.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_adjacency_matrix.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index.rst", "api/utils/_autosummary_validators/mlx_graphs.utils.validators.validate_edge_index_and_features.rst", "api/utils/array_ops.rst", "api/utils/convert.rst", "api/utils/index.rst", "api/utils/scatter.rst", "api/utils/sorting.rst", "api/utils/topology.rst", "api/utils/transformations.rst", "api/utils/validators.rst", "index.rst", "install.rst", "tutorials/examples/index.rst", "tutorials/examples/qm9_tutorial.ipynb", "tutorials/notebooks/benchmark_pyg_dgl_mxg.ipynb", "tutorials/notebooks/graph_classification.ipynb", "tutorials/quickstart.rst"], "titles": ["mlx_graphs.data.data.GraphData", "mlx_graphs.data.batch.GraphDataBatch", "mlx_graphs.data.batch.batch", "mlx_graphs.data.batch.unbatch", "mlx_graphs.data.collate.collate", "mlx_graphs.data.utils.validate_list_of_graph_data", "Batch Objects", "Data Objects", "Data", "Utils", "mlx_graphs.datasets.Dataset", "mlx_graphs.datasets.KarateClubDataset", "mlx_graphs.datasets.QM7bDataset", "mlx_graphs.datasets.SuperPixelDataset", "mlx_graphs.datasets.TUDataset", "Datasets", "mlx_graphs.loaders.Dataloader", "Loaders", "mlx_graphs.nn.GATConv", "mlx_graphs.nn.GCNConv", "mlx_graphs.nn.GINConv", "mlx_graphs.nn.GeneralizedRelationalConv", "mlx_graphs.nn.GraphNetworkBlock", "mlx_graphs.nn.Linear", "mlx_graphs.nn.MessagePassing", "mlx_graphs.nn.SAGEConv", "mlx_graphs.nn.global_add_pool", "mlx_graphs.nn.global_max_pool", "mlx_graphs.nn.global_mean_pool", "Neural Networks", "mlx_graphs.utils.array_ops.broadcast", "mlx_graphs.utils.array_ops.expand", "mlx_graphs.utils.array_ops.one_hot", "mlx_graphs.utils.convert.to_networkx", "mlx_graphs.utils.scatter.degree", "mlx_graphs.utils.scatter.invert_sqrt_degree", "mlx_graphs.utils.scatter.scatter", "mlx_graphs.utils.scatter.scatter_add", "mlx_graphs.utils.scatter.scatter_max", "mlx_graphs.utils.scatter.scatter_mean", "mlx_graphs.utils.scatter.scatter_softmax", "mlx_graphs.utils.sorting.sort_edge_index", "mlx_graphs.utils.sorting.sort_edge_index_and_features", "mlx_graphs.utils.topology.get_num_hops", "mlx_graphs.utils.topology.is_directed", "mlx_graphs.utils.topology.is_undirected", "mlx_graphs.utils.transformations.add_self_loops", "mlx_graphs.utils.transformations.get_src_dst_features", "mlx_graphs.utils.transformations.get_unique_edge_indices", "mlx_graphs.utils.transformations.remove_duplicate_directed_edges", "mlx_graphs.utils.transformations.remove_self_loops", "mlx_graphs.utils.transformations.to_adjacency_matrix", "mlx_graphs.utils.transformations.to_edge_index", "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix", "mlx_graphs.utils.transformations.to_undirected", "mlx_graphs.utils.validators.validate_adjacency_matrix", "mlx_graphs.utils.validators.validate_edge_index", "mlx_graphs.utils.validators.validate_edge_index_and_features", "Array ops", "Convert", "Utils", "Scatter", "Sorting", "Topology", "Transformations", "Validators", "MLX-graphs", "Installation", "Examples", "Quantum-chemical property prediction with GNNs", "Benchmarking mlx-graphs", "Graph Classification", "Quickstart"], "terms": {"class": [0, 1, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 66, 69, 70, 71, 72], "edge_index": [0, 1, 4, 18, 19, 20, 21, 22, 24, 25, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 66, 69, 70, 71, 72], "mlx": [0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 69, 71, 72], "core": [0, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 69, 70, 71, 72], "arrai": [0, 1, 4, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 66, 69, 71, 72], "none": [0, 10, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 34, 36, 44, 45, 46, 50, 51, 54, 66, 69, 70, 71], "node_featur": [0, 1, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 43, 47, 66, 69, 70, 71, 72], "edge_featur": [0, 18, 22, 42, 44, 45, 46, 50, 51, 53, 54, 57, 69, 71, 72], "graph_featur": [0, 22, 69, 72], "node_label": [0, 72], "edge_label": [0, 21, 72], "graph_label": [0, 69, 70, 71, 72], "kwarg": [0, 1, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 66, 72], "repres": [0, 20, 21, 24, 25, 41, 42, 46, 47, 50, 51, 52, 53, 66, 71], "graph": [0, 1, 2, 4, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 33, 44, 45, 46, 50, 51, 54, 67], "object": [0, 1, 2, 3, 4, 8, 33, 66, 71, 72], "option": [0, 10, 12, 13, 14, 18, 20, 21, 22, 24, 25, 26, 27, 28, 32, 34, 36, 44, 45, 46, 50, 51, 54, 72], "featur": [0, 10, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 44, 45, 46, 47, 50, 51, 53, 54, 69, 71, 72], "label": [0, 21, 32, 69, 70, 71, 72], "paramet": [0, 1, 2, 3, 4, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71], "edg": [0, 1, 10, 11, 18, 20, 21, 22, 25, 33, 34, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 69, 71, 72], "index": [0, 18, 20, 21, 25, 26, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 52, 53, 54, 71, 72], "topologi": [0, 22, 60, 72], "shape": [0, 1, 18, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 36, 40, 46, 50, 69, 70, 71, 72], "2": [0, 1, 11, 18, 20, 21, 22, 24, 25, 33, 36, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 69, 70, 71, 72], "num_edg": [0, 18, 20, 21, 24, 25, 41, 42, 46, 47, 50, 51, 52, 71, 72], "num_nod": [0, 21, 34, 35, 36, 40, 46, 51, 71, 72], "num_node_featur": [0, 10, 69, 70, 71, 72], "contain": [0, 4, 14, 21, 22, 36, 37, 38, 39, 40, 41, 42, 46, 47, 50, 71, 72], "each": [0, 4, 11, 16, 18, 19, 21, 22, 26, 27, 28, 32, 34, 35, 42, 44, 45, 46, 47, 50, 51, 52, 54, 69, 71, 72], "node": [0, 1, 4, 10, 11, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 34, 35, 46, 47, 50, 51, 52, 69, 71, 72], "num_edge_featur": [0, 10, 46, 50, 69, 71, 72], "num_graph_featur": [0, 10, 71, 72], "global": [0, 22, 26, 27, 28, 72], "num_node_label": [0, 72], "num_edge_label": [0, 72], "1": [0, 1, 4, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 32, 33, 34, 36, 40, 46, 48, 51, 52, 53, 66, 69, 70, 71, 72], "num_graph_label": [0, 72], "addit": [0, 21, 69, 72], "keyword": 0, "argument": [0, 24, 72], "store": [0, 2, 10, 12, 13, 14, 21, 66], "ani": [0, 1, 19, 23, 24, 33, 66, 67, 72], "other": [0, 22, 30, 66, 69, 70, 71, 72], "custom": [0, 20, 66], "attribut": [0, 1, 4, 22, 71], "method": [0, 1, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 36, 71, 72], "__cat_dim__": 0, "kei": 0, "str": [0, 10, 12, 13, 14, 21, 70], "arg": [0, 21, 23, 24], "int": [0, 10, 16, 18, 19, 21, 23, 25, 30, 32, 34, 36, 39, 40, 43, 46, 51, 66, 69], "thi": [0, 10, 11, 14, 18, 21, 23, 24, 35, 43, 66, 69, 70, 71, 72], "can": [0, 1, 4, 21, 22, 24, 66, 67, 69, 70, 71, 72], "overriden": 0, "when": [0, 71], "batch": [0, 4, 8, 16, 21, 26, 27, 28, 66, 69, 70, 71], "i": [0, 4, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 38, 43, 44, 45, 46, 66, 67, 69, 70, 71, 72], "us": [0, 1, 4, 14, 18, 19, 21, 22, 23, 24, 25, 36, 46, 66, 67, 69, 70, 71, 72], "given": [0, 21, 24, 32, 34, 36, 42, 44, 45, 46, 47, 50, 54], "name": [0, 10, 13, 14, 69, 70, 72], "return": [0, 2, 3, 4, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 69, 70, 71], "dimens": [0, 21, 31, 36, 69], "where": [0, 1, 10, 12, 13, 14, 20, 21, 22, 25, 32, 37, 38, 41, 42, 71], "concaten": [0, 1, 4, 69, 71, 72], "happen": 0, "dure": [0, 21, 24, 34], "By": [0, 4, 21, 24, 32, 71], "default": [0, 4, 10, 12, 13, 14, 16, 20, 21, 23, 24, 25, 32, 33, 34, 36, 46, 51, 52, 53, 71, 72], "all": [0, 1, 4, 14, 21, 22, 26, 27, 28, 32, 36, 46, 66, 71, 72], "axi": [0, 36, 39, 40, 71], "e": [0, 14, 21, 22, 35, 67, 69, 71], "g": [0, 14, 33, 69, 70, 71], "ar": [0, 10, 14, 20, 21, 22, 37, 38, 39, 40, 46, 48, 66, 71, 72], "0": [0, 1, 4, 18, 20, 21, 25, 26, 27, 28, 33, 36, 39, 40, 48, 52, 53, 69, 70, 71, 72], "which": [0, 4, 21, 22, 36, 39, 40, 49, 69, 71, 72], "chang": 0, "while": [0, 21, 69], "type": [0, 2, 3, 4, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 71], "The": [0, 10, 11, 13, 14, 18, 20, 21, 22, 25, 26, 27, 28, 31, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 54, 69, 71, 72], "__inc__": 0, "an": [0, 4, 11, 20, 22, 24, 26, 27, 28, 31, 32, 34, 36, 37, 38, 39, 42, 49, 51, 52, 53, 54, 55, 56, 57, 66, 69, 71, 72], "integ": 0, "indic": [0, 4, 18, 21, 24, 26, 27, 28, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48], "increment": [0, 4], "valu": [0, 18, 20, 27, 28, 34, 35, 36, 37, 38, 39, 40, 46], "appli": [0, 19, 20, 26, 27, 28, 36, 37, 38, 40, 69], "elemnt": 0, "base": [0, 4, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 44, 45, 47, 72], "number": [0, 4, 10, 16, 18, 21, 32, 34, 36, 43, 46, 51, 69, 70, 71], "previou": [0, 4], "avoid": 0, "duplic": [0, 37, 38, 49], "cnot": 0, "keep": 0, "origin": [0, 13, 14, 31, 71, 72], "If": [0, 13, 23, 26, 27, 28, 33, 34, 36, 37, 38, 44, 45, 46, 72], "should": [0, 10, 70, 72], "set": [0, 14, 22, 23, 25, 32, 33, 69, 71], "behavior": [0, 21], "properti": [0, 10, 14, 66, 68, 71, 72], "num_edge_class": [0, 10], "current": [0, 67], "num_graph_class": [0, 10, 70, 71], "num_node_class": [0, 10, 72], "to_dict": 0, "dict": [0, 4, 24], "convert": [0, 13, 51, 52, 53, 54, 60, 72], "dictionari": 0, "A": [0, 12, 14, 21, 22, 31, 41, 42, 46, 47, 50, 52, 53, 71, 72], "list": [1, 2, 3, 4, 5, 10, 16, 71, 72], "graphdata": [1, 2, 3, 4, 5, 8, 10, 16, 25, 33, 71, 72], "multipl": [1, 4, 16, 71, 72], "singl": [1, 2, 69, 71, 72], "unifi": [1, 4, 66], "effici": [1, 66, 71, 72], "comput": [1, 13, 18, 20, 21, 24, 25, 34, 35, 39, 40, 48, 66, 69, 71, 72], "parallel": [1, 71, 72], "over": [1, 14, 16, 19, 72], "remain": [1, 4, 71], "disconnect": [1, 4, 72], "mean": [1, 18, 21, 24, 25, 28, 36, 39, 66, 69, 70, 71], "pair": 1, "have": [1, 22, 35, 69, 70], "common": [1, 70], "especi": 1, "speed": [1, 66, 70, 72], "up": [1, 66, 71, 72], "classif": [1, 11, 13, 14, 66, 70, 72], "task": [1, 13, 69, 71, 72], "easili": [1, 71, 72], "fit": [1, 72], "memori": [1, 66, 72], "process": [1, 10, 11, 12, 13, 14, 66, 69, 71, 72], "togeth": [1, 72], "exampl": [1, 18, 20, 21, 22, 25, 33, 36, 40, 43, 48, 52, 53, 69, 71, 72], "from": [1, 2, 3, 4, 11, 12, 13, 20, 21, 23, 24, 25, 34, 43, 46, 50, 66, 69, 70, 71, 72], "import": [1, 20, 21, 25, 33, 66, 69, 70, 71, 72], "mx": [1, 18, 20, 21, 23, 25, 33, 36, 40, 43, 48, 52, 53, 66, 69, 70, 71, 72], "zero": [1, 21, 32, 35, 72], "3": [1, 18, 20, 21, 25, 33, 52, 53, 69, 70, 71, 72], "ones": [1, 25, 70, 72], "4": [1, 18, 20, 21, 25, 43, 69, 70, 71, 72], "9": [1, 69, 70, 71, 72], "int32": [1, 71, 72], "float32": [1, 20, 25, 71, 72], "num_graph": [1, 10, 69, 71, 72], "__init__": [1, 16, 43, 66, 69, 70, 71, 72], "graphdatabatch": [2, 3, 8, 71, 72], "construct": 2, "merg": 2, "larg": [2, 25, 66, 72], "reconstruct": 3, "graph_list": [4, 70], "specif": [4, 66], "dim": [4, 21, 30], "apart": 4, "along": [4, 27, 28, 39, 40, 69, 71], "independ": [4, 71], "final": [4, 20, 21, 24, 71], "cumsum": 4, "per": [4, 16, 71], "big": 4, "well": [4, 69], "privat": 4, "behind": 4, "hood": 4, "These": [4, 39, 40, 72], "start": [4, 67, 69, 70, 72], "underscor": 4, "_": [4, 69, 70], "ignor": 4, "user": [4, 20], "func": [5, 55, 56, 57], "decor": [5, 55, 56, 57], "function": [5, 18, 19, 21, 23, 24, 25, 26, 27, 28, 36, 44, 45, 55, 56, 57, 66, 69, 70, 71, 72], "check": [5, 44, 45, 55, 56, 57], "valid": [5, 60], "mlx_graph": [8, 66, 69, 70, 71, 72], "unbatch": 8, "collat": [8, 72], "util": [8, 66, 69, 72], "validate_list_of_graph_data": 8, "base_dir": [10, 12, 13, 14], "abc": 10, "download": [10, 11, 12, 13, 14, 72], "must": [10, 31], "implement": [10, 21, 22, 24, 66, 69, 71, 72], "children": 10, "data": [10, 14, 16, 21, 25, 33, 66, 69, 70, 71], "within": [10, 16, 37, 38, 66, 71, 72], "self": [10, 11, 12, 13, 14, 19, 21, 23, 24, 26, 27, 28, 33, 43, 46, 50, 66, 69, 70, 71, 72], "creation": [10, 72], "preprocess": 10, "typic": 10, "done": [10, 21, 71], "overridden": 10, "directori": [10, 12, 13, 14], "file": [10, 12, 14], "local": [10, 12, 14, 72], "mlx_graphs_data": [10, 12, 14, 70], "abstract": [10, 72], "raw_path": [10, 11, 12, 13, 14, 72], "predict": [10, 21, 66, 68, 71], "possibli": [10, 11, 12, 13, 14], "save": [10, 11, 12, 13, 14, 72], "processed_path": [10, 11, 12, 13, 14], "path": [10, 14, 72], "raw": [10, 14, 72], "zachari": 11, "": [11, 18, 22, 23, 66, 69, 70, 71, 72], "karat": 11, "club": 11, "netowork": 11, "inform": [11, 43, 69], "flow": 11, "model": [11, 22, 24, 43, 66, 70, 72], "conflict": 11, "fission": 11, "small": [11, 69], "group": [11, 39, 40], "simpl": [11, 69, 71], "ha": [11, 66], "34": 11, "156": [11, 69], "undirect": [11, 45, 54], "belong": 11, "one": [11, 21, 32, 54, 71], "qm7b": [12, 72], "moleculenet": 12, "benchmark": [12, 14, 66], "molecular": [12, 69, 72], "machin": 12, "learn": [12, 20, 22, 25, 69, 72], "paper": [12, 20, 21, 25, 35, 72], "consist": [12, 69], "7": [12, 69, 70, 71], "211": 12, "molecul": [12, 69], "14": [12, 69, 71], "regress": [12, 14, 69, 71], "target": [12, 41, 42, 46, 47, 50, 51, 52, 69], "liter": [13, 21, 24, 36], "mnist": 13, "cifar10": 13, "split": [13, 69], "train": [13, 66, 70, 71, 72], "test": [13, 69, 71], "use_featur": 13, "bool": [13, 14, 16, 18, 19, 20, 21, 23, 25, 33, 44, 45, 46, 66], "fals": [13, 14, 16, 19, 20, 21, 23, 33, 44, 45, 66, 69, 70, 71], "superpixel": 13, "fromt": 13, "minst": 13, "imag": 13, "were": 13, "introduc": 13, "http": [13, 67, 69, 72], "arxiv": [13, 69], "org": [13, 69], "ab": 13, "2003": 13, "00982": 13, "select": [13, 69], "load": [13, 14, 16, 72], "true": [13, 18, 19, 21, 23, 25, 33, 44, 45, 46, 66, 69, 70, 71], "adjac": [13, 51, 52, 53, 55, 72], "matrix": [13, 21, 51, 52, 53, 55, 72], "locat": 13, "onli": [13, 14, 43], "clean": 14, "collect": [14, 71, 72], "120": [14, 71], "made": [14, 72], "avail": [14, 35, 66, 67, 72], "tu": 14, "dortmund": 14, "univers": 14, "access": [14, 66, 71], "here": [14, 21, 22, 66, 71, 72], "also": [14, 66, 70, 71, 72], "support": [14, 72], "version": [14, 21, 67], "non": [14, 21], "isomorph": [14, 20], "present": [14, 22, 37, 38, 48], "understand": [14, 71], "bia": [14, 18, 19, 23, 25, 66], "mutag": [14, 70, 71], "protein": 14, "imdb": 14, "binari": 14, "etc": 14, "whether": [14, 16, 18, 19, 20, 21, 25, 44, 45, 46], "dataset": [16, 66, 70], "sequenc": [16, 71, 72], "batch_siz": [16, 21, 69, 70, 71, 72], "shuffl": [16, 69, 70, 71], "iter": [16, 71, 72], "union": [16, 24, 46, 47, 50, 54], "reshuffl": 16, "order": [16, 71, 72], "node_features_dim": [18, 19, 25, 26, 27, 28, 66, 69, 72], "out_features_dim": [18, 19, 21, 25, 66, 72], "head": 18, "concat": 18, "negative_slop": 18, "float": [18, 20, 46], "dropout": [18, 70, 71], "edge_features_dim": [18, 69], "messagepass": [18, 19, 20, 21, 25, 43, 66], "attent": 18, "network": [18, 20, 21, 22, 24, 43, 66, 71], "convolut": [18, 19, 20, 21, 25, 66, 71], "layer": [18, 20, 21, 22, 23, 25, 66, 69, 70, 71], "size": [18, 19, 21, 22, 25, 34, 36, 39, 40, 71, 72], "input": [18, 19, 20, 21, 22, 23, 24, 25, 37, 38, 39, 40, 47, 52, 53, 69, 71, 72], "output": [18, 19, 20, 21, 23, 25, 34, 36, 39, 40, 52, 53, 69, 71], "embed": [18, 19, 20, 21, 24, 25, 71], "reduct": [18, 36, 70], "project": [18, 19, 25], "slope": 18, "leaki": 18, "relu": [18, 20, 21, 43, 69, 70, 71], "probabl": 18, "p": [18, 70, 71], "conv": [18, 20, 21, 25, 72], "16": [18, 20, 21, 25, 43, 69, 71, 72], "32": [18, 20, 25, 72], "random": [18, 20, 21, 70, 71, 72], "uniform": [18, 20, 21], "low": [18, 20, 66, 69], "high": [18, 20], "5": [18, 20, 21, 25, 36, 40, 52, 53, 69, 70, 71, 72], "h": [18, 20, 21, 25, 69, 70, 71, 72], "64": [18, 69, 70, 71], "__call__": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 66, 69, 70, 71], "forward": [18, 20, 21, 22, 25, 66, 69, 70, 71], "pass": [18, 20, 21, 22, 24, 25, 66, 69, 71], "messag": [18, 20, 21, 22, 24, 25, 66], "src_featur": [18, 21, 24, 66], "dst_featur": [18, 21, 24, 66], "alpha_src": 18, "alpha_dst": 18, "follow": [18, 36, 67, 69, 70, 71, 72], "gat": 18, "propag": [18, 24, 66], "rule": 18, "sourc": [18, 21, 22, 24, 30, 37, 38, 41, 42, 46, 47, 50, 51, 52, 69, 72], "destin": [18, 21, 22, 24, 47, 72], "includ": [18, 33, 69, 71], "compat": [18, 31], "precomput": 18, "1d": 18, "either": [18, 20, 24, 66], "src": [18, 24, 30, 34, 36, 37, 38, 40], "dst": [18, 24, 34], "softmax": [18, 24, 36, 40], "add_self_loop": 19, "gcn": [19, 35, 66], "add": [19, 21, 24, 36, 46, 72], "loop": [19, 33, 46, 50, 69, 70], "edge_weight": [19, 20, 21, 24, 25, 34, 66], "normal": [19, 69, 72], "call": [19, 23, 24, 26, 27, 28, 66], "mlp": [20, 69], "modul": [20, 22, 24, 43, 70, 71], "ep": 20, "learn_ep": 20, "how": [20, 22, 69, 71], "power": 20, "neural": [20, 21, 24, 66], "mathbf": [20, 25], "_i": [20, 25], "text": 20, "left": 20, "epsilon": 20, "cdot": [20, 25], "x": [20, 25, 43, 48, 70, 72], "sum_": 20, "j": [20, 25], "mathcal": [20, 25], "n": [20, 22, 25, 69, 71], "_j": [20, 25], "right": 20, "respect": [20, 66, 71], "denot": [20, 25, 71], "provid": [20, 22, 26, 27, 28, 32, 34, 36, 44, 45, 46, 69, 71, 72], "fix": 20, "callabl": [20, 22], "initi": [20, 21, 22, 23, 66], "term": [20, 72], "node_feat_dim": 20, "out_feat_dim": 20, "sequenti": [20, 69], "linear": [20, 21, 43, 66, 69, 70, 71], "536501": 20, "154826": 20, "745569": 20, "31547": 20, "0962588": 20, "108504": 20, "415889": 20, "0498145": 20, "597379": 20, "194553": 20, "251498": 20, "207561": 20, "119966": 20, "0159533": 20, "276559": 20, "0258303": 20, "194533": 20, "15515": 20, "21477": 20, "169684": 20, "485867": 20, "0194768": 20, "145761": 20, "139433": 20, "133289": 20, "0279559": 20, "358095": 20, "0443346": 20, "11571": 20, "114396": 20, "dtype": [20, 25, 52, 53, 71, 72], "weight": [20, 21, 23, 25, 34, 66], "leverag": [20, 21, 25, 34, 66, 71, 72], "in_features_dim": 21, "num_rel": 21, "message_func": 21, "trans": 21, "distmult": 21, "rotat": 21, "aggregate_func": 21, "pna": 21, "layer_norm": 21, "activ": 21, "depend": [21, 22, 70], "node_dim": 21, "gener": [21, 22, 71], "relat": [21, 22, 66], "bellman": 21, "ford": 21, "framework": [21, 66, 70, 71], "link": 21, "adopt": [21, 72], "pyg": [21, 24, 66, 71, 72], "part": 21, "nbfnet": 21, "hold": 21, "state": [21, 69, 70, 71], "art": 21, "kg": 21, "complet": 21, "work": [21, 43, 71], "multi": [21, 66], "compos": 21, "vector": [21, 22, 32], "three": [21, 70], "possibl": [21, 72], "wai": 21, "expect": [21, 72], "trick": 21, "queri": 21, "rest": 21, "separ": [21, 67], "point": 21, "input_dim": [21, 23, 69], "altern": 21, "standard": 21, "note": [21, 35], "materi": 21, "o": [21, 69, 72], "complex": [21, 69, 72], "further": 21, "reduc": 21, "v": [21, 71], "rspmm": 21, "c": [21, 69], "kernel": 21, "repo": [21, 67], "same": [21, 22, 70], "uniqu": 21, "sum": [21, 26, 37, 69, 71], "mult": 21, "norm": 21, "often": [21, 37, 38], "crucial": 21, "perform": [21, 36, 69, 71, 72], "build": [21, 24, 66, 72], "3d": [21, 69, 71], "specifi": [21, 22, 39, 40, 46, 69, 72], "output_dim": [21, 23, 69], "edge_typ": 21, "boundari": 21, "layer_input": 21, "updat": [21, 22, 24, 46, 50, 69, 70, 71], "residu": 21, "connect": [21, 24, 71], "anoth": [21, 71], "obtain": [21, 26, 27, 28], "tensor": [21, 36, 46, 50], "conv2": [21, 43, 70, 71], "tupl": [21, 22, 24, 31, 41, 42, 46, 47, 50, 53, 54], "b": 21, "feat": 21, "encod": [21, 32, 71], "eg": 21, "aggreg": [21, 24, 25, 43, 69], "dim_siz": 21, "aggr": [21, 24, 36, 66, 69], "strategi": [21, 24, 71, 72], "receiv": [21, 24], "between": [21, 24, 30, 71], "directli": [21, 24, 66, 71], "integr": [21, 24, 71, 72], "scalar": [21, 24], "weigh": [21, 24], "neighbor": [21, 24], "update_nod": [21, 24], "old": 21, "node_model": [22, 69], "edge_model": [22, 69], "graph_model": 22, "block": [22, 69, 72], "defin": [22, 69, 71, 72], "take": [22, 27, 28], "associ": [22, 44, 45, 46, 50, 54, 71, 72], "f_n": 22, "f_e": 22, "itself": [22, 72], "f_u": 22, "column": [22, 32, 69, 72], "thei": [22, 46, 72], "act": 22, "flexibl": [22, 69], "meta": 22, "architectur": [22, 66, 70], "like": [22, 30, 71, 72], "deep": [22, 70], "more": [22, 66, 69, 71, 72], "see": 22, "For": [22, 67, 71, 72], "usag": 22, "refer": [22, 24], "battaglia": 22, "et": [22, 24], "al": [22, 24], "induct": [22, 25, 72], "bias": 22, "xavier": 23, "glorot": 23, "initit": 23, "inherit": [23, 24, 71], "instead": [23, 34, 72], "dimension": [23, 51], "max": [24, 36, 38, 71], "min": [24, 36, 70], "creat": [24, 32, 69, 70, 71, 72], "mpnn": 24, "arbitrari": 24, "gnn": [24, 43, 66, 68, 71], "paradigm": 24, "inspir": 24, "pytorch": [24, 70, 71], "geometr": [24, 70], "gilmer": 24, "quantum": [24, 66, 68], "chemistri": 24, "fei": 24, "message_kwarg": [24, 66], "aggregate_kwarg": 24, "update_kwarg": 24, "them": [24, 69, 70, 72], "represent": [24, 25, 26, 27, 28, 51, 52, 53, 72], "distinct": [24, 71], "graphsag": [25, 66], "w": [25, 71], "_1": 25, "_2": 25, "bigoplus_": 25, "bigoplu": 25, "65429": [25, 72], "376169": [25, 72], "04172": [25, 72], "919106": [25, 72], "42576": [25, 72], "490938": [25, 72], "05823": [25, 72], "295776": [25, 72], "075439": [25, 72], "104383": [25, 72], "031947": [25, 72], "351897": [25, 72], "batch_indic": [26, 27, 28, 69, 70, 71], "level": [26, 27, 28, 66], "pool": [26, 27, 28, 69, 71], "otheris": [26, 27, 28], "num_batch": [26, 27, 28, 71], "its": [26, 27, 28, 69, 71, 72], "wise": [27, 28], "maximum": [27, 38], "averag": 28, "make": 30, "mai": [30, 67, 69], "requir": 30, "some": [30, 69, 70, 71, 72], "situat": 30, "match": 30, "new": [30, 31, 66, 71], "new_shap": 31, "desir": 31, "view": 31, "num_class": [32, 70], "hot": [32, 71], "element": [32, 35, 36, 69], "num_el": 32, "transform": [32, 60, 69, 71, 72], "max_label": 32, "remove_self_loop": 33, "instanc": [33, 72], "direct": [33, 44, 49], "networkx": 33, "digraph": 33, "otherwis": [33, 44, 45], "result": [33, 37, 38, 40, 51, 66, 71], "outedgeview": 33, "count": 34, "ocurr": 34, "usual": [34, 72], "infer": [34, 46, 66], "length": [34, 35], "degre": [35, 71], "invert": 35, "squar": 35, "root": 35, "temporari": 35, "workaround": 35, "deal": 35, "infinit": 35, "accord": 35, "boolean": 35, "isn": 35, "t": [35, 71, 72], "yet": 35, "so": 35, "we": [35, 67, 69, 70, 71, 72], "pre": 35, "pad": 35, "isol": 35, "out_siz": [36, 39, 40, 69], "oper": [36, 37, 38, 39, 40, 66, 71], "empti": [36, 37, 38], "first": [36, 41, 42, 48, 70, 71, 72], "emploi": [36, 71], "item": [36, 69, 71, 72], "assign": 37, "determin": [37, 38, 39, 40, 44, 45], "after": [37, 38, 40], "kept": 38, "undergo": [39, 40], "row": [41, 42, 72], "second": [41, 42, 48], "correspond": [41, 42, 51, 69], "nn": [43, 66, 69, 70, 71, 72], "hop": 43, "def": [43, 66, 69, 70, 71, 72], "super": [43, 66, 69, 70, 71, 72], "conv1": [43, 70, 71], "gcnconv": [43, 70, 71], "lin": [43, 70], "consid": [44, 45, 66], "both": [44, 45, 66, 72], "fill_valu": 46, "allow_rep": 46, "fill": 46, "even": 46, "alreadi": 46, "extract": [47, 71], "edge_index_1": 48, "edge_index_2": 48, "NOT": 48, "remov": [49, 50], "without": [49, 50, 66], "adjacency_matrix": [52, 53], "uint32": [52, 53], "spars": 53, "sort": 60, "scatter": [60, 69], "op": 60, "librari": [66, 70, 72], "built": [66, 72], "upon": 66, "appl": 66, "fast": 66, "silicon": 66, "been": 66, "design": 66, "run": [66, 67, 69, 70], "chip": 66, "fulli": 66, "gpu": [66, 69, 70, 71, 72], "cpu": [66, 71], "hardwar": 66, "mac": [66, 71, 72], "thank": 66, "primit": 66, "show": [66, 69], "10x": 66, "improv": [66, 69], "scalabl": 66, "With": 66, "live": 66, "share": 66, "setup": 66, "allow": [66, 69, 71], "entir": [66, 69, 72], "capac": 66, "consequ": 66, "equip": 66, "substanti": 66, "span": 66, "ten": 66, "gigabyt": 66, "devic": [66, 71], "elimin": 66, "need": [66, 69, 71, 72], "time": [66, 70, 71, 72], "consum": 66, "transfer": 66, "enabl": [66, 72], "explicitli": 66, "incur": 66, "overhead": 66, "facilit": [66, 71], "resourc": 66, "eas": 66, "straightforward": 66, "approach": [66, 72], "ensur": [66, 72], "properli": 66, "handl": [66, 72], "your": [66, 72], "As": [66, 71], "you": [66, 67, 69, 71], "focu": 66, "exclus": 66, "logic": [66, 69], "worri": 66, "about": [66, 69], "underli": 66, "mechan": 66, "message_pass": 66, "sageconv": [66, 72], "neigh_proj": 66, "self_proj": 66, "sage": 66, "neigh_featur": 66, "out_featur": 66, "get": 66, "reshap": 66, "quickstart": 66, "loader": [66, 69, 70, 71], "mxg": 66, "dgl": [66, 71], "chemic": [66, 68, 71], "pypi": 67, "To": [67, 69, 71], "pip": [67, 70], "clone": 67, "github": 67, "git": 67, "com": [67, 72], "tristanbilot": 67, "cd": 67, "Then": 67, "suggest": 67, "virtual": 67, "environ": 67, "extra": [67, 70], "develop": 67, "document": 67, "purpos": 67, "want": 67, "via": [67, 69, 71], "ml": 67, "explor": [67, 69, 71], "In": [69, 70, 71, 72], "tutori": [69, 71], "instal": [69, 70], "tqdm": 69, "matplotlib": 69, "qm9": 69, "tudataset": [69, 70, 71], "130": 69, "000": 69, "heavi": 69, "atom": [69, 71], "drawn": 69, "f": [69, 70, 71], "spatial": 69, "energi": 69, "conform": 69, "coordin": 69, "latest": 69, "13": [69, 71], "19": [69, 71], "differ": 69, "let": [69, 70, 71], "look": [69, 72], "print": [69, 70, 71], "len": [69, 71], "129433": 69, "ll": [69, 70, 72], "dataload": [69, 70, 71, 72], "num_training_sampl": 69, "110_000": 69, "training_dataset": 69, "test_dataset": [69, 71], "128": [69, 70], "train_load": [69, 71], "test_load": [69, 71], "dive": 69, "bit": 69, "deeper": 69, "scratch": 69, "pdf": 69, "1806": 69, "01261": 69, "combin": 69, "through": [69, 71, 72], "graphnetworkblock": 69, "It": [69, 71], "coreespond": 69, "just": [69, 72], "edgemodel": 69, "source_nod": 69, "destination_nod": 69, "model_input": 69, "new_edge_featur": 69, "incom": 69, "Such": 69, "6": [69, 70, 71], "nodemodel": 69, "target_nod": 69, "aggregated_edg": 69, "new_node_featur": 69, "now": [69, 70], "basic": [69, 71, 72], "do": [69, 70], "below": 69, "two": [69, 72], "global_mean_pool": [69, 70, 71], "gnn1": 69, "gnn2": 69, "output_linear": 69, "out": [69, 70, 72], "our": [69, 71, 72], "simpli": [69, 72], "loss": [69, 70, 71], "mse": 69, "re": [69, 70, 72], "go": [69, 71], "optim": [69, 70, 71], "adamw": 69, "8": [69, 70, 71, 72], "eval": [69, 70, 71], "loss_fn": [69, 70, 71], "y_hat": [69, 70, 71], "y": [69, 70, 71], "mse_loss": 69, "forward_fn": [69, 70, 71], "loss_and_grad_fn": [69, 70, 71], "value_and_grad": [69, 70, 71], "learning_r": [69, 70, 71], "1e": 69, "readi": [69, 70], "lowest": 69, "unoccupi": 69, "orbit": 69, "set_default_devic": [69, 70, 71], "regression_task": 69, "len_training_load": 69, "len_test_load": 69, "epoch": [69, 70, 71], "20": [69, 71], "epoch_training_loss": 69, "epoch_test_loss": 69, "rang": [69, 70, 71, 72], "total": 69, "unit": 69, "tepoch": 69, "set_descript": 69, "training_loss": 69, "idx": 69, "enumer": [69, 70], "grad": [69, 70, 71], "expand_dim": [69, 72], "set_postfix": 69, "test_loss": 69, "append": [69, 71, 72], "leav": 69, "test_epoch": 69, "100": 69, "860": 69, "00": 69, "06": 69, "lt": 69, "137": 69, "66batch": 69, "39": [69, 71], "141": 69, "06batch": 69, "634": 69, "05": 69, "147": 69, "70batch": 69, "406": 69, "151": 69, "08batch": 69, "357": 69, "76batch": 69, "335": 69, "85batch": 69, "316": 69, "154": 69, "13batch": 69, "303": 69, "84batch": 69, "285": 69, "131": 69, "16batch": 69, "264": 69, "10": [69, 70, 71], "135": 69, "10batch": 69, "249": 69, "11": [69, 71], "129": 69, "22batch": 69, "234": 69, "12": [69, 71], "47batch": 69, "218": 69, "18batch": 69, "205": 69, "150": [69, 71], "44batch": 69, "194": 69, "15": [69, 71], "182": 69, "98batch": 69, "171": 69, "17": [69, 71], "149": 69, "20batch": 69, "167": 69, "18": [69, 71], "81batch": 69, "162": 69, "127": 69, "19batch": 69, "153": 69, "conclud": 69, "visual": 69, "evolut": 69, "pyplot": 69, "plt": 69, "figur": 69, "plot": 69, "titl": 69, "legend": 69, "illustr": 69, "hope": 69, "give": 69, "insight": 69, "could": [69, 72], "involv": 69, "special": 69, "exploit": 69, "invari": 69, "equivari": 69, "geometri": 69, "highli": [69, 71], "notebook": 70, "problem": 70, "befor": 70, "torch": 70, "torch_geometr": 70, "panda": 70, "mlx_nn": 70, "mlx_optim": 70, "mxg_nn": 70, "mxg_dataset": 70, "mxg_loader": 70, "functool": 70, "partial": 70, "mxg_model": 70, "in_dim": [70, 71], "hidden_dim": [70, 71], "out_dim": [70, 71], "conv3": [70, 71], "cross_entropi": [70, 71], "setup_training_mxg": 70, "hid_siz": 70, "adam": [70, 71], "01": [70, 71], "step": 70, "train_mxg": 70, "torch_nn": 70, "pyg_nn": 70, "pyg_dataset": 70, "pyg_load": 70, "pyg_model": 70, "setup_training_pyg": 70, "lr": 70, "criterion": 70, "crossentropyloss": 70, "backward": 70, "zero_grad": 70, "train_pyg": 70, "dgl_nn": 70, "dgl_dataset": 70, "dgl_loader": 70, "dgl_model": 70, "gatconv": 70, "num_head": 70, "allow_zero_in_degre": 70, "els": 70, "classifi": 70, "local_scop": 70, "ndata": 70, "hg": 70, "mean_nod": 70, "squeez": 70, "setup_training_dgl": 70, "graphdataload": 70, "drop_last": 70, "train_dgl": 70, "proce": 70, "dd": 70, "config": 70, "auxilirai": 70, "timeit": 70, "dataset_nam": 70, "zip": 70, "train_fn": 70, "framework_to_train": 70, "framework_to_setup": 70, "framework_to_dataset": 70, "lambda": 70, "layer_class": 70, "graphconv": 70, "bzr_md": 70, "timeit_repeat": 70, "timeit_numb": 70, "manual_se": 70, "42": [70, 71], "seed": [70, 71], "layer_nam": 70, "timer": 70, "repeat": 70, "join": [70, 71, 72], "3f": [70, 71], "817": 70, "808": 70, "447": [70, 71], "960": 70, "483": 70, "694": 70, "goal": 71, "mini": 71, "subsequ": 71, "readout": 71, "enhanc": [71, 72], "concept": 71, "defaultdict": 71, "compris": 71, "than": 71, "propos": 71, "compound": 71, "vertic": 71, "symbol": 71, "identifi": 71, "bond": 71, "188": 71, "sampl": 71, "statist": 71, "better": 71, "stat": 71, "num": 71, "k": 71, "2f": 71, "93": 71, "59": 71, "noth": 71, "wrapper": 71, "around": 71, "structur": 71, "similarli": [71, 72], "dglgraph": 71, "38": 71, "slice": 71, "end": [71, 72], "divid": 71, "train_dataset": 71, "techniqu": 71, "recommend": [71, 72], "abil": 71, "therebi": 71, "acceler": [71, 72], "runtim": 71, "importantli": 71, "maintain": 71, "unconnect": 71, "map": 71, "back": 71, "easi": 71, "retriev": 71, "individu": [71, 72], "ngraph": 71, "2590": 71, "1168": 71, "63": 71, "int64": 71, "2620": 71, "1179": 71, "22": 71, "720": 71, "337": 71, "21": 71, "respons": [71, 72], "known": 71, "thu": 71, "embedding_s": 71, "supervis": 71, "fashion": 71, "cross": 71, "entropi": 71, "write": 71, "dedic": 71, "later": 71, "gradient": 71, "r": 71, "prefer": 71, "howev": 71, "effortlessli": 71, "switch": 71, "jax": 71, "loss_sum": 71, "acc": 71, "argmax": 71, "train_acc": 71, "test_acc": 71, "30": 71, "best_test_acc": 71, "best": 71, "accuraci": 71, "022": 71, "387": 71, "014": 71, "667": 71, "684": 71, "013": 71, "640": 71, "658": 71, "660": 71, "633": 71, "507": 71, "526": 71, "647": 71, "580": 71, "012": 71, "680": 71, "753": 71, "605": 71, "700": 71, "737": 71, "010": 71, "711": 71, "713": 71, "632": 71, "687": 71, "011": 71, "733": 71, "747": 71, "579": 71, "23": 71, "707": 71, "24": 71, "25": 71, "727": 71, "26": 71, "27": 71, "28": 71, "29": 71, "gt": 71, "short": 72, "introduct": 72, "cover": 72, "topic": 72, "accept": 72, "coo": 72, "format": 72, "th": 72, "abov": 72, "convent": 72, "across": 72, "own": 72, "constructor": 72, "alpha": 72, "to_edge_index": 72, "to_adjacency_matrix": 72, "viceversa": 72, "sever": 72, "drastic": 72, "interfac": 72, "particularli": 72, "whenev": 72, "graphs_batch": 72, "intern": 72, "similar": 72, "extend": 72, "scipi": 72, "sp": 72, "to_sparse_adjacency_matrix": 72, "qm7bdataset": 72, "file_path": 72, "mat": 72, "deepchem": 72, "io": 72, "s3": 72, "websit": 72, "u": 72, "west": 72, "amazonaw": 72, "mat_path": 72, "loadmat": 72, "tolist": 72, "to_list": 72, "everi": 72, "onc": 72, "automat": 72, "few": 72, "wide": 72, "routin": 72, "come": 72, "predefin": 72}, "objects": {"mlx_graphs.data.batch": [[1, 0, 1, "", "GraphDataBatch"], [2, 2, 1, "", "batch"], [3, 2, 1, "", "unbatch"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, 1, 1, "", "__init__"]], "mlx_graphs.data.collate": [[4, 2, 1, "", "collate"]], "mlx_graphs.data.data": [[0, 0, 1, "", "GraphData"]], "mlx_graphs.data.data.GraphData": [[0, 1, 1, "", "__cat_dim__"], [0, 1, 1, "", "__inc__"], [0, 3, 1, "", "num_edge_classes"], [0, 3, 1, "", "num_edge_features"], [0, 3, 1, "", "num_edges"], [0, 3, 1, "", "num_graph_classes"], [0, 3, 1, "", "num_graph_features"], [0, 3, 1, "", "num_node_classes"], [0, 3, 1, "", "num_node_features"], [0, 3, 1, "", "num_nodes"], [0, 1, 1, "", "to_dict"]], "mlx_graphs.data.utils": [[5, 2, 1, "", "validate_list_of_graph_data"]], "mlx_graphs.datasets": [[10, 0, 1, "", "Dataset"], [11, 0, 1, "", "KarateClubDataset"], [12, 0, 1, "", "QM7bDataset"], [13, 0, 1, "", "SuperPixelDataset"], [14, 0, 1, "", "TUDataset"]], "mlx_graphs.datasets.Dataset": [[10, 1, 1, "", "download"], [10, 3, 1, "", "name"], [10, 3, 1, "", "num_edge_classes"], [10, 3, 1, "", "num_edge_features"], [10, 3, 1, "", "num_graph_classes"], [10, 3, 1, "", "num_graph_features"], [10, 3, 1, "", "num_graphs"], [10, 3, 1, "", "num_node_classes"], [10, 3, 1, "", "num_node_features"], [10, 1, 1, "", "process"], [10, 3, 1, "", "processed_path"], [10, 3, 1, "", "raw_path"]], "mlx_graphs.datasets.KarateClubDataset": [[11, 1, 1, "", "download"], [11, 1, 1, "", "process"]], "mlx_graphs.datasets.QM7bDataset": [[12, 1, 1, "", "download"], [12, 1, 1, "", "process"]], "mlx_graphs.datasets.SuperPixelDataset": [[13, 1, 1, "", "download"], [13, 1, 1, "", "process"]], "mlx_graphs.datasets.TUDataset": [[14, 1, 1, "", "download"], [14, 1, 1, "", "process"], [14, 3, 1, "", "processed_path"], [14, 3, 1, "", "raw_path"]], "mlx_graphs.loaders": [[16, 0, 1, "", "Dataloader"]], "mlx_graphs.loaders.Dataloader": [[16, 1, 1, "", "__init__"]], "mlx_graphs.nn": [[18, 0, 1, "", "GATConv"], [19, 0, 1, "", "GCNConv"], [20, 0, 1, "", "GINConv"], [21, 0, 1, "", "GeneralizedRelationalConv"], [22, 0, 1, "", "GraphNetworkBlock"], [23, 0, 1, "", "Linear"], [24, 0, 1, "", "MessagePassing"], [25, 0, 1, "", "SAGEConv"], [26, 0, 1, "", "global_add_pool"], [27, 0, 1, "", "global_max_pool"], [28, 0, 1, "", "global_mean_pool"]], "mlx_graphs.nn.GATConv": [[18, 1, 1, "", "__call__"], [18, 1, 1, "", "message"]], "mlx_graphs.nn.GCNConv": [[19, 1, 1, "", "__call__"]], "mlx_graphs.nn.GINConv": [[20, 1, 1, "", "__call__"]], "mlx_graphs.nn.GeneralizedRelationalConv": [[21, 1, 1, "", "__call__"], [21, 1, 1, "", "aggregate"], [21, 1, 1, "", "message"], [21, 1, 1, "", "update_nodes"]], "mlx_graphs.nn.GraphNetworkBlock": [[22, 1, 1, "", "__call__"]], "mlx_graphs.nn.Linear": [[23, 1, 1, "", "__call__"]], "mlx_graphs.nn.MessagePassing": [[24, 1, 1, "", "__call__"], [24, 1, 1, "", "aggregate"], [24, 1, 1, "", "message"], [24, 1, 1, "", "propagate"], [24, 1, 1, "", "update_nodes"]], "mlx_graphs.nn.SAGEConv": [[25, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_add_pool": [[26, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_max_pool": [[27, 1, 1, "", "__call__"]], "mlx_graphs.nn.global_mean_pool": [[28, 1, 1, "", "__call__"]], "mlx_graphs.utils.array_ops": [[30, 2, 1, "", "broadcast"], [31, 2, 1, "", "expand"], [32, 2, 1, "", "one_hot"]], "mlx_graphs.utils.convert": [[33, 2, 1, "", "to_networkx"]], "mlx_graphs.utils.scatter": [[34, 2, 1, "", "degree"], [35, 2, 1, "", "invert_sqrt_degree"], [36, 2, 1, "", "scatter"], [37, 2, 1, "", "scatter_add"], [38, 2, 1, "", "scatter_max"], [39, 2, 1, "", "scatter_mean"], [40, 2, 1, "", "scatter_softmax"]], "mlx_graphs.utils.sorting": [[41, 2, 1, "", "sort_edge_index"], [42, 2, 1, "", "sort_edge_index_and_features"]], "mlx_graphs.utils.topology": [[43, 2, 1, "", "get_num_hops"], [44, 2, 1, "", "is_directed"], [45, 2, 1, "", "is_undirected"]], "mlx_graphs.utils.transformations": [[46, 2, 1, "", "add_self_loops"], [47, 2, 1, "", "get_src_dst_features"], [48, 2, 1, "", "get_unique_edge_indices"], [49, 2, 1, "", "remove_duplicate_directed_edges"], [50, 2, 1, "", "remove_self_loops"], [51, 2, 1, "", "to_adjacency_matrix"], [52, 2, 1, "", "to_edge_index"], [53, 2, 1, "", "to_sparse_adjacency_matrix"], [54, 2, 1, "", "to_undirected"]], "mlx_graphs.utils.validators": [[55, 2, 1, "", "validate_adjacency_matrix"], [56, 2, 1, "", "validate_edge_index"], [57, 2, 1, "", "validate_edge_index_and_features"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"mlx_graph": [0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "data": [0, 1, 2, 3, 4, 5, 7, 8, 72], "graphdata": 0, "batch": [1, 2, 3, 6, 72], "graphdatabatch": 1, "unbatch": 3, "collat": 4, "util": [5, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60], "validate_list_of_graph_data": 5, "object": [6, 7], "dataset": [10, 11, 12, 13, 14, 15, 69, 71, 72], "karateclubdataset": 11, "qm7bdataset": 12, "superpixeldataset": 13, "tudataset": 14, "loader": [16, 17, 72], "dataload": 16, "nn": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "gatconv": 18, "gcnconv": 19, "ginconv": 20, "generalizedrelationalconv": 21, "graphnetworkblock": 22, "linear": 23, "messagepass": 24, "sageconv": 25, "global_add_pool": 26, "global_max_pool": 27, "global_mean_pool": 28, "neural": [29, 69], "network": [29, 69], "array_op": [30, 31, 32], "broadcast": 30, "expand": 31, "one_hot": 32, "convert": [33, 59], "to_networkx": 33, "scatter": [34, 35, 36, 37, 38, 39, 40, 61], "degre": 34, "invert_sqrt_degre": 35, "scatter_add": 37, "scatter_max": 38, "scatter_mean": 39, "scatter_softmax": 40, "sort": [41, 42, 62], "sort_edge_index": 41, "sort_edge_index_and_featur": 42, "topologi": [43, 44, 45, 63], "get_num_hop": 43, "is_direct": 44, "is_undirect": 45, "transform": [46, 47, 48, 49, 50, 51, 52, 53, 54, 64], "add_self_loop": 46, "get_src_dst_featur": 47, "get_unique_edge_indic": 48, "remove_duplicate_directed_edg": 49, "remove_self_loop": 50, "to_adjacency_matrix": 51, "to_edge_index": 52, "to_sparse_adjacency_matrix": 53, "to_undirect": 54, "valid": [55, 56, 57, 65], "validate_adjacency_matrix": 55, "validate_edge_index": 56, "validate_edge_index_and_featur": 57, "arrai": 58, "op": 58, "mlx": [66, 70], "graph": [66, 69, 70, 71, 72], "featur": 66, "exampl": [66, 68], "usag": 66, "instal": [66, 67], "tutori": 66, "api": 66, "build": 67, "from": 67, "sourc": 67, "test": 67, "dev": 67, "benchmark": [67, 70], "doc": 67, "depend": 67, "quantum": 69, "chemic": 69, "properti": 69, "predict": 69, "gnn": [69, 72], "load": 69, "modul": 69, "model": [69, 71], "train": 69, "note": 69, "next": 69, "step": 69, "mxg": 70, "implement": 70, "pyg": 70, "dgl": 70, "classif": 71, "gcn": 71, "quickstart": 72, "repres": 72, "simpl": 72, "custom": 72, "attribut": 72, "oper": 72, "layer": 72}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"mlx_graphs.data.data.GraphData": [[0, "mlx-graphs-data-data-graphdata"]], "mlx_graphs.data.batch.GraphDataBatch": [[1, "mlx-graphs-data-batch-graphdatabatch"]], "mlx_graphs.data.batch.batch": [[2, "mlx-graphs-data-batch-batch"]], "mlx_graphs.data.batch.unbatch": [[3, "mlx-graphs-data-batch-unbatch"]], "mlx_graphs.data.collate.collate": [[4, "mlx-graphs-data-collate-collate"]], "mlx_graphs.data.utils.validate_list_of_graph_data": [[5, "mlx-graphs-data-utils-validate-list-of-graph-data"]], "Batch Objects": [[6, "batch-objects"]], "Data Objects": [[7, "data-objects"]], "Data": [[8, "data"]], "Utils": [[9, "utils"], [60, "utils"]], "mlx_graphs.datasets.Dataset": [[10, "mlx-graphs-datasets-dataset"]], "mlx_graphs.datasets.KarateClubDataset": [[11, "mlx-graphs-datasets-karateclubdataset"]], "mlx_graphs.datasets.QM7bDataset": [[12, "mlx-graphs-datasets-qm7bdataset"]], "mlx_graphs.datasets.SuperPixelDataset": [[13, "mlx-graphs-datasets-superpixeldataset"]], "mlx_graphs.datasets.TUDataset": [[14, "mlx-graphs-datasets-tudataset"]], "Datasets": [[15, "datasets"]], "mlx_graphs.loaders.Dataloader": [[16, "mlx-graphs-loaders-dataloader"]], "Loaders": [[17, "loaders"]], "mlx_graphs.nn.GATConv": [[18, "mlx-graphs-nn-gatconv"]], "mlx_graphs.nn.GCNConv": [[19, "mlx-graphs-nn-gcnconv"]], "mlx_graphs.nn.GINConv": [[20, "mlx-graphs-nn-ginconv"]], "mlx_graphs.nn.GeneralizedRelationalConv": [[21, "mlx-graphs-nn-generalizedrelationalconv"]], "mlx_graphs.nn.GraphNetworkBlock": [[22, "mlx-graphs-nn-graphnetworkblock"]], "mlx_graphs.nn.Linear": [[23, "mlx-graphs-nn-linear"]], "mlx_graphs.nn.MessagePassing": [[24, "mlx-graphs-nn-messagepassing"]], "mlx_graphs.nn.SAGEConv": [[25, "mlx-graphs-nn-sageconv"]], "mlx_graphs.nn.global_add_pool": [[26, "mlx-graphs-nn-global-add-pool"]], "mlx_graphs.nn.global_max_pool": [[27, "mlx-graphs-nn-global-max-pool"]], "mlx_graphs.nn.global_mean_pool": [[28, "mlx-graphs-nn-global-mean-pool"]], "Neural Networks": [[29, "neural-networks"]], "mlx_graphs.utils.array_ops.broadcast": [[30, "mlx-graphs-utils-array-ops-broadcast"]], "mlx_graphs.utils.array_ops.expand": [[31, "mlx-graphs-utils-array-ops-expand"]], "mlx_graphs.utils.array_ops.one_hot": [[32, "mlx-graphs-utils-array-ops-one-hot"]], "mlx_graphs.utils.convert.to_networkx": [[33, "mlx-graphs-utils-convert-to-networkx"]], "mlx_graphs.utils.scatter.degree": [[34, "mlx-graphs-utils-scatter-degree"]], "mlx_graphs.utils.scatter.invert_sqrt_degree": [[35, "mlx-graphs-utils-scatter-invert-sqrt-degree"]], "mlx_graphs.utils.scatter.scatter": [[36, "mlx-graphs-utils-scatter-scatter"]], "mlx_graphs.utils.scatter.scatter_add": [[37, "mlx-graphs-utils-scatter-scatter-add"]], "mlx_graphs.utils.scatter.scatter_max": [[38, "mlx-graphs-utils-scatter-scatter-max"]], "mlx_graphs.utils.scatter.scatter_mean": [[39, "mlx-graphs-utils-scatter-scatter-mean"]], "mlx_graphs.utils.scatter.scatter_softmax": [[40, "mlx-graphs-utils-scatter-scatter-softmax"]], "mlx_graphs.utils.sorting.sort_edge_index": [[41, "mlx-graphs-utils-sorting-sort-edge-index"]], "mlx_graphs.utils.sorting.sort_edge_index_and_features": [[42, "mlx-graphs-utils-sorting-sort-edge-index-and-features"]], "mlx_graphs.utils.topology.get_num_hops": [[43, "mlx-graphs-utils-topology-get-num-hops"]], "mlx_graphs.utils.topology.is_directed": [[44, "mlx-graphs-utils-topology-is-directed"]], "mlx_graphs.utils.topology.is_undirected": [[45, "mlx-graphs-utils-topology-is-undirected"]], "mlx_graphs.utils.transformations.add_self_loops": [[46, "mlx-graphs-utils-transformations-add-self-loops"]], "mlx_graphs.utils.transformations.get_src_dst_features": [[47, "mlx-graphs-utils-transformations-get-src-dst-features"]], "mlx_graphs.utils.transformations.get_unique_edge_indices": [[48, "mlx-graphs-utils-transformations-get-unique-edge-indices"]], "mlx_graphs.utils.transformations.remove_duplicate_directed_edges": [[49, "mlx-graphs-utils-transformations-remove-duplicate-directed-edges"]], "mlx_graphs.utils.transformations.remove_self_loops": [[50, "mlx-graphs-utils-transformations-remove-self-loops"]], "mlx_graphs.utils.transformations.to_adjacency_matrix": [[51, "mlx-graphs-utils-transformations-to-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_edge_index": [[52, "mlx-graphs-utils-transformations-to-edge-index"]], "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix": [[53, "mlx-graphs-utils-transformations-to-sparse-adjacency-matrix"]], "mlx_graphs.utils.transformations.to_undirected": [[54, "mlx-graphs-utils-transformations-to-undirected"]], "mlx_graphs.utils.validators.validate_adjacency_matrix": [[55, "mlx-graphs-utils-validators-validate-adjacency-matrix"]], "mlx_graphs.utils.validators.validate_edge_index": [[56, "mlx-graphs-utils-validators-validate-edge-index"]], "mlx_graphs.utils.validators.validate_edge_index_and_features": [[57, "mlx-graphs-utils-validators-validate-edge-index-and-features"]], "Array ops": [[58, "array-ops"]], "Convert": [[59, "convert"]], "Scatter": [[61, "scatter"]], "Sorting": [[62, "sorting"]], "Topology": [[63, "topology"]], "Transformations": [[64, "transformations"]], "Validators": [[65, "validators"]], "MLX-graphs": [[66, "mlx-graphs"]], "Features": [[66, "features"]], "Example usage": [[66, "example-usage"]], "Install": [[66, null]], "Tutorials": [[66, null]], "API": [[66, null]], "Installation": [[67, "installation"]], "Build from source": [[67, "build-from-source"]], "Installing test, dev, benchmarks, docs dependencies": [[67, "installing-test-dev-benchmarks-docs-dependencies"]], "Examples": [[68, "examples"], [68, null]], "Quantum-chemical property prediction with GNNs": [[69, "Quantum-chemical-property-prediction-with-GNNs"]], "Loading the dataset": [[69, "Loading-the-dataset"]], "Graph Neural Network module": [[69, "Graph-Neural-Network-module"]], "Model training": [[69, "Model-training"]], "Notes and next steps": [[69, "Notes-and-next-steps"]], "Benchmarking mlx-graphs": [[70, "Benchmarking-mlx-graphs"]], "mlx-graphs (MXG) implementation": [[70, "mlx-graphs-(MXG)-implementation"]], "PyG implementation": [[70, "PyG-implementation"]], "DGL implementation": [[70, "DGL-implementation"]], "Benchmark": [[70, "Benchmark"]], "Graph Classification": [[71, "Graph-Classification"]], "Dataset": [[71, "Dataset"]], "GCN model": [[71, "GCN-model"]], "Quickstart": [[72, "quickstart"]], "Representing Graphs": [[72, "representing-graphs"]], "Simple Graphs": [[72, "simple-graphs"]], "Graphs with Custom Attributes": [[72, "graphs-with-custom-attributes"]], "Operations on graphs": [[72, "operations-on-graphs"]], "Batching": [[72, "batching"]], "Datasets and Data loaders": [[72, "datasets-and-data-loaders"]], "GNN Layers": [[72, "gnn-layers"]]}, "indexentries": {"graphdata (class in mlx_graphs.data.data)": [[0, "mlx_graphs.data.data.GraphData"]], "__cat_dim__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__cat_dim__"]], "__inc__() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.__inc__"]], "num_edge_classes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_edge_classes"]], "num_edge_features (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_edge_features"]], "num_edges (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_edges"]], "num_graph_classes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_graph_classes"]], "num_graph_features (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_graph_features"]], "num_node_classes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_node_classes"]], "num_node_features (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_node_features"]], "num_nodes (mlx_graphs.data.data.graphdata property)": [[0, "mlx_graphs.data.data.GraphData.num_nodes"]], "to_dict() (mlx_graphs.data.data.graphdata method)": [[0, "mlx_graphs.data.data.GraphData.to_dict"]], "graphdatabatch (class in mlx_graphs.data.batch)": [[1, "mlx_graphs.data.batch.GraphDataBatch"]], "__init__() (mlx_graphs.data.batch.graphdatabatch method)": [[1, "mlx_graphs.data.batch.GraphDataBatch.__init__"]], "batch() (in module mlx_graphs.data.batch)": [[2, "mlx_graphs.data.batch.batch"]], "unbatch() (in module mlx_graphs.data.batch)": [[3, "mlx_graphs.data.batch.unbatch"]], "collate() (in module mlx_graphs.data.collate)": [[4, "mlx_graphs.data.collate.collate"]], "validate_list_of_graph_data() (in module mlx_graphs.data.utils)": [[5, "mlx_graphs.data.utils.validate_list_of_graph_data"]], "dataset (class in mlx_graphs.datasets)": [[10, "mlx_graphs.datasets.Dataset"]], "download() (mlx_graphs.datasets.dataset method)": [[10, "mlx_graphs.datasets.Dataset.download"]], "name (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.name"]], "num_edge_classes (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_edge_classes"]], "num_edge_features (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_edge_features"]], "num_graph_classes (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_graph_classes"]], "num_graph_features (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_graph_features"]], "num_graphs (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_graphs"]], "num_node_classes (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_node_classes"]], "num_node_features (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.num_node_features"]], "process() (mlx_graphs.datasets.dataset method)": [[10, "mlx_graphs.datasets.Dataset.process"]], "processed_path (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.processed_path"]], "raw_path (mlx_graphs.datasets.dataset property)": [[10, "mlx_graphs.datasets.Dataset.raw_path"]], "karateclubdataset (class in mlx_graphs.datasets)": [[11, "mlx_graphs.datasets.KarateClubDataset"]], "download() (mlx_graphs.datasets.karateclubdataset method)": [[11, "mlx_graphs.datasets.KarateClubDataset.download"]], "process() (mlx_graphs.datasets.karateclubdataset method)": [[11, "mlx_graphs.datasets.KarateClubDataset.process"]], "qm7bdataset (class in mlx_graphs.datasets)": [[12, "mlx_graphs.datasets.QM7bDataset"]], "download() (mlx_graphs.datasets.qm7bdataset method)": [[12, "mlx_graphs.datasets.QM7bDataset.download"]], "process() (mlx_graphs.datasets.qm7bdataset method)": [[12, "mlx_graphs.datasets.QM7bDataset.process"]], "superpixeldataset (class in mlx_graphs.datasets)": [[13, "mlx_graphs.datasets.SuperPixelDataset"]], "download() (mlx_graphs.datasets.superpixeldataset method)": [[13, "mlx_graphs.datasets.SuperPixelDataset.download"]], "process() (mlx_graphs.datasets.superpixeldataset method)": [[13, "mlx_graphs.datasets.SuperPixelDataset.process"]], "tudataset (class in mlx_graphs.datasets)": [[14, "mlx_graphs.datasets.TUDataset"]], "download() (mlx_graphs.datasets.tudataset method)": [[14, "mlx_graphs.datasets.TUDataset.download"]], "process() (mlx_graphs.datasets.tudataset method)": [[14, "mlx_graphs.datasets.TUDataset.process"]], "processed_path (mlx_graphs.datasets.tudataset property)": [[14, "mlx_graphs.datasets.TUDataset.processed_path"]], "raw_path (mlx_graphs.datasets.tudataset property)": [[14, "mlx_graphs.datasets.TUDataset.raw_path"]], "dataloader (class in mlx_graphs.loaders)": [[16, "mlx_graphs.loaders.Dataloader"]], "__init__() (mlx_graphs.loaders.dataloader method)": [[16, "mlx_graphs.loaders.Dataloader.__init__"]], "gatconv (class in mlx_graphs.nn)": [[18, "mlx_graphs.nn.GATConv"]], "__call__() (mlx_graphs.nn.gatconv method)": [[18, "mlx_graphs.nn.GATConv.__call__"]], "message() (mlx_graphs.nn.gatconv method)": [[18, "mlx_graphs.nn.GATConv.message"]], "gcnconv (class in mlx_graphs.nn)": [[19, "mlx_graphs.nn.GCNConv"]], "__call__() (mlx_graphs.nn.gcnconv method)": [[19, "mlx_graphs.nn.GCNConv.__call__"]], "ginconv (class in mlx_graphs.nn)": [[20, "mlx_graphs.nn.GINConv"]], "__call__() (mlx_graphs.nn.ginconv method)": [[20, "mlx_graphs.nn.GINConv.__call__"]], "generalizedrelationalconv (class in mlx_graphs.nn)": [[21, "mlx_graphs.nn.GeneralizedRelationalConv"]], "__call__() (mlx_graphs.nn.generalizedrelationalconv method)": [[21, "mlx_graphs.nn.GeneralizedRelationalConv.__call__"]], "aggregate() (mlx_graphs.nn.generalizedrelationalconv method)": [[21, "mlx_graphs.nn.GeneralizedRelationalConv.aggregate"]], "message() (mlx_graphs.nn.generalizedrelationalconv method)": [[21, "mlx_graphs.nn.GeneralizedRelationalConv.message"]], "update_nodes() (mlx_graphs.nn.generalizedrelationalconv method)": [[21, "mlx_graphs.nn.GeneralizedRelationalConv.update_nodes"]], "graphnetworkblock (class in mlx_graphs.nn)": [[22, "mlx_graphs.nn.GraphNetworkBlock"]], "__call__() (mlx_graphs.nn.graphnetworkblock method)": [[22, "mlx_graphs.nn.GraphNetworkBlock.__call__"]], "linear (class in mlx_graphs.nn)": [[23, "mlx_graphs.nn.Linear"]], "__call__() (mlx_graphs.nn.linear method)": [[23, "mlx_graphs.nn.Linear.__call__"]], "messagepassing (class in mlx_graphs.nn)": [[24, "mlx_graphs.nn.MessagePassing"]], "__call__() (mlx_graphs.nn.messagepassing method)": [[24, "mlx_graphs.nn.MessagePassing.__call__"]], "aggregate() (mlx_graphs.nn.messagepassing method)": [[24, "mlx_graphs.nn.MessagePassing.aggregate"]], "message() (mlx_graphs.nn.messagepassing method)": [[24, "mlx_graphs.nn.MessagePassing.message"]], "propagate() (mlx_graphs.nn.messagepassing method)": [[24, "mlx_graphs.nn.MessagePassing.propagate"]], "update_nodes() (mlx_graphs.nn.messagepassing method)": [[24, "mlx_graphs.nn.MessagePassing.update_nodes"]], "sageconv (class in mlx_graphs.nn)": [[25, "mlx_graphs.nn.SAGEConv"]], "__call__() (mlx_graphs.nn.sageconv method)": [[25, "mlx_graphs.nn.SAGEConv.__call__"]], "__call__() (mlx_graphs.nn.global_add_pool method)": [[26, "mlx_graphs.nn.global_add_pool.__call__"]], "global_add_pool (class in mlx_graphs.nn)": [[26, "mlx_graphs.nn.global_add_pool"]], "__call__() (mlx_graphs.nn.global_max_pool method)": [[27, "mlx_graphs.nn.global_max_pool.__call__"]], "global_max_pool (class in mlx_graphs.nn)": [[27, "mlx_graphs.nn.global_max_pool"]], "__call__() (mlx_graphs.nn.global_mean_pool method)": [[28, "mlx_graphs.nn.global_mean_pool.__call__"]], "global_mean_pool (class in mlx_graphs.nn)": [[28, "mlx_graphs.nn.global_mean_pool"]], "broadcast() (in module mlx_graphs.utils.array_ops)": [[30, "mlx_graphs.utils.array_ops.broadcast"]], "expand() (in module mlx_graphs.utils.array_ops)": [[31, "mlx_graphs.utils.array_ops.expand"]], "one_hot() (in module mlx_graphs.utils.array_ops)": [[32, "mlx_graphs.utils.array_ops.one_hot"]], "to_networkx() (in module mlx_graphs.utils.convert)": [[33, "mlx_graphs.utils.convert.to_networkx"]], "degree() (in module mlx_graphs.utils.scatter)": [[34, "mlx_graphs.utils.scatter.degree"]], "invert_sqrt_degree() (in module mlx_graphs.utils.scatter)": [[35, "mlx_graphs.utils.scatter.invert_sqrt_degree"]], "scatter() (in module mlx_graphs.utils.scatter)": [[36, "mlx_graphs.utils.scatter.scatter"]], "scatter_add() (in module mlx_graphs.utils.scatter)": [[37, "mlx_graphs.utils.scatter.scatter_add"]], "scatter_max() (in module mlx_graphs.utils.scatter)": [[38, "mlx_graphs.utils.scatter.scatter_max"]], "scatter_mean() (in module mlx_graphs.utils.scatter)": [[39, "mlx_graphs.utils.scatter.scatter_mean"]], "scatter_softmax() (in module mlx_graphs.utils.scatter)": [[40, "mlx_graphs.utils.scatter.scatter_softmax"]], "sort_edge_index() (in module mlx_graphs.utils.sorting)": [[41, "mlx_graphs.utils.sorting.sort_edge_index"]], "sort_edge_index_and_features() (in module mlx_graphs.utils.sorting)": [[42, "mlx_graphs.utils.sorting.sort_edge_index_and_features"]], "get_num_hops() (in module mlx_graphs.utils.topology)": [[43, "mlx_graphs.utils.topology.get_num_hops"]], "is_directed() (in module mlx_graphs.utils.topology)": [[44, "mlx_graphs.utils.topology.is_directed"]], "is_undirected() (in module mlx_graphs.utils.topology)": [[45, "mlx_graphs.utils.topology.is_undirected"]], "add_self_loops() (in module mlx_graphs.utils.transformations)": [[46, "mlx_graphs.utils.transformations.add_self_loops"]], "get_src_dst_features() (in module mlx_graphs.utils.transformations)": [[47, "mlx_graphs.utils.transformations.get_src_dst_features"]], "get_unique_edge_indices() (in module mlx_graphs.utils.transformations)": [[48, "mlx_graphs.utils.transformations.get_unique_edge_indices"]], "remove_duplicate_directed_edges() (in module mlx_graphs.utils.transformations)": [[49, "mlx_graphs.utils.transformations.remove_duplicate_directed_edges"]], "remove_self_loops() (in module mlx_graphs.utils.transformations)": [[50, "mlx_graphs.utils.transformations.remove_self_loops"]], "to_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[51, "mlx_graphs.utils.transformations.to_adjacency_matrix"]], "to_edge_index() (in module mlx_graphs.utils.transformations)": [[52, "mlx_graphs.utils.transformations.to_edge_index"]], "to_sparse_adjacency_matrix() (in module mlx_graphs.utils.transformations)": [[53, "mlx_graphs.utils.transformations.to_sparse_adjacency_matrix"]], "to_undirected() (in module mlx_graphs.utils.transformations)": [[54, "mlx_graphs.utils.transformations.to_undirected"]], "validate_adjacency_matrix() (in module mlx_graphs.utils.validators)": [[55, "mlx_graphs.utils.validators.validate_adjacency_matrix"]], "validate_edge_index() (in module mlx_graphs.utils.validators)": [[56, "mlx_graphs.utils.validators.validate_edge_index"]], "validate_edge_index_and_features() (in module mlx_graphs.utils.validators)": [[57, "mlx_graphs.utils.validators.validate_edge_index_and_features"]]}})